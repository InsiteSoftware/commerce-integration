//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Insite.WIS.Epicor.Epicor9DynamicQueryService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DynamicQueryServiceSoap", Namespace="http://epicor.com/webservices/")]
    public partial class DynamicQueryService : Microsoft.Web.Services3.WebServicesClientProtocol
    {
        
        private System.Threading.SendOrPostCallback AddCalculatedFieldOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddQueryFieldOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddQueryFieldsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddQueryRelationOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddQueryRelationFieldOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddQueryTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddRelatedTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddSortByOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddWhereItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback AnalyzeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AnalyzeExOperationCompleted;
        
        private System.Threading.SendOrPostCallback BeginPagingOperationCompleted;
        
        private System.Threading.SendOrPostCallback BeginPagingForQueryIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback BeginPagingForQueryIDParametrizedOperationCompleted;
        
        private System.Threading.SendOrPostCallback BeginPagingParametrizedOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeAuthorOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckFieldsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CopyQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteUnapprovedByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback EndPagingOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteByIDParametrizedOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteDashBoardQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteDashBoardQueryPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteParametrizedOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateASPOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetASPFieldsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAvailableTableListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDashBoardQueriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDashBoardQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDBQueryByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDropDownListValuesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDropDownListValuesParametrizedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFieldInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFieldListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFiscalPeriodsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListFromLikeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNewQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNewQueryRelationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNewQueryRelationFieldOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNewWhereItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProgressDBQueryByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQueryByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQueryExecutionParametersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQueryExecutionParametersByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRelatedTablesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRowsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTableExecutionOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUnapprovedByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImportDynamicQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback osquery_onExpVarOperationCompleted;
        
        private System.Threading.SendOrPostCallback ParseTablesOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveQueryFieldsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveQueryOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DynamicQueryService() {
            this.Url = global::Insite.WIS.Epicor.Properties.Settings.Default.Insite_WindowsIntegrationPlugins_Epicor_Epicor9DynamicQueryService_DynamicQueryService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AddCalculatedFieldCompletedEventHandler AddCalculatedFieldCompleted;
        
        /// <remarks/>
        public event AddQueryFieldCompletedEventHandler AddQueryFieldCompleted;
        
        /// <remarks/>
        public event AddQueryFieldsCompletedEventHandler AddQueryFieldsCompleted;
        
        /// <remarks/>
        public event AddQueryRelationCompletedEventHandler AddQueryRelationCompleted;
        
        /// <remarks/>
        public event AddQueryRelationFieldCompletedEventHandler AddQueryRelationFieldCompleted;
        
        /// <remarks/>
        public event AddQueryTableCompletedEventHandler AddQueryTableCompleted;
        
        /// <remarks/>
        public event AddRelatedTableCompletedEventHandler AddRelatedTableCompleted;
        
        /// <remarks/>
        public event AddSortByCompletedEventHandler AddSortByCompleted;
        
        /// <remarks/>
        public event AddWhereItemCompletedEventHandler AddWhereItemCompleted;
        
        /// <remarks/>
        public event AnalyzeCompletedEventHandler AnalyzeCompleted;
        
        /// <remarks/>
        public event AnalyzeExCompletedEventHandler AnalyzeExCompleted;
        
        /// <remarks/>
        public event BeginPagingCompletedEventHandler BeginPagingCompleted;
        
        /// <remarks/>
        public event BeginPagingForQueryIDCompletedEventHandler BeginPagingForQueryIDCompleted;
        
        /// <remarks/>
        public event BeginPagingForQueryIDParametrizedCompletedEventHandler BeginPagingForQueryIDParametrizedCompleted;
        
        /// <remarks/>
        public event BeginPagingParametrizedCompletedEventHandler BeginPagingParametrizedCompleted;
        
        /// <remarks/>
        public event ChangeAuthorCompletedEventHandler ChangeAuthorCompleted;
        
        /// <remarks/>
        public event CheckFieldsCompletedEventHandler CheckFieldsCompleted;
        
        /// <remarks/>
        public event CopyQueryCompletedEventHandler CopyQueryCompleted;
        
        /// <remarks/>
        public event DeleteByIDCompletedEventHandler DeleteByIDCompleted;
        
        /// <remarks/>
        public event DeleteUnapprovedByIDCompletedEventHandler DeleteUnapprovedByIDCompleted;
        
        /// <remarks/>
        public event EndPagingCompletedEventHandler EndPagingCompleted;
        
        /// <remarks/>
        public event ExecuteCompletedEventHandler ExecuteCompleted;
        
        /// <remarks/>
        public event ExecuteByIDCompletedEventHandler ExecuteByIDCompleted;
        
        /// <remarks/>
        public event ExecuteByIDParametrizedCompletedEventHandler ExecuteByIDParametrizedCompleted;
        
        /// <remarks/>
        public event ExecuteDashBoardQueryCompletedEventHandler ExecuteDashBoardQueryCompleted;
        
        /// <remarks/>
        public event ExecuteDashBoardQueryPagedCompletedEventHandler ExecuteDashBoardQueryPagedCompleted;
        
        /// <remarks/>
        public event ExecuteParametrizedCompletedEventHandler ExecuteParametrizedCompleted;
        
        /// <remarks/>
        public event ExportCompletedEventHandler ExportCompleted;
        
        /// <remarks/>
        public event ExportByIDCompletedEventHandler ExportByIDCompleted;
        
        /// <remarks/>
        public event GenerateASPCompletedEventHandler GenerateASPCompleted;
        
        /// <remarks/>
        public event GetASPFieldsCompletedEventHandler GetASPFieldsCompleted;
        
        /// <remarks/>
        public event GetAvailableTableListCompletedEventHandler GetAvailableTableListCompleted;
        
        /// <remarks/>
        public event GetByIDCompletedEventHandler GetByIDCompleted;
        
        /// <remarks/>
        public event GetDashBoardQueriesCompletedEventHandler GetDashBoardQueriesCompleted;
        
        /// <remarks/>
        public event GetDashBoardQueryCompletedEventHandler GetDashBoardQueryCompleted;
        
        /// <remarks/>
        public event GetDBQueryByIDCompletedEventHandler GetDBQueryByIDCompleted;
        
        /// <remarks/>
        public event GetDropDownListValuesCompletedEventHandler GetDropDownListValuesCompleted;
        
        /// <remarks/>
        public event GetDropDownListValuesParametrizedCompletedEventHandler GetDropDownListValuesParametrizedCompleted;
        
        /// <remarks/>
        public event GetFieldInfoCompletedEventHandler GetFieldInfoCompleted;
        
        /// <remarks/>
        public event GetFieldListCompletedEventHandler GetFieldListCompleted;
        
        /// <remarks/>
        public event GetFiscalPeriodsCompletedEventHandler GetFiscalPeriodsCompleted;
        
        /// <remarks/>
        public event GetListCompletedEventHandler GetListCompleted;
        
        /// <remarks/>
        public event GetListFromLikeCompletedEventHandler GetListFromLikeCompleted;
        
        /// <remarks/>
        public event GetNewQueryCompletedEventHandler GetNewQueryCompleted;
        
        /// <remarks/>
        public event GetNewQueryRelationCompletedEventHandler GetNewQueryRelationCompleted;
        
        /// <remarks/>
        public event GetNewQueryRelationFieldCompletedEventHandler GetNewQueryRelationFieldCompleted;
        
        /// <remarks/>
        public event GetNewWhereItemCompletedEventHandler GetNewWhereItemCompleted;
        
        /// <remarks/>
        public event GetPageCompletedEventHandler GetPageCompleted;
        
        /// <remarks/>
        public event GetProgressDBQueryByIDCompletedEventHandler GetProgressDBQueryByIDCompleted;
        
        /// <remarks/>
        public event GetQueryByIDCompletedEventHandler GetQueryByIDCompleted;
        
        /// <remarks/>
        public event GetQueryExecutionParametersCompletedEventHandler GetQueryExecutionParametersCompleted;
        
        /// <remarks/>
        public event GetQueryExecutionParametersByIDCompletedEventHandler GetQueryExecutionParametersByIDCompleted;
        
        /// <remarks/>
        public event GetRelatedTablesCompletedEventHandler GetRelatedTablesCompleted;
        
        /// <remarks/>
        public event GetRowsCompletedEventHandler GetRowsCompleted;
        
        /// <remarks/>
        public event GetTableExecutionOrderCompletedEventHandler GetTableExecutionOrderCompleted;
        
        /// <remarks/>
        public event GetUnapprovedByIDCompletedEventHandler GetUnapprovedByIDCompleted;
        
        /// <remarks/>
        public event ImportDynamicQueryCompletedEventHandler ImportDynamicQueryCompleted;
        
        /// <remarks/>
        public event osquery_onExpVarCompletedEventHandler osquery_onExpVarCompleted;
        
        /// <remarks/>
        public event ParseTablesCompletedEventHandler ParseTablesCompleted;
        
        /// <remarks/>
        public event RemoveQueryFieldsCompletedEventHandler RemoveQueryFieldsCompleted;
        
        /// <remarks/>
        public event SaveQueryCompletedEventHandler SaveQueryCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/AddCalculatedField", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QueryDesignDataSetType AddCalculatedField(string CompanyID, QueryDesignDataSetType ds, string pcQueryID, string pcName, string pcDataType, string pcFormat, string pcLabel, string pcExpression, CallContextDataSetType callContextIn, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("AddCalculatedField", new object[] {
                        CompanyID,
                        ds,
                        pcQueryID,
                        pcName,
                        pcDataType,
                        pcFormat,
                        pcLabel,
                        pcExpression,
                        callContextIn});
            callContextOut = ((CallContextDataSetType)(results[1]));
            return ((QueryDesignDataSetType)(results[0]));
        }
        
        /// <remarks/>
        public void AddCalculatedFieldAsync(string CompanyID, QueryDesignDataSetType ds, string pcQueryID, string pcName, string pcDataType, string pcFormat, string pcLabel, string pcExpression, CallContextDataSetType callContextIn) {
            this.AddCalculatedFieldAsync(CompanyID, ds, pcQueryID, pcName, pcDataType, pcFormat, pcLabel, pcExpression, callContextIn, null);
        }
        
        /// <remarks/>
        public void AddCalculatedFieldAsync(string CompanyID, QueryDesignDataSetType ds, string pcQueryID, string pcName, string pcDataType, string pcFormat, string pcLabel, string pcExpression, CallContextDataSetType callContextIn, object userState) {
            if ((this.AddCalculatedFieldOperationCompleted == null)) {
                this.AddCalculatedFieldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCalculatedFieldOperationCompleted);
            }
            this.InvokeAsync("AddCalculatedField", new object[] {
                        CompanyID,
                        ds,
                        pcQueryID,
                        pcName,
                        pcDataType,
                        pcFormat,
                        pcLabel,
                        pcExpression,
                        callContextIn}, this.AddCalculatedFieldOperationCompleted, userState);
        }
        
        private void OnAddCalculatedFieldOperationCompleted(object arg) {
            if ((this.AddCalculatedFieldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCalculatedFieldCompleted(this, new AddCalculatedFieldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/AddQueryField", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QueryDesignDataSetType AddQueryField(string CompanyID, QueryDesignDataSetType ds, string pcQueryID, string pcTableID, string pcField, CallContextDataSetType callContextIn, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("AddQueryField", new object[] {
                        CompanyID,
                        ds,
                        pcQueryID,
                        pcTableID,
                        pcField,
                        callContextIn});
            callContextOut = ((CallContextDataSetType)(results[1]));
            return ((QueryDesignDataSetType)(results[0]));
        }
        
        /// <remarks/>
        public void AddQueryFieldAsync(string CompanyID, QueryDesignDataSetType ds, string pcQueryID, string pcTableID, string pcField, CallContextDataSetType callContextIn) {
            this.AddQueryFieldAsync(CompanyID, ds, pcQueryID, pcTableID, pcField, callContextIn, null);
        }
        
        /// <remarks/>
        public void AddQueryFieldAsync(string CompanyID, QueryDesignDataSetType ds, string pcQueryID, string pcTableID, string pcField, CallContextDataSetType callContextIn, object userState) {
            if ((this.AddQueryFieldOperationCompleted == null)) {
                this.AddQueryFieldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddQueryFieldOperationCompleted);
            }
            this.InvokeAsync("AddQueryField", new object[] {
                        CompanyID,
                        ds,
                        pcQueryID,
                        pcTableID,
                        pcField,
                        callContextIn}, this.AddQueryFieldOperationCompleted, userState);
        }
        
        private void OnAddQueryFieldOperationCompleted(object arg) {
            if ((this.AddQueryFieldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddQueryFieldCompleted(this, new AddQueryFieldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/AddQueryFields", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QueryDesignDataSetType AddQueryFields(string CompanyID, QueryDesignDataSetType ds, string pcQueryID, CallContextDataSetType callContextIn, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("AddQueryFields", new object[] {
                        CompanyID,
                        ds,
                        pcQueryID,
                        callContextIn});
            callContextOut = ((CallContextDataSetType)(results[1]));
            return ((QueryDesignDataSetType)(results[0]));
        }
        
        /// <remarks/>
        public void AddQueryFieldsAsync(string CompanyID, QueryDesignDataSetType ds, string pcQueryID, CallContextDataSetType callContextIn) {
            this.AddQueryFieldsAsync(CompanyID, ds, pcQueryID, callContextIn, null);
        }
        
        /// <remarks/>
        public void AddQueryFieldsAsync(string CompanyID, QueryDesignDataSetType ds, string pcQueryID, CallContextDataSetType callContextIn, object userState) {
            if ((this.AddQueryFieldsOperationCompleted == null)) {
                this.AddQueryFieldsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddQueryFieldsOperationCompleted);
            }
            this.InvokeAsync("AddQueryFields", new object[] {
                        CompanyID,
                        ds,
                        pcQueryID,
                        callContextIn}, this.AddQueryFieldsOperationCompleted, userState);
        }
        
        private void OnAddQueryFieldsOperationCompleted(object arg) {
            if ((this.AddQueryFieldsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddQueryFieldsCompleted(this, new AddQueryFieldsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/AddQueryRelation", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QueryDesignDataSetType AddQueryRelation(string CompanyID, QueryDesignDataSetType ds, string pcQueryID, string pcRelationID, string pcParentAlias, string pcKey, string pcChildAlias, string pcWhichItem, bool isOuterJoin, CallContextDataSetType callContextIn, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("AddQueryRelation", new object[] {
                        CompanyID,
                        ds,
                        pcQueryID,
                        pcRelationID,
                        pcParentAlias,
                        pcKey,
                        pcChildAlias,
                        pcWhichItem,
                        isOuterJoin,
                        callContextIn});
            callContextOut = ((CallContextDataSetType)(results[1]));
            return ((QueryDesignDataSetType)(results[0]));
        }
        
        /// <remarks/>
        public void AddQueryRelationAsync(string CompanyID, QueryDesignDataSetType ds, string pcQueryID, string pcRelationID, string pcParentAlias, string pcKey, string pcChildAlias, string pcWhichItem, bool isOuterJoin, CallContextDataSetType callContextIn) {
            this.AddQueryRelationAsync(CompanyID, ds, pcQueryID, pcRelationID, pcParentAlias, pcKey, pcChildAlias, pcWhichItem, isOuterJoin, callContextIn, null);
        }
        
        /// <remarks/>
        public void AddQueryRelationAsync(string CompanyID, QueryDesignDataSetType ds, string pcQueryID, string pcRelationID, string pcParentAlias, string pcKey, string pcChildAlias, string pcWhichItem, bool isOuterJoin, CallContextDataSetType callContextIn, object userState) {
            if ((this.AddQueryRelationOperationCompleted == null)) {
                this.AddQueryRelationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddQueryRelationOperationCompleted);
            }
            this.InvokeAsync("AddQueryRelation", new object[] {
                        CompanyID,
                        ds,
                        pcQueryID,
                        pcRelationID,
                        pcParentAlias,
                        pcKey,
                        pcChildAlias,
                        pcWhichItem,
                        isOuterJoin,
                        callContextIn}, this.AddQueryRelationOperationCompleted, userState);
        }
        
        private void OnAddQueryRelationOperationCompleted(object arg) {
            if ((this.AddQueryRelationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddQueryRelationCompleted(this, new AddQueryRelationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/AddQueryRelationField", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QueryDesignDataSetType AddQueryRelationField(string CompanyID, QueryDesignDataSetType ds, string pcQueryID, string pcRelationID, string pcParentField, string pcChildField, CallContextDataSetType callContextIn, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("AddQueryRelationField", new object[] {
                        CompanyID,
                        ds,
                        pcQueryID,
                        pcRelationID,
                        pcParentField,
                        pcChildField,
                        callContextIn});
            callContextOut = ((CallContextDataSetType)(results[1]));
            return ((QueryDesignDataSetType)(results[0]));
        }
        
        /// <remarks/>
        public void AddQueryRelationFieldAsync(string CompanyID, QueryDesignDataSetType ds, string pcQueryID, string pcRelationID, string pcParentField, string pcChildField, CallContextDataSetType callContextIn) {
            this.AddQueryRelationFieldAsync(CompanyID, ds, pcQueryID, pcRelationID, pcParentField, pcChildField, callContextIn, null);
        }
        
        /// <remarks/>
        public void AddQueryRelationFieldAsync(string CompanyID, QueryDesignDataSetType ds, string pcQueryID, string pcRelationID, string pcParentField, string pcChildField, CallContextDataSetType callContextIn, object userState) {
            if ((this.AddQueryRelationFieldOperationCompleted == null)) {
                this.AddQueryRelationFieldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddQueryRelationFieldOperationCompleted);
            }
            this.InvokeAsync("AddQueryRelationField", new object[] {
                        CompanyID,
                        ds,
                        pcQueryID,
                        pcRelationID,
                        pcParentField,
                        pcChildField,
                        callContextIn}, this.AddQueryRelationFieldOperationCompleted, userState);
        }
        
        private void OnAddQueryRelationFieldOperationCompleted(object arg) {
            if ((this.AddQueryRelationFieldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddQueryRelationFieldCompleted(this, new AddQueryRelationFieldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/AddQueryTable", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QueryDesignDataSetType AddQueryTable(string CompanyID, QueryDesignDataSetType ds, string pcQueryID, string pcTableID, bool pbIsSummary, CallContextDataSetType callContextIn, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("AddQueryTable", new object[] {
                        CompanyID,
                        ds,
                        pcQueryID,
                        pcTableID,
                        pbIsSummary,
                        callContextIn});
            callContextOut = ((CallContextDataSetType)(results[1]));
            return ((QueryDesignDataSetType)(results[0]));
        }
        
        /// <remarks/>
        public void AddQueryTableAsync(string CompanyID, QueryDesignDataSetType ds, string pcQueryID, string pcTableID, bool pbIsSummary, CallContextDataSetType callContextIn) {
            this.AddQueryTableAsync(CompanyID, ds, pcQueryID, pcTableID, pbIsSummary, callContextIn, null);
        }
        
        /// <remarks/>
        public void AddQueryTableAsync(string CompanyID, QueryDesignDataSetType ds, string pcQueryID, string pcTableID, bool pbIsSummary, CallContextDataSetType callContextIn, object userState) {
            if ((this.AddQueryTableOperationCompleted == null)) {
                this.AddQueryTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddQueryTableOperationCompleted);
            }
            this.InvokeAsync("AddQueryTable", new object[] {
                        CompanyID,
                        ds,
                        pcQueryID,
                        pcTableID,
                        pbIsSummary,
                        callContextIn}, this.AddQueryTableOperationCompleted, userState);
        }
        
        private void OnAddQueryTableOperationCompleted(object arg) {
            if ((this.AddQueryTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddQueryTableCompleted(this, new AddQueryTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/AddRelatedTable", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QueryDesignDataSetType AddRelatedTable(string CompanyID, QueryDesignDataSetType ds, string pcQueryID, string pcMainTable, string pcRelatedTable, string pcWhichItem, bool isSummary, bool isOuterJoin, CallContextDataSetType callContextIn, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("AddRelatedTable", new object[] {
                        CompanyID,
                        ds,
                        pcQueryID,
                        pcMainTable,
                        pcRelatedTable,
                        pcWhichItem,
                        isSummary,
                        isOuterJoin,
                        callContextIn});
            callContextOut = ((CallContextDataSetType)(results[1]));
            return ((QueryDesignDataSetType)(results[0]));
        }
        
        /// <remarks/>
        public void AddRelatedTableAsync(string CompanyID, QueryDesignDataSetType ds, string pcQueryID, string pcMainTable, string pcRelatedTable, string pcWhichItem, bool isSummary, bool isOuterJoin, CallContextDataSetType callContextIn) {
            this.AddRelatedTableAsync(CompanyID, ds, pcQueryID, pcMainTable, pcRelatedTable, pcWhichItem, isSummary, isOuterJoin, callContextIn, null);
        }
        
        /// <remarks/>
        public void AddRelatedTableAsync(string CompanyID, QueryDesignDataSetType ds, string pcQueryID, string pcMainTable, string pcRelatedTable, string pcWhichItem, bool isSummary, bool isOuterJoin, CallContextDataSetType callContextIn, object userState) {
            if ((this.AddRelatedTableOperationCompleted == null)) {
                this.AddRelatedTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddRelatedTableOperationCompleted);
            }
            this.InvokeAsync("AddRelatedTable", new object[] {
                        CompanyID,
                        ds,
                        pcQueryID,
                        pcMainTable,
                        pcRelatedTable,
                        pcWhichItem,
                        isSummary,
                        isOuterJoin,
                        callContextIn}, this.AddRelatedTableOperationCompleted, userState);
        }
        
        private void OnAddRelatedTableOperationCompleted(object arg) {
            if ((this.AddRelatedTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddRelatedTableCompleted(this, new AddRelatedTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/AddSortBy", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QueryDesignDataSetType AddSortBy(string CompanyID, QueryDesignDataSetType ds, string pcQueryID, string pcTable, string pcField, bool pbAscending, CallContextDataSetType callContextIn, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("AddSortBy", new object[] {
                        CompanyID,
                        ds,
                        pcQueryID,
                        pcTable,
                        pcField,
                        pbAscending,
                        callContextIn});
            callContextOut = ((CallContextDataSetType)(results[1]));
            return ((QueryDesignDataSetType)(results[0]));
        }
        
        /// <remarks/>
        public void AddSortByAsync(string CompanyID, QueryDesignDataSetType ds, string pcQueryID, string pcTable, string pcField, bool pbAscending, CallContextDataSetType callContextIn) {
            this.AddSortByAsync(CompanyID, ds, pcQueryID, pcTable, pcField, pbAscending, callContextIn, null);
        }
        
        /// <remarks/>
        public void AddSortByAsync(string CompanyID, QueryDesignDataSetType ds, string pcQueryID, string pcTable, string pcField, bool pbAscending, CallContextDataSetType callContextIn, object userState) {
            if ((this.AddSortByOperationCompleted == null)) {
                this.AddSortByOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSortByOperationCompleted);
            }
            this.InvokeAsync("AddSortBy", new object[] {
                        CompanyID,
                        ds,
                        pcQueryID,
                        pcTable,
                        pcField,
                        pbAscending,
                        callContextIn}, this.AddSortByOperationCompleted, userState);
        }
        
        private void OnAddSortByOperationCompleted(object arg) {
            if ((this.AddSortByCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSortByCompleted(this, new AddSortByCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/AddWhereItem", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QueryDesignDataSetType AddWhereItem(
                    string CompanyID, 
                    QueryDesignDataSetType ds, 
                    string pcQueryID, 
                    string pcTable, 
                    string pcField, 
                    string pcCondition, 
                    bool pbIsConst, 
                    string pcValue, 
                    string pcToTable, 
                    string pcToField, 
                    string pcLeftParentheses, 
                    string pcRightParentheses, 
                    string pcAndOr, 
                    bool pbNeg, 
                    CallContextDataSetType callContextIn, 
                    out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("AddWhereItem", new object[] {
                        CompanyID,
                        ds,
                        pcQueryID,
                        pcTable,
                        pcField,
                        pcCondition,
                        pbIsConst,
                        pcValue,
                        pcToTable,
                        pcToField,
                        pcLeftParentheses,
                        pcRightParentheses,
                        pcAndOr,
                        pbNeg,
                        callContextIn});
            callContextOut = ((CallContextDataSetType)(results[1]));
            return ((QueryDesignDataSetType)(results[0]));
        }
        
        /// <remarks/>
        public void AddWhereItemAsync(string CompanyID, QueryDesignDataSetType ds, string pcQueryID, string pcTable, string pcField, string pcCondition, bool pbIsConst, string pcValue, string pcToTable, string pcToField, string pcLeftParentheses, string pcRightParentheses, string pcAndOr, bool pbNeg, CallContextDataSetType callContextIn) {
            this.AddWhereItemAsync(CompanyID, ds, pcQueryID, pcTable, pcField, pcCondition, pbIsConst, pcValue, pcToTable, pcToField, pcLeftParentheses, pcRightParentheses, pcAndOr, pbNeg, callContextIn, null);
        }
        
        /// <remarks/>
        public void AddWhereItemAsync(
                    string CompanyID, 
                    QueryDesignDataSetType ds, 
                    string pcQueryID, 
                    string pcTable, 
                    string pcField, 
                    string pcCondition, 
                    bool pbIsConst, 
                    string pcValue, 
                    string pcToTable, 
                    string pcToField, 
                    string pcLeftParentheses, 
                    string pcRightParentheses, 
                    string pcAndOr, 
                    bool pbNeg, 
                    CallContextDataSetType callContextIn, 
                    object userState) {
            if ((this.AddWhereItemOperationCompleted == null)) {
                this.AddWhereItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddWhereItemOperationCompleted);
            }
            this.InvokeAsync("AddWhereItem", new object[] {
                        CompanyID,
                        ds,
                        pcQueryID,
                        pcTable,
                        pcField,
                        pcCondition,
                        pbIsConst,
                        pcValue,
                        pcToTable,
                        pcToField,
                        pcLeftParentheses,
                        pcRightParentheses,
                        pcAndOr,
                        pbNeg,
                        callContextIn}, this.AddWhereItemOperationCompleted, userState);
        }
        
        private void OnAddWhereItemOperationCompleted(object arg) {
            if ((this.AddWhereItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddWhereItemCompleted(this, new AddWhereItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/Analyze", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QueryDesignDataSetType Analyze(string CompanyID, QueryDesignDataSetType ds, CallContextDataSetType callContextIn, out bool bSuccess, out string pcMessage, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("Analyze", new object[] {
                        CompanyID,
                        ds,
                        callContextIn});
            bSuccess = ((bool)(results[1]));
            pcMessage = ((string)(results[2]));
            callContextOut = ((CallContextDataSetType)(results[3]));
            return ((QueryDesignDataSetType)(results[0]));
        }
        
        /// <remarks/>
        public void AnalyzeAsync(string CompanyID, QueryDesignDataSetType ds, CallContextDataSetType callContextIn) {
            this.AnalyzeAsync(CompanyID, ds, callContextIn, null);
        }
        
        /// <remarks/>
        public void AnalyzeAsync(string CompanyID, QueryDesignDataSetType ds, CallContextDataSetType callContextIn, object userState) {
            if ((this.AnalyzeOperationCompleted == null)) {
                this.AnalyzeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAnalyzeOperationCompleted);
            }
            this.InvokeAsync("Analyze", new object[] {
                        CompanyID,
                        ds,
                        callContextIn}, this.AnalyzeOperationCompleted, userState);
        }
        
        private void OnAnalyzeOperationCompleted(object arg) {
            if ((this.AnalyzeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AnalyzeCompleted(this, new AnalyzeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/AnalyzeEx", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QueryDesignDataSetType AnalyzeEx(string CompanyID, QueryDesignDataSetType ds, string cBOSource, string cBOName, CallContextDataSetType callContextIn, out bool bSuccess, out string pcMessage, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("AnalyzeEx", new object[] {
                        CompanyID,
                        ds,
                        cBOSource,
                        cBOName,
                        callContextIn});
            bSuccess = ((bool)(results[1]));
            pcMessage = ((string)(results[2]));
            callContextOut = ((CallContextDataSetType)(results[3]));
            return ((QueryDesignDataSetType)(results[0]));
        }
        
        /// <remarks/>
        public void AnalyzeExAsync(string CompanyID, QueryDesignDataSetType ds, string cBOSource, string cBOName, CallContextDataSetType callContextIn) {
            this.AnalyzeExAsync(CompanyID, ds, cBOSource, cBOName, callContextIn, null);
        }
        
        /// <remarks/>
        public void AnalyzeExAsync(string CompanyID, QueryDesignDataSetType ds, string cBOSource, string cBOName, CallContextDataSetType callContextIn, object userState) {
            if ((this.AnalyzeExOperationCompleted == null)) {
                this.AnalyzeExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAnalyzeExOperationCompleted);
            }
            this.InvokeAsync("AnalyzeEx", new object[] {
                        CompanyID,
                        ds,
                        cBOSource,
                        cBOName,
                        callContextIn}, this.AnalyzeExOperationCompleted, userState);
        }
        
        private void OnAnalyzeExOperationCompleted(object arg) {
            if ((this.AnalyzeExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AnalyzeExCompleted(this, new AnalyzeExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/BeginPaging", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode BeginPaging(string CompanyID, QueryDesignDataSetType ds, int pageSize, CallContextDataSetType callContextIn, out string pagedQueryToken, out int totalRowCount, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("BeginPaging", new object[] {
                        CompanyID,
                        ds,
                        pageSize,
                        callContextIn});
            pagedQueryToken = ((string)(results[1]));
            totalRowCount = ((int)(results[2]));
            callContextOut = ((CallContextDataSetType)(results[3]));
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void BeginPagingAsync(string CompanyID, QueryDesignDataSetType ds, int pageSize, CallContextDataSetType callContextIn) {
            this.BeginPagingAsync(CompanyID, ds, pageSize, callContextIn, null);
        }
        
        /// <remarks/>
        public void BeginPagingAsync(string CompanyID, QueryDesignDataSetType ds, int pageSize, CallContextDataSetType callContextIn, object userState) {
            if ((this.BeginPagingOperationCompleted == null)) {
                this.BeginPagingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBeginPagingOperationCompleted);
            }
            this.InvokeAsync("BeginPaging", new object[] {
                        CompanyID,
                        ds,
                        pageSize,
                        callContextIn}, this.BeginPagingOperationCompleted, userState);
        }
        
        private void OnBeginPagingOperationCompleted(object arg) {
            if ((this.BeginPagingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BeginPagingCompleted(this, new BeginPagingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/BeginPagingForQueryID", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode BeginPagingForQueryID(string CompanyID, string queryID, int pageSize, CallContextDataSetType callContextIn, out string pagedQueryToken, out int totalRowCount, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("BeginPagingForQueryID", new object[] {
                        CompanyID,
                        queryID,
                        pageSize,
                        callContextIn});
            pagedQueryToken = ((string)(results[1]));
            totalRowCount = ((int)(results[2]));
            callContextOut = ((CallContextDataSetType)(results[3]));
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void BeginPagingForQueryIDAsync(string CompanyID, string queryID, int pageSize, CallContextDataSetType callContextIn) {
            this.BeginPagingForQueryIDAsync(CompanyID, queryID, pageSize, callContextIn, null);
        }
        
        /// <remarks/>
        public void BeginPagingForQueryIDAsync(string CompanyID, string queryID, int pageSize, CallContextDataSetType callContextIn, object userState) {
            if ((this.BeginPagingForQueryIDOperationCompleted == null)) {
                this.BeginPagingForQueryIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBeginPagingForQueryIDOperationCompleted);
            }
            this.InvokeAsync("BeginPagingForQueryID", new object[] {
                        CompanyID,
                        queryID,
                        pageSize,
                        callContextIn}, this.BeginPagingForQueryIDOperationCompleted, userState);
        }
        
        private void OnBeginPagingForQueryIDOperationCompleted(object arg) {
            if ((this.BeginPagingForQueryIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BeginPagingForQueryIDCompleted(this, new BeginPagingForQueryIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/BeginPagingForQueryIDParametrized", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode BeginPagingForQueryIDParametrized(string CompanyID, string queryID, QueryExecutionDataSetType ds, string resultFieldList, int pageSize, CallContextDataSetType callContextIn, out string pagedQueryToken, out int totalRowCount, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("BeginPagingForQueryIDParametrized", new object[] {
                        CompanyID,
                        queryID,
                        ds,
                        resultFieldList,
                        pageSize,
                        callContextIn});
            pagedQueryToken = ((string)(results[1]));
            totalRowCount = ((int)(results[2]));
            callContextOut = ((CallContextDataSetType)(results[3]));
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void BeginPagingForQueryIDParametrizedAsync(string CompanyID, string queryID, QueryExecutionDataSetType ds, string resultFieldList, int pageSize, CallContextDataSetType callContextIn) {
            this.BeginPagingForQueryIDParametrizedAsync(CompanyID, queryID, ds, resultFieldList, pageSize, callContextIn, null);
        }
        
        /// <remarks/>
        public void BeginPagingForQueryIDParametrizedAsync(string CompanyID, string queryID, QueryExecutionDataSetType ds, string resultFieldList, int pageSize, CallContextDataSetType callContextIn, object userState) {
            if ((this.BeginPagingForQueryIDParametrizedOperationCompleted == null)) {
                this.BeginPagingForQueryIDParametrizedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBeginPagingForQueryIDParametrizedOperationCompleted);
            }
            this.InvokeAsync("BeginPagingForQueryIDParametrized", new object[] {
                        CompanyID,
                        queryID,
                        ds,
                        resultFieldList,
                        pageSize,
                        callContextIn}, this.BeginPagingForQueryIDParametrizedOperationCompleted, userState);
        }
        
        private void OnBeginPagingForQueryIDParametrizedOperationCompleted(object arg) {
            if ((this.BeginPagingForQueryIDParametrizedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BeginPagingForQueryIDParametrizedCompleted(this, new BeginPagingForQueryIDParametrizedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/BeginPagingParametrized", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode BeginPagingParametrized(string CompanyID, QueryDesignDataSetType ds, QueryExecutionDataSetType ds1, string resultFieldList, int pageSize, CallContextDataSetType callContextIn, out string pagedQueryToken, out int totalRowCount, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("BeginPagingParametrized", new object[] {
                        CompanyID,
                        ds,
                        ds1,
                        resultFieldList,
                        pageSize,
                        callContextIn});
            pagedQueryToken = ((string)(results[1]));
            totalRowCount = ((int)(results[2]));
            callContextOut = ((CallContextDataSetType)(results[3]));
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void BeginPagingParametrizedAsync(string CompanyID, QueryDesignDataSetType ds, QueryExecutionDataSetType ds1, string resultFieldList, int pageSize, CallContextDataSetType callContextIn) {
            this.BeginPagingParametrizedAsync(CompanyID, ds, ds1, resultFieldList, pageSize, callContextIn, null);
        }
        
        /// <remarks/>
        public void BeginPagingParametrizedAsync(string CompanyID, QueryDesignDataSetType ds, QueryExecutionDataSetType ds1, string resultFieldList, int pageSize, CallContextDataSetType callContextIn, object userState) {
            if ((this.BeginPagingParametrizedOperationCompleted == null)) {
                this.BeginPagingParametrizedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBeginPagingParametrizedOperationCompleted);
            }
            this.InvokeAsync("BeginPagingParametrized", new object[] {
                        CompanyID,
                        ds,
                        ds1,
                        resultFieldList,
                        pageSize,
                        callContextIn}, this.BeginPagingParametrizedOperationCompleted, userState);
        }
        
        private void OnBeginPagingParametrizedOperationCompleted(object arg) {
            if ((this.BeginPagingParametrizedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BeginPagingParametrizedCompleted(this, new BeginPagingParametrizedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/ChangeAuthor", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QueryDesignDataSetType ChangeAuthor(string CompanyID, string pcQueryID, string pcNewAuthor, CallContextDataSetType callContextIn, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("ChangeAuthor", new object[] {
                        CompanyID,
                        pcQueryID,
                        pcNewAuthor,
                        callContextIn});
            callContextOut = ((CallContextDataSetType)(results[1]));
            return ((QueryDesignDataSetType)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeAuthorAsync(string CompanyID, string pcQueryID, string pcNewAuthor, CallContextDataSetType callContextIn) {
            this.ChangeAuthorAsync(CompanyID, pcQueryID, pcNewAuthor, callContextIn, null);
        }
        
        /// <remarks/>
        public void ChangeAuthorAsync(string CompanyID, string pcQueryID, string pcNewAuthor, CallContextDataSetType callContextIn, object userState) {
            if ((this.ChangeAuthorOperationCompleted == null)) {
                this.ChangeAuthorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeAuthorOperationCompleted);
            }
            this.InvokeAsync("ChangeAuthor", new object[] {
                        CompanyID,
                        pcQueryID,
                        pcNewAuthor,
                        callContextIn}, this.ChangeAuthorOperationCompleted, userState);
        }
        
        private void OnChangeAuthorOperationCompleted(object arg) {
            if ((this.ChangeAuthorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeAuthorCompleted(this, new ChangeAuthorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/CheckFields", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QueryDesignDataSetType CheckFields(string CompanyID, QueryDesignDataSetType ds, CallContextDataSetType callContextIn, out string errFieldList, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("CheckFields", new object[] {
                        CompanyID,
                        ds,
                        callContextIn});
            errFieldList = ((string)(results[1]));
            callContextOut = ((CallContextDataSetType)(results[2]));
            return ((QueryDesignDataSetType)(results[0]));
        }
        
        /// <remarks/>
        public void CheckFieldsAsync(string CompanyID, QueryDesignDataSetType ds, CallContextDataSetType callContextIn) {
            this.CheckFieldsAsync(CompanyID, ds, callContextIn, null);
        }
        
        /// <remarks/>
        public void CheckFieldsAsync(string CompanyID, QueryDesignDataSetType ds, CallContextDataSetType callContextIn, object userState) {
            if ((this.CheckFieldsOperationCompleted == null)) {
                this.CheckFieldsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckFieldsOperationCompleted);
            }
            this.InvokeAsync("CheckFields", new object[] {
                        CompanyID,
                        ds,
                        callContextIn}, this.CheckFieldsOperationCompleted, userState);
        }
        
        private void OnCheckFieldsOperationCompleted(object arg) {
            if ((this.CheckFieldsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckFieldsCompleted(this, new CheckFieldsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/CopyQuery", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CopyQuery(string CompanyID, string pcSourceQueryID, string pcDestQueryID, CallContextDataSetType callContextIn, out bool pbSucceed, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("CopyQuery", new object[] {
                        CompanyID,
                        pcSourceQueryID,
                        pcDestQueryID,
                        callContextIn});
            pbSucceed = ((bool)(results[1]));
            callContextOut = ((CallContextDataSetType)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CopyQueryAsync(string CompanyID, string pcSourceQueryID, string pcDestQueryID, CallContextDataSetType callContextIn) {
            this.CopyQueryAsync(CompanyID, pcSourceQueryID, pcDestQueryID, callContextIn, null);
        }
        
        /// <remarks/>
        public void CopyQueryAsync(string CompanyID, string pcSourceQueryID, string pcDestQueryID, CallContextDataSetType callContextIn, object userState) {
            if ((this.CopyQueryOperationCompleted == null)) {
                this.CopyQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCopyQueryOperationCompleted);
            }
            this.InvokeAsync("CopyQuery", new object[] {
                        CompanyID,
                        pcSourceQueryID,
                        pcDestQueryID,
                        callContextIn}, this.CopyQueryOperationCompleted, userState);
        }
        
        private void OnCopyQueryOperationCompleted(object arg) {
            if ((this.CopyQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CopyQueryCompleted(this, new CopyQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/DeleteByID", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteByID(string CompanyID, string pcQueryID, CallContextDataSetType callContextIn, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("DeleteByID", new object[] {
                        CompanyID,
                        pcQueryID,
                        callContextIn});
            callContextOut = ((CallContextDataSetType)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteByIDAsync(string CompanyID, string pcQueryID, CallContextDataSetType callContextIn) {
            this.DeleteByIDAsync(CompanyID, pcQueryID, callContextIn, null);
        }
        
        /// <remarks/>
        public void DeleteByIDAsync(string CompanyID, string pcQueryID, CallContextDataSetType callContextIn, object userState) {
            if ((this.DeleteByIDOperationCompleted == null)) {
                this.DeleteByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteByIDOperationCompleted);
            }
            this.InvokeAsync("DeleteByID", new object[] {
                        CompanyID,
                        pcQueryID,
                        callContextIn}, this.DeleteByIDOperationCompleted, userState);
        }
        
        private void OnDeleteByIDOperationCompleted(object arg) {
            if ((this.DeleteByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteByIDCompleted(this, new DeleteByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/DeleteUnapprovedByID", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteUnapprovedByID(string CompanyID, string pcQueryID, CallContextDataSetType callContextIn, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("DeleteUnapprovedByID", new object[] {
                        CompanyID,
                        pcQueryID,
                        callContextIn});
            callContextOut = ((CallContextDataSetType)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteUnapprovedByIDAsync(string CompanyID, string pcQueryID, CallContextDataSetType callContextIn) {
            this.DeleteUnapprovedByIDAsync(CompanyID, pcQueryID, callContextIn, null);
        }
        
        /// <remarks/>
        public void DeleteUnapprovedByIDAsync(string CompanyID, string pcQueryID, CallContextDataSetType callContextIn, object userState) {
            if ((this.DeleteUnapprovedByIDOperationCompleted == null)) {
                this.DeleteUnapprovedByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUnapprovedByIDOperationCompleted);
            }
            this.InvokeAsync("DeleteUnapprovedByID", new object[] {
                        CompanyID,
                        pcQueryID,
                        callContextIn}, this.DeleteUnapprovedByIDOperationCompleted, userState);
        }
        
        private void OnDeleteUnapprovedByIDOperationCompleted(object arg) {
            if ((this.DeleteUnapprovedByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUnapprovedByIDCompleted(this, new DeleteUnapprovedByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/EndPaging", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool EndPaging(string CompanyID, string pagedQueryToken, CallContextDataSetType callContextIn, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("EndPaging", new object[] {
                        CompanyID,
                        pagedQueryToken,
                        callContextIn});
            callContextOut = ((CallContextDataSetType)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void EndPagingAsync(string CompanyID, string pagedQueryToken, CallContextDataSetType callContextIn) {
            this.EndPagingAsync(CompanyID, pagedQueryToken, callContextIn, null);
        }
        
        /// <remarks/>
        public void EndPagingAsync(string CompanyID, string pagedQueryToken, CallContextDataSetType callContextIn, object userState) {
            if ((this.EndPagingOperationCompleted == null)) {
                this.EndPagingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEndPagingOperationCompleted);
            }
            this.InvokeAsync("EndPaging", new object[] {
                        CompanyID,
                        pagedQueryToken,
                        callContextIn}, this.EndPagingOperationCompleted, userState);
        }
        
        private void OnEndPagingOperationCompleted(object arg) {
            if ((this.EndPagingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EndPagingCompleted(this, new EndPagingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/Execute", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode Execute(string CompanyID, QueryDesignDataSetType ds, CallContextDataSetType callContextIn, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("Execute", new object[] {
                        CompanyID,
                        ds,
                        callContextIn});
            callContextOut = ((CallContextDataSetType)(results[1]));
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteAsync(string CompanyID, QueryDesignDataSetType ds, CallContextDataSetType callContextIn) {
            this.ExecuteAsync(CompanyID, ds, callContextIn, null);
        }
        
        /// <remarks/>
        public void ExecuteAsync(string CompanyID, QueryDesignDataSetType ds, CallContextDataSetType callContextIn, object userState) {
            if ((this.ExecuteOperationCompleted == null)) {
                this.ExecuteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteOperationCompleted);
            }
            this.InvokeAsync("Execute", new object[] {
                        CompanyID,
                        ds,
                        callContextIn}, this.ExecuteOperationCompleted, userState);
        }
        
        private void OnExecuteOperationCompleted(object arg) {
            if ((this.ExecuteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteCompleted(this, new ExecuteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/ExecuteByID", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ExecuteByID(string CompanyID, string pcQueryID, CallContextDataSetType callContextIn, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("ExecuteByID", new object[] {
                        CompanyID,
                        pcQueryID,
                        callContextIn});
            callContextOut = ((CallContextDataSetType)(results[1]));
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteByIDAsync(string CompanyID, string pcQueryID, CallContextDataSetType callContextIn) {
            this.ExecuteByIDAsync(CompanyID, pcQueryID, callContextIn, null);
        }
        
        /// <remarks/>
        public void ExecuteByIDAsync(string CompanyID, string pcQueryID, CallContextDataSetType callContextIn, object userState) {
            if ((this.ExecuteByIDOperationCompleted == null)) {
                this.ExecuteByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteByIDOperationCompleted);
            }
            this.InvokeAsync("ExecuteByID", new object[] {
                        CompanyID,
                        pcQueryID,
                        callContextIn}, this.ExecuteByIDOperationCompleted, userState);
        }
        
        private void OnExecuteByIDOperationCompleted(object arg) {
            if ((this.ExecuteByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteByIDCompleted(this, new ExecuteByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/ExecuteByIDParametrized", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ExecuteByIDParametrized(string CompanyID, string pcQueryID, QueryExecutionDataSetType ds, string resultFieldList, int topNRecords, CallContextDataSetType callContextIn, out bool hasMoreRecords, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("ExecuteByIDParametrized", new object[] {
                        CompanyID,
                        pcQueryID,
                        ds,
                        resultFieldList,
                        topNRecords,
                        callContextIn});
            hasMoreRecords = ((bool)(results[1]));
            callContextOut = ((CallContextDataSetType)(results[2]));
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteByIDParametrizedAsync(string CompanyID, string pcQueryID, QueryExecutionDataSetType ds, string resultFieldList, int topNRecords, CallContextDataSetType callContextIn) {
            this.ExecuteByIDParametrizedAsync(CompanyID, pcQueryID, ds, resultFieldList, topNRecords, callContextIn, null);
        }
        
        /// <remarks/>
        public void ExecuteByIDParametrizedAsync(string CompanyID, string pcQueryID, QueryExecutionDataSetType ds, string resultFieldList, int topNRecords, CallContextDataSetType callContextIn, object userState) {
            if ((this.ExecuteByIDParametrizedOperationCompleted == null)) {
                this.ExecuteByIDParametrizedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteByIDParametrizedOperationCompleted);
            }
            this.InvokeAsync("ExecuteByIDParametrized", new object[] {
                        CompanyID,
                        pcQueryID,
                        ds,
                        resultFieldList,
                        topNRecords,
                        callContextIn}, this.ExecuteByIDParametrizedOperationCompleted, userState);
        }
        
        private void OnExecuteByIDParametrizedOperationCompleted(object arg) {
            if ((this.ExecuteByIDParametrizedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteByIDParametrizedCompleted(this, new ExecuteByIDParametrizedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/ExecuteDashBoardQuery", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ExecuteDashBoardQuery(string CompanyID, QueryDesignDataSetType ds, CallContextDataSetType callContextIn, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("ExecuteDashBoardQuery", new object[] {
                        CompanyID,
                        ds,
                        callContextIn});
            callContextOut = ((CallContextDataSetType)(results[1]));
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteDashBoardQueryAsync(string CompanyID, QueryDesignDataSetType ds, CallContextDataSetType callContextIn) {
            this.ExecuteDashBoardQueryAsync(CompanyID, ds, callContextIn, null);
        }
        
        /// <remarks/>
        public void ExecuteDashBoardQueryAsync(string CompanyID, QueryDesignDataSetType ds, CallContextDataSetType callContextIn, object userState) {
            if ((this.ExecuteDashBoardQueryOperationCompleted == null)) {
                this.ExecuteDashBoardQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteDashBoardQueryOperationCompleted);
            }
            this.InvokeAsync("ExecuteDashBoardQuery", new object[] {
                        CompanyID,
                        ds,
                        callContextIn}, this.ExecuteDashBoardQueryOperationCompleted, userState);
        }
        
        private void OnExecuteDashBoardQueryOperationCompleted(object arg) {
            if ((this.ExecuteDashBoardQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteDashBoardQueryCompleted(this, new ExecuteDashBoardQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/ExecuteDashBoardQueryPaged", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ExecuteDashBoardQueryPaged(string CompanyID, QueryDesignDataSetType ds, int piPageSize, CallContextDataSetType callContextIn, out bool pbMorePage, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("ExecuteDashBoardQueryPaged", new object[] {
                        CompanyID,
                        ds,
                        piPageSize,
                        callContextIn});
            pbMorePage = ((bool)(results[1]));
            callContextOut = ((CallContextDataSetType)(results[2]));
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteDashBoardQueryPagedAsync(string CompanyID, QueryDesignDataSetType ds, int piPageSize, CallContextDataSetType callContextIn) {
            this.ExecuteDashBoardQueryPagedAsync(CompanyID, ds, piPageSize, callContextIn, null);
        }
        
        /// <remarks/>
        public void ExecuteDashBoardQueryPagedAsync(string CompanyID, QueryDesignDataSetType ds, int piPageSize, CallContextDataSetType callContextIn, object userState) {
            if ((this.ExecuteDashBoardQueryPagedOperationCompleted == null)) {
                this.ExecuteDashBoardQueryPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteDashBoardQueryPagedOperationCompleted);
            }
            this.InvokeAsync("ExecuteDashBoardQueryPaged", new object[] {
                        CompanyID,
                        ds,
                        piPageSize,
                        callContextIn}, this.ExecuteDashBoardQueryPagedOperationCompleted, userState);
        }
        
        private void OnExecuteDashBoardQueryPagedOperationCompleted(object arg) {
            if ((this.ExecuteDashBoardQueryPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteDashBoardQueryPagedCompleted(this, new ExecuteDashBoardQueryPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/ExecuteParametrized", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ExecuteParametrized(string CompanyID, QueryDesignDataSetType ds, QueryExecutionDataSetType ds1, string resultFieldList, int topNRecords, CallContextDataSetType callContextIn, out bool hasMoreRecords, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("ExecuteParametrized", new object[] {
                        CompanyID,
                        ds,
                        ds1,
                        resultFieldList,
                        topNRecords,
                        callContextIn});
            hasMoreRecords = ((bool)(results[1]));
            callContextOut = ((CallContextDataSetType)(results[2]));
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteParametrizedAsync(string CompanyID, QueryDesignDataSetType ds, QueryExecutionDataSetType ds1, string resultFieldList, int topNRecords, CallContextDataSetType callContextIn) {
            this.ExecuteParametrizedAsync(CompanyID, ds, ds1, resultFieldList, topNRecords, callContextIn, null);
        }
        
        /// <remarks/>
        public void ExecuteParametrizedAsync(string CompanyID, QueryDesignDataSetType ds, QueryExecutionDataSetType ds1, string resultFieldList, int topNRecords, CallContextDataSetType callContextIn, object userState) {
            if ((this.ExecuteParametrizedOperationCompleted == null)) {
                this.ExecuteParametrizedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteParametrizedOperationCompleted);
            }
            this.InvokeAsync("ExecuteParametrized", new object[] {
                        CompanyID,
                        ds,
                        ds1,
                        resultFieldList,
                        topNRecords,
                        callContextIn}, this.ExecuteParametrizedOperationCompleted, userState);
        }
        
        private void OnExecuteParametrizedOperationCompleted(object arg) {
            if ((this.ExecuteParametrizedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteParametrizedCompleted(this, new ExecuteParametrizedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/Export", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QueryDesignDataSetType Export(string CompanyID, QueryDesignDataSetType ds, string pcFile, string pcFileType, string pcTextDelim, bool pbOutputLabels, CallContextDataSetType callContextIn, out bool pbSuccess, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("Export", new object[] {
                        CompanyID,
                        ds,
                        pcFile,
                        pcFileType,
                        pcTextDelim,
                        pbOutputLabels,
                        callContextIn});
            pbSuccess = ((bool)(results[1]));
            callContextOut = ((CallContextDataSetType)(results[2]));
            return ((QueryDesignDataSetType)(results[0]));
        }
        
        /// <remarks/>
        public void ExportAsync(string CompanyID, QueryDesignDataSetType ds, string pcFile, string pcFileType, string pcTextDelim, bool pbOutputLabels, CallContextDataSetType callContextIn) {
            this.ExportAsync(CompanyID, ds, pcFile, pcFileType, pcTextDelim, pbOutputLabels, callContextIn, null);
        }
        
        /// <remarks/>
        public void ExportAsync(string CompanyID, QueryDesignDataSetType ds, string pcFile, string pcFileType, string pcTextDelim, bool pbOutputLabels, CallContextDataSetType callContextIn, object userState) {
            if ((this.ExportOperationCompleted == null)) {
                this.ExportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportOperationCompleted);
            }
            this.InvokeAsync("Export", new object[] {
                        CompanyID,
                        ds,
                        pcFile,
                        pcFileType,
                        pcTextDelim,
                        pbOutputLabels,
                        callContextIn}, this.ExportOperationCompleted, userState);
        }
        
        private void OnExportOperationCompleted(object arg) {
            if ((this.ExportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportCompleted(this, new ExportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/ExportByID", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ExportByID(string CompanyID, string pcQueryID, string pcExportFormatOverride, string pcFilenameOverride, string pcTextDelim, bool pbOutputLabels, CallContextDataSetType callContextIn, out string pcFile, out bool pbSuccess, out string pbMessage, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("ExportByID", new object[] {
                        CompanyID,
                        pcQueryID,
                        pcExportFormatOverride,
                        pcFilenameOverride,
                        pcTextDelim,
                        pbOutputLabels,
                        callContextIn});
            pcFile = ((string)(results[1]));
            pbSuccess = ((bool)(results[2]));
            pbMessage = ((string)(results[3]));
            callContextOut = ((CallContextDataSetType)(results[4]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ExportByIDAsync(string CompanyID, string pcQueryID, string pcExportFormatOverride, string pcFilenameOverride, string pcTextDelim, bool pbOutputLabels, CallContextDataSetType callContextIn) {
            this.ExportByIDAsync(CompanyID, pcQueryID, pcExportFormatOverride, pcFilenameOverride, pcTextDelim, pbOutputLabels, callContextIn, null);
        }
        
        /// <remarks/>
        public void ExportByIDAsync(string CompanyID, string pcQueryID, string pcExportFormatOverride, string pcFilenameOverride, string pcTextDelim, bool pbOutputLabels, CallContextDataSetType callContextIn, object userState) {
            if ((this.ExportByIDOperationCompleted == null)) {
                this.ExportByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportByIDOperationCompleted);
            }
            this.InvokeAsync("ExportByID", new object[] {
                        CompanyID,
                        pcQueryID,
                        pcExportFormatOverride,
                        pcFilenameOverride,
                        pcTextDelim,
                        pbOutputLabels,
                        callContextIn}, this.ExportByIDOperationCompleted, userState);
        }
        
        private void OnExportByIDOperationCompleted(object arg) {
            if ((this.ExportByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportByIDCompleted(this, new ExportByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/GenerateASP", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ASPExportFieldDataSetType GenerateASP(string CompanyID, string pcQueryID, string pcFilename, ASPExportFieldDataSetType ds, CallContextDataSetType callContextIn, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("GenerateASP", new object[] {
                        CompanyID,
                        pcQueryID,
                        pcFilename,
                        ds,
                        callContextIn});
            callContextOut = ((CallContextDataSetType)(results[1]));
            return ((ASPExportFieldDataSetType)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateASPAsync(string CompanyID, string pcQueryID, string pcFilename, ASPExportFieldDataSetType ds, CallContextDataSetType callContextIn) {
            this.GenerateASPAsync(CompanyID, pcQueryID, pcFilename, ds, callContextIn, null);
        }
        
        /// <remarks/>
        public void GenerateASPAsync(string CompanyID, string pcQueryID, string pcFilename, ASPExportFieldDataSetType ds, CallContextDataSetType callContextIn, object userState) {
            if ((this.GenerateASPOperationCompleted == null)) {
                this.GenerateASPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateASPOperationCompleted);
            }
            this.InvokeAsync("GenerateASP", new object[] {
                        CompanyID,
                        pcQueryID,
                        pcFilename,
                        ds,
                        callContextIn}, this.GenerateASPOperationCompleted, userState);
        }
        
        private void OnGenerateASPOperationCompleted(object arg) {
            if ((this.GenerateASPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateASPCompleted(this, new GenerateASPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/GetASPFields", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ASPExportFieldDataSetType GetASPFields(string CompanyID, string pcQueryID, CallContextDataSetType callContextIn, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("GetASPFields", new object[] {
                        CompanyID,
                        pcQueryID,
                        callContextIn});
            callContextOut = ((CallContextDataSetType)(results[1]));
            return ((ASPExportFieldDataSetType)(results[0]));
        }
        
        /// <remarks/>
        public void GetASPFieldsAsync(string CompanyID, string pcQueryID, CallContextDataSetType callContextIn) {
            this.GetASPFieldsAsync(CompanyID, pcQueryID, callContextIn, null);
        }
        
        /// <remarks/>
        public void GetASPFieldsAsync(string CompanyID, string pcQueryID, CallContextDataSetType callContextIn, object userState) {
            if ((this.GetASPFieldsOperationCompleted == null)) {
                this.GetASPFieldsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetASPFieldsOperationCompleted);
            }
            this.InvokeAsync("GetASPFields", new object[] {
                        CompanyID,
                        pcQueryID,
                        callContextIn}, this.GetASPFieldsOperationCompleted, userState);
        }
        
        private void OnGetASPFieldsOperationCompleted(object arg) {
            if ((this.GetASPFieldsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetASPFieldsCompleted(this, new GetASPFieldsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/GetAvailableTableList", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AvailableTableListDataSetType GetAvailableTableList(string CompanyID, string whereClause, int pageSize, int absolutePage, CallContextDataSetType callContextIn, out bool morePages, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("GetAvailableTableList", new object[] {
                        CompanyID,
                        whereClause,
                        pageSize,
                        absolutePage,
                        callContextIn});
            morePages = ((bool)(results[1]));
            callContextOut = ((CallContextDataSetType)(results[2]));
            return ((AvailableTableListDataSetType)(results[0]));
        }
        
        /// <remarks/>
        public void GetAvailableTableListAsync(string CompanyID, string whereClause, int pageSize, int absolutePage, CallContextDataSetType callContextIn) {
            this.GetAvailableTableListAsync(CompanyID, whereClause, pageSize, absolutePage, callContextIn, null);
        }
        
        /// <remarks/>
        public void GetAvailableTableListAsync(string CompanyID, string whereClause, int pageSize, int absolutePage, CallContextDataSetType callContextIn, object userState) {
            if ((this.GetAvailableTableListOperationCompleted == null)) {
                this.GetAvailableTableListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAvailableTableListOperationCompleted);
            }
            this.InvokeAsync("GetAvailableTableList", new object[] {
                        CompanyID,
                        whereClause,
                        pageSize,
                        absolutePage,
                        callContextIn}, this.GetAvailableTableListOperationCompleted, userState);
        }
        
        private void OnGetAvailableTableListOperationCompleted(object arg) {
            if ((this.GetAvailableTableListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAvailableTableListCompleted(this, new GetAvailableTableListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/GetByID", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QueryDesignDataSetType GetByID(string CompanyID, string pcQueryID, CallContextDataSetType callContextIn, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("GetByID", new object[] {
                        CompanyID,
                        pcQueryID,
                        callContextIn});
            callContextOut = ((CallContextDataSetType)(results[1]));
            return ((QueryDesignDataSetType)(results[0]));
        }
        
        /// <remarks/>
        public void GetByIDAsync(string CompanyID, string pcQueryID, CallContextDataSetType callContextIn) {
            this.GetByIDAsync(CompanyID, pcQueryID, callContextIn, null);
        }
        
        /// <remarks/>
        public void GetByIDAsync(string CompanyID, string pcQueryID, CallContextDataSetType callContextIn, object userState) {
            if ((this.GetByIDOperationCompleted == null)) {
                this.GetByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetByIDOperationCompleted);
            }
            this.InvokeAsync("GetByID", new object[] {
                        CompanyID,
                        pcQueryID,
                        callContextIn}, this.GetByIDOperationCompleted, userState);
        }
        
        private void OnGetByIDOperationCompleted(object arg) {
            if ((this.GetByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetByIDCompleted(this, new GetByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/GetDashBoardQueries", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QueryDesignDataSetType GetDashBoardQueries(string CompanyID, BAQRequestDataSetType ds, CallContextDataSetType callContextIn, out BAQRequestDataSetType dsOut, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("GetDashBoardQueries", new object[] {
                        CompanyID,
                        ds,
                        callContextIn});
            dsOut = ((BAQRequestDataSetType)(results[1]));
            callContextOut = ((CallContextDataSetType)(results[2]));
            return ((QueryDesignDataSetType)(results[0]));
        }
        
        /// <remarks/>
        public void GetDashBoardQueriesAsync(string CompanyID, BAQRequestDataSetType ds, CallContextDataSetType callContextIn) {
            this.GetDashBoardQueriesAsync(CompanyID, ds, callContextIn, null);
        }
        
        /// <remarks/>
        public void GetDashBoardQueriesAsync(string CompanyID, BAQRequestDataSetType ds, CallContextDataSetType callContextIn, object userState) {
            if ((this.GetDashBoardQueriesOperationCompleted == null)) {
                this.GetDashBoardQueriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDashBoardQueriesOperationCompleted);
            }
            this.InvokeAsync("GetDashBoardQueries", new object[] {
                        CompanyID,
                        ds,
                        callContextIn}, this.GetDashBoardQueriesOperationCompleted, userState);
        }
        
        private void OnGetDashBoardQueriesOperationCompleted(object arg) {
            if ((this.GetDashBoardQueriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDashBoardQueriesCompleted(this, new GetDashBoardQueriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/GetDashBoardQuery", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QueryDesignDataSetType GetDashBoardQuery(string CompanyID, string pcQueryID, CallContextDataSetType callContextIn, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("GetDashBoardQuery", new object[] {
                        CompanyID,
                        pcQueryID,
                        callContextIn});
            callContextOut = ((CallContextDataSetType)(results[1]));
            return ((QueryDesignDataSetType)(results[0]));
        }
        
        /// <remarks/>
        public void GetDashBoardQueryAsync(string CompanyID, string pcQueryID, CallContextDataSetType callContextIn) {
            this.GetDashBoardQueryAsync(CompanyID, pcQueryID, callContextIn, null);
        }
        
        /// <remarks/>
        public void GetDashBoardQueryAsync(string CompanyID, string pcQueryID, CallContextDataSetType callContextIn, object userState) {
            if ((this.GetDashBoardQueryOperationCompleted == null)) {
                this.GetDashBoardQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDashBoardQueryOperationCompleted);
            }
            this.InvokeAsync("GetDashBoardQuery", new object[] {
                        CompanyID,
                        pcQueryID,
                        callContextIn}, this.GetDashBoardQueryOperationCompleted, userState);
        }
        
        private void OnGetDashBoardQueryOperationCompleted(object arg) {
            if ((this.GetDashBoardQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDashBoardQueryCompleted(this, new GetDashBoardQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/GetDBQueryByID", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetDBQueryByID(string CompanyID, string pcQueryID, bool pbPrepareOnly, CallContextDataSetType callContextIn, out string pcProcedure, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("GetDBQueryByID", new object[] {
                        CompanyID,
                        pcQueryID,
                        pbPrepareOnly,
                        callContextIn});
            pcProcedure = ((string)(results[1]));
            callContextOut = ((CallContextDataSetType)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetDBQueryByIDAsync(string CompanyID, string pcQueryID, bool pbPrepareOnly, CallContextDataSetType callContextIn) {
            this.GetDBQueryByIDAsync(CompanyID, pcQueryID, pbPrepareOnly, callContextIn, null);
        }
        
        /// <remarks/>
        public void GetDBQueryByIDAsync(string CompanyID, string pcQueryID, bool pbPrepareOnly, CallContextDataSetType callContextIn, object userState) {
            if ((this.GetDBQueryByIDOperationCompleted == null)) {
                this.GetDBQueryByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDBQueryByIDOperationCompleted);
            }
            this.InvokeAsync("GetDBQueryByID", new object[] {
                        CompanyID,
                        pcQueryID,
                        pbPrepareOnly,
                        callContextIn}, this.GetDBQueryByIDOperationCompleted, userState);
        }
        
        private void OnGetDBQueryByIDOperationCompleted(object arg) {
            if ((this.GetDBQueryByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDBQueryByIDCompleted(this, new GetDBQueryByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/GetDropDownListValues", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetDropDownListValues(string CompanyID, string queryID, string distinctFields, CallContextDataSetType callContextIn, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("GetDropDownListValues", new object[] {
                        CompanyID,
                        queryID,
                        distinctFields,
                        callContextIn});
            callContextOut = ((CallContextDataSetType)(results[1]));
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetDropDownListValuesAsync(string CompanyID, string queryID, string distinctFields, CallContextDataSetType callContextIn) {
            this.GetDropDownListValuesAsync(CompanyID, queryID, distinctFields, callContextIn, null);
        }
        
        /// <remarks/>
        public void GetDropDownListValuesAsync(string CompanyID, string queryID, string distinctFields, CallContextDataSetType callContextIn, object userState) {
            if ((this.GetDropDownListValuesOperationCompleted == null)) {
                this.GetDropDownListValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDropDownListValuesOperationCompleted);
            }
            this.InvokeAsync("GetDropDownListValues", new object[] {
                        CompanyID,
                        queryID,
                        distinctFields,
                        callContextIn}, this.GetDropDownListValuesOperationCompleted, userState);
        }
        
        private void OnGetDropDownListValuesOperationCompleted(object arg) {
            if ((this.GetDropDownListValuesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDropDownListValuesCompleted(this, new GetDropDownListValuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/GetDropDownListValuesParametrized", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetDropDownListValuesParametrized(string CompanyID, string queryID, QueryExecutionDataSetType ds, string distinctFields, CallContextDataSetType callContextIn, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("GetDropDownListValuesParametrized", new object[] {
                        CompanyID,
                        queryID,
                        ds,
                        distinctFields,
                        callContextIn});
            callContextOut = ((CallContextDataSetType)(results[1]));
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetDropDownListValuesParametrizedAsync(string CompanyID, string queryID, QueryExecutionDataSetType ds, string distinctFields, CallContextDataSetType callContextIn) {
            this.GetDropDownListValuesParametrizedAsync(CompanyID, queryID, ds, distinctFields, callContextIn, null);
        }
        
        /// <remarks/>
        public void GetDropDownListValuesParametrizedAsync(string CompanyID, string queryID, QueryExecutionDataSetType ds, string distinctFields, CallContextDataSetType callContextIn, object userState) {
            if ((this.GetDropDownListValuesParametrizedOperationCompleted == null)) {
                this.GetDropDownListValuesParametrizedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDropDownListValuesParametrizedOperationCompleted);
            }
            this.InvokeAsync("GetDropDownListValuesParametrized", new object[] {
                        CompanyID,
                        queryID,
                        ds,
                        distinctFields,
                        callContextIn}, this.GetDropDownListValuesParametrizedOperationCompleted, userState);
        }
        
        private void OnGetDropDownListValuesParametrizedOperationCompleted(object arg) {
            if ((this.GetDropDownListValuesParametrizedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDropDownListValuesParametrizedCompleted(this, new GetDropDownListValuesParametrizedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/GetFieldInfo", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetFieldInfo(string CompanyID, string dbTableName, string fieldName, CallContextDataSetType callContextIn, out string fldType, out string fldSQLType, out int fldLen, out int fldPrecision, out int fldScale, out string fldFormat, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("GetFieldInfo", new object[] {
                        CompanyID,
                        dbTableName,
                        fieldName,
                        callContextIn});
            fldType = ((string)(results[1]));
            fldSQLType = ((string)(results[2]));
            fldLen = ((int)(results[3]));
            fldPrecision = ((int)(results[4]));
            fldScale = ((int)(results[5]));
            fldFormat = ((string)(results[6]));
            callContextOut = ((CallContextDataSetType)(results[7]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetFieldInfoAsync(string CompanyID, string dbTableName, string fieldName, CallContextDataSetType callContextIn) {
            this.GetFieldInfoAsync(CompanyID, dbTableName, fieldName, callContextIn, null);
        }
        
        /// <remarks/>
        public void GetFieldInfoAsync(string CompanyID, string dbTableName, string fieldName, CallContextDataSetType callContextIn, object userState) {
            if ((this.GetFieldInfoOperationCompleted == null)) {
                this.GetFieldInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFieldInfoOperationCompleted);
            }
            this.InvokeAsync("GetFieldInfo", new object[] {
                        CompanyID,
                        dbTableName,
                        fieldName,
                        callContextIn}, this.GetFieldInfoOperationCompleted, userState);
        }
        
        private void OnGetFieldInfoOperationCompleted(object arg) {
            if ((this.GetFieldInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFieldInfoCompleted(this, new GetFieldInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/GetFieldList", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FieldListDataSetType GetFieldList(string CompanyID, string pcTable, CallContextDataSetType callContextIn, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("GetFieldList", new object[] {
                        CompanyID,
                        pcTable,
                        callContextIn});
            callContextOut = ((CallContextDataSetType)(results[1]));
            return ((FieldListDataSetType)(results[0]));
        }
        
        /// <remarks/>
        public void GetFieldListAsync(string CompanyID, string pcTable, CallContextDataSetType callContextIn) {
            this.GetFieldListAsync(CompanyID, pcTable, callContextIn, null);
        }
        
        /// <remarks/>
        public void GetFieldListAsync(string CompanyID, string pcTable, CallContextDataSetType callContextIn, object userState) {
            if ((this.GetFieldListOperationCompleted == null)) {
                this.GetFieldListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFieldListOperationCompleted);
            }
            this.InvokeAsync("GetFieldList", new object[] {
                        CompanyID,
                        pcTable,
                        callContextIn}, this.GetFieldListOperationCompleted, userState);
        }
        
        private void OnGetFieldListOperationCompleted(object arg) {
            if ((this.GetFieldListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFieldListCompleted(this, new GetFieldListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/GetFiscalPeriods", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FiscalPeriodListDataSetType GetFiscalPeriods(string CompanyID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> pdBeginDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> pdEndDate, CallContextDataSetType callContextIn, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("GetFiscalPeriods", new object[] {
                        CompanyID,
                        pdBeginDate,
                        pdEndDate,
                        callContextIn});
            callContextOut = ((CallContextDataSetType)(results[1]));
            return ((FiscalPeriodListDataSetType)(results[0]));
        }
        
        /// <remarks/>
        public void GetFiscalPeriodsAsync(string CompanyID, System.Nullable<System.DateTime> pdBeginDate, System.Nullable<System.DateTime> pdEndDate, CallContextDataSetType callContextIn) {
            this.GetFiscalPeriodsAsync(CompanyID, pdBeginDate, pdEndDate, callContextIn, null);
        }
        
        /// <remarks/>
        public void GetFiscalPeriodsAsync(string CompanyID, System.Nullable<System.DateTime> pdBeginDate, System.Nullable<System.DateTime> pdEndDate, CallContextDataSetType callContextIn, object userState) {
            if ((this.GetFiscalPeriodsOperationCompleted == null)) {
                this.GetFiscalPeriodsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFiscalPeriodsOperationCompleted);
            }
            this.InvokeAsync("GetFiscalPeriods", new object[] {
                        CompanyID,
                        pdBeginDate,
                        pdEndDate,
                        callContextIn}, this.GetFiscalPeriodsOperationCompleted, userState);
        }
        
        private void OnGetFiscalPeriodsOperationCompleted(object arg) {
            if ((this.GetFiscalPeriodsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFiscalPeriodsCompleted(this, new GetFiscalPeriodsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/GetList", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DynamicQueryListDataSetType GetList(string CompanyID, string whereClause, int pageSize, int absolutePage, CallContextDataSetType callContextIn, out bool morePages, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("GetList", new object[] {
                        CompanyID,
                        whereClause,
                        pageSize,
                        absolutePage,
                        callContextIn});
            morePages = ((bool)(results[1]));
            callContextOut = ((CallContextDataSetType)(results[2]));
            return ((DynamicQueryListDataSetType)(results[0]));
        }
        
        /// <remarks/>
        public void GetListAsync(string CompanyID, string whereClause, int pageSize, int absolutePage, CallContextDataSetType callContextIn) {
            this.GetListAsync(CompanyID, whereClause, pageSize, absolutePage, callContextIn, null);
        }
        
        /// <remarks/>
        public void GetListAsync(string CompanyID, string whereClause, int pageSize, int absolutePage, CallContextDataSetType callContextIn, object userState) {
            if ((this.GetListOperationCompleted == null)) {
                this.GetListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListOperationCompleted);
            }
            this.InvokeAsync("GetList", new object[] {
                        CompanyID,
                        whereClause,
                        pageSize,
                        absolutePage,
                        callContextIn}, this.GetListOperationCompleted, userState);
        }
        
        private void OnGetListOperationCompleted(object arg) {
            if ((this.GetListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListCompleted(this, new GetListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/GetListFromLike", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DynamicQueryListDataSetType GetListFromLike(string CompanyID, string pcLikeTable, string pcLikeField, CallContextDataSetType callContextIn, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("GetListFromLike", new object[] {
                        CompanyID,
                        pcLikeTable,
                        pcLikeField,
                        callContextIn});
            callContextOut = ((CallContextDataSetType)(results[1]));
            return ((DynamicQueryListDataSetType)(results[0]));
        }
        
        /// <remarks/>
        public void GetListFromLikeAsync(string CompanyID, string pcLikeTable, string pcLikeField, CallContextDataSetType callContextIn) {
            this.GetListFromLikeAsync(CompanyID, pcLikeTable, pcLikeField, callContextIn, null);
        }
        
        /// <remarks/>
        public void GetListFromLikeAsync(string CompanyID, string pcLikeTable, string pcLikeField, CallContextDataSetType callContextIn, object userState) {
            if ((this.GetListFromLikeOperationCompleted == null)) {
                this.GetListFromLikeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListFromLikeOperationCompleted);
            }
            this.InvokeAsync("GetListFromLike", new object[] {
                        CompanyID,
                        pcLikeTable,
                        pcLikeField,
                        callContextIn}, this.GetListFromLikeOperationCompleted, userState);
        }
        
        private void OnGetListFromLikeOperationCompleted(object arg) {
            if ((this.GetListFromLikeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListFromLikeCompleted(this, new GetListFromLikeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/GetNewQuery", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QueryDesignDataSetType GetNewQuery(string CompanyID, QueryDesignDataSetType ds, CallContextDataSetType callContextIn, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("GetNewQuery", new object[] {
                        CompanyID,
                        ds,
                        callContextIn});
            callContextOut = ((CallContextDataSetType)(results[1]));
            return ((QueryDesignDataSetType)(results[0]));
        }
        
        /// <remarks/>
        public void GetNewQueryAsync(string CompanyID, QueryDesignDataSetType ds, CallContextDataSetType callContextIn) {
            this.GetNewQueryAsync(CompanyID, ds, callContextIn, null);
        }
        
        /// <remarks/>
        public void GetNewQueryAsync(string CompanyID, QueryDesignDataSetType ds, CallContextDataSetType callContextIn, object userState) {
            if ((this.GetNewQueryOperationCompleted == null)) {
                this.GetNewQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNewQueryOperationCompleted);
            }
            this.InvokeAsync("GetNewQuery", new object[] {
                        CompanyID,
                        ds,
                        callContextIn}, this.GetNewQueryOperationCompleted, userState);
        }
        
        private void OnGetNewQueryOperationCompleted(object arg) {
            if ((this.GetNewQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNewQueryCompleted(this, new GetNewQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/GetNewQueryRelation", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QueryDesignDataSetType GetNewQueryRelation(string CompanyID, QueryDesignDataSetType ds, string pcQueryID, CallContextDataSetType callContextIn, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("GetNewQueryRelation", new object[] {
                        CompanyID,
                        ds,
                        pcQueryID,
                        callContextIn});
            callContextOut = ((CallContextDataSetType)(results[1]));
            return ((QueryDesignDataSetType)(results[0]));
        }
        
        /// <remarks/>
        public void GetNewQueryRelationAsync(string CompanyID, QueryDesignDataSetType ds, string pcQueryID, CallContextDataSetType callContextIn) {
            this.GetNewQueryRelationAsync(CompanyID, ds, pcQueryID, callContextIn, null);
        }
        
        /// <remarks/>
        public void GetNewQueryRelationAsync(string CompanyID, QueryDesignDataSetType ds, string pcQueryID, CallContextDataSetType callContextIn, object userState) {
            if ((this.GetNewQueryRelationOperationCompleted == null)) {
                this.GetNewQueryRelationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNewQueryRelationOperationCompleted);
            }
            this.InvokeAsync("GetNewQueryRelation", new object[] {
                        CompanyID,
                        ds,
                        pcQueryID,
                        callContextIn}, this.GetNewQueryRelationOperationCompleted, userState);
        }
        
        private void OnGetNewQueryRelationOperationCompleted(object arg) {
            if ((this.GetNewQueryRelationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNewQueryRelationCompleted(this, new GetNewQueryRelationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/GetNewQueryRelationField", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QueryDesignDataSetType GetNewQueryRelationField(string CompanyID, QueryDesignDataSetType ds, string pcQueryID, string pcRelationID, CallContextDataSetType callContextIn, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("GetNewQueryRelationField", new object[] {
                        CompanyID,
                        ds,
                        pcQueryID,
                        pcRelationID,
                        callContextIn});
            callContextOut = ((CallContextDataSetType)(results[1]));
            return ((QueryDesignDataSetType)(results[0]));
        }
        
        /// <remarks/>
        public void GetNewQueryRelationFieldAsync(string CompanyID, QueryDesignDataSetType ds, string pcQueryID, string pcRelationID, CallContextDataSetType callContextIn) {
            this.GetNewQueryRelationFieldAsync(CompanyID, ds, pcQueryID, pcRelationID, callContextIn, null);
        }
        
        /// <remarks/>
        public void GetNewQueryRelationFieldAsync(string CompanyID, QueryDesignDataSetType ds, string pcQueryID, string pcRelationID, CallContextDataSetType callContextIn, object userState) {
            if ((this.GetNewQueryRelationFieldOperationCompleted == null)) {
                this.GetNewQueryRelationFieldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNewQueryRelationFieldOperationCompleted);
            }
            this.InvokeAsync("GetNewQueryRelationField", new object[] {
                        CompanyID,
                        ds,
                        pcQueryID,
                        pcRelationID,
                        callContextIn}, this.GetNewQueryRelationFieldOperationCompleted, userState);
        }
        
        private void OnGetNewQueryRelationFieldOperationCompleted(object arg) {
            if ((this.GetNewQueryRelationFieldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNewQueryRelationFieldCompleted(this, new GetNewQueryRelationFieldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/GetNewWhereItem", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QueryDesignDataSetType GetNewWhereItem(string CompanyID, QueryDesignDataSetType ds, string pcQueryID, string pcTable, CallContextDataSetType callContextIn, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("GetNewWhereItem", new object[] {
                        CompanyID,
                        ds,
                        pcQueryID,
                        pcTable,
                        callContextIn});
            callContextOut = ((CallContextDataSetType)(results[1]));
            return ((QueryDesignDataSetType)(results[0]));
        }
        
        /// <remarks/>
        public void GetNewWhereItemAsync(string CompanyID, QueryDesignDataSetType ds, string pcQueryID, string pcTable, CallContextDataSetType callContextIn) {
            this.GetNewWhereItemAsync(CompanyID, ds, pcQueryID, pcTable, callContextIn, null);
        }
        
        /// <remarks/>
        public void GetNewWhereItemAsync(string CompanyID, QueryDesignDataSetType ds, string pcQueryID, string pcTable, CallContextDataSetType callContextIn, object userState) {
            if ((this.GetNewWhereItemOperationCompleted == null)) {
                this.GetNewWhereItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNewWhereItemOperationCompleted);
            }
            this.InvokeAsync("GetNewWhereItem", new object[] {
                        CompanyID,
                        ds,
                        pcQueryID,
                        pcTable,
                        callContextIn}, this.GetNewWhereItemOperationCompleted, userState);
        }
        
        private void OnGetNewWhereItemOperationCompleted(object arg) {
            if ((this.GetNewWhereItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNewWhereItemCompleted(this, new GetNewWhereItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/GetPage", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetPage(string CompanyID, string pagedQueryToken, int pageNumber, int pageSize, CallContextDataSetType callContextIn, out bool hasMorePages, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("GetPage", new object[] {
                        CompanyID,
                        pagedQueryToken,
                        pageNumber,
                        pageSize,
                        callContextIn});
            hasMorePages = ((bool)(results[1]));
            callContextOut = ((CallContextDataSetType)(results[2]));
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetPageAsync(string CompanyID, string pagedQueryToken, int pageNumber, int pageSize, CallContextDataSetType callContextIn) {
            this.GetPageAsync(CompanyID, pagedQueryToken, pageNumber, pageSize, callContextIn, null);
        }
        
        /// <remarks/>
        public void GetPageAsync(string CompanyID, string pagedQueryToken, int pageNumber, int pageSize, CallContextDataSetType callContextIn, object userState) {
            if ((this.GetPageOperationCompleted == null)) {
                this.GetPageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPageOperationCompleted);
            }
            this.InvokeAsync("GetPage", new object[] {
                        CompanyID,
                        pagedQueryToken,
                        pageNumber,
                        pageSize,
                        callContextIn}, this.GetPageOperationCompleted, userState);
        }
        
        private void OnGetPageOperationCompleted(object arg) {
            if ((this.GetPageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPageCompleted(this, new GetPageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/GetProgressDBQueryByID", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetProgressDBQueryByID(string CompanyID, string pcQueryID, CallContextDataSetType callContextIn, out string pcProcedure, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("GetProgressDBQueryByID", new object[] {
                        CompanyID,
                        pcQueryID,
                        callContextIn});
            pcProcedure = ((string)(results[1]));
            callContextOut = ((CallContextDataSetType)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetProgressDBQueryByIDAsync(string CompanyID, string pcQueryID, CallContextDataSetType callContextIn) {
            this.GetProgressDBQueryByIDAsync(CompanyID, pcQueryID, callContextIn, null);
        }
        
        /// <remarks/>
        public void GetProgressDBQueryByIDAsync(string CompanyID, string pcQueryID, CallContextDataSetType callContextIn, object userState) {
            if ((this.GetProgressDBQueryByIDOperationCompleted == null)) {
                this.GetProgressDBQueryByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProgressDBQueryByIDOperationCompleted);
            }
            this.InvokeAsync("GetProgressDBQueryByID", new object[] {
                        CompanyID,
                        pcQueryID,
                        callContextIn}, this.GetProgressDBQueryByIDOperationCompleted, userState);
        }
        
        private void OnGetProgressDBQueryByIDOperationCompleted(object arg) {
            if ((this.GetProgressDBQueryByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProgressDBQueryByIDCompleted(this, new GetProgressDBQueryByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/GetQueryByID", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QueryDesignDataSetType GetQueryByID(string CompanyID, string pcQueryID, CallContextDataSetType callContextIn, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("GetQueryByID", new object[] {
                        CompanyID,
                        pcQueryID,
                        callContextIn});
            callContextOut = ((CallContextDataSetType)(results[1]));
            return ((QueryDesignDataSetType)(results[0]));
        }
        
        /// <remarks/>
        public void GetQueryByIDAsync(string CompanyID, string pcQueryID, CallContextDataSetType callContextIn) {
            this.GetQueryByIDAsync(CompanyID, pcQueryID, callContextIn, null);
        }
        
        /// <remarks/>
        public void GetQueryByIDAsync(string CompanyID, string pcQueryID, CallContextDataSetType callContextIn, object userState) {
            if ((this.GetQueryByIDOperationCompleted == null)) {
                this.GetQueryByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQueryByIDOperationCompleted);
            }
            this.InvokeAsync("GetQueryByID", new object[] {
                        CompanyID,
                        pcQueryID,
                        callContextIn}, this.GetQueryByIDOperationCompleted, userState);
        }
        
        private void OnGetQueryByIDOperationCompleted(object arg) {
            if ((this.GetQueryByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQueryByIDCompleted(this, new GetQueryByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/GetQueryExecutionParameters", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QueryExecutionDataSetType GetQueryExecutionParameters(string CompanyID, QueryDesignDataSetType ds, CallContextDataSetType callContextIn, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("GetQueryExecutionParameters", new object[] {
                        CompanyID,
                        ds,
                        callContextIn});
            callContextOut = ((CallContextDataSetType)(results[1]));
            return ((QueryExecutionDataSetType)(results[0]));
        }
        
        /// <remarks/>
        public void GetQueryExecutionParametersAsync(string CompanyID, QueryDesignDataSetType ds, CallContextDataSetType callContextIn) {
            this.GetQueryExecutionParametersAsync(CompanyID, ds, callContextIn, null);
        }
        
        /// <remarks/>
        public void GetQueryExecutionParametersAsync(string CompanyID, QueryDesignDataSetType ds, CallContextDataSetType callContextIn, object userState) {
            if ((this.GetQueryExecutionParametersOperationCompleted == null)) {
                this.GetQueryExecutionParametersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQueryExecutionParametersOperationCompleted);
            }
            this.InvokeAsync("GetQueryExecutionParameters", new object[] {
                        CompanyID,
                        ds,
                        callContextIn}, this.GetQueryExecutionParametersOperationCompleted, userState);
        }
        
        private void OnGetQueryExecutionParametersOperationCompleted(object arg) {
            if ((this.GetQueryExecutionParametersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQueryExecutionParametersCompleted(this, new GetQueryExecutionParametersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/GetQueryExecutionParametersByID", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QueryExecutionDataSetType GetQueryExecutionParametersByID(string CompanyID, string pcQueryID, CallContextDataSetType callContextIn, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("GetQueryExecutionParametersByID", new object[] {
                        CompanyID,
                        pcQueryID,
                        callContextIn});
            callContextOut = ((CallContextDataSetType)(results[1]));
            return ((QueryExecutionDataSetType)(results[0]));
        }
        
        /// <remarks/>
        public void GetQueryExecutionParametersByIDAsync(string CompanyID, string pcQueryID, CallContextDataSetType callContextIn) {
            this.GetQueryExecutionParametersByIDAsync(CompanyID, pcQueryID, callContextIn, null);
        }
        
        /// <remarks/>
        public void GetQueryExecutionParametersByIDAsync(string CompanyID, string pcQueryID, CallContextDataSetType callContextIn, object userState) {
            if ((this.GetQueryExecutionParametersByIDOperationCompleted == null)) {
                this.GetQueryExecutionParametersByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQueryExecutionParametersByIDOperationCompleted);
            }
            this.InvokeAsync("GetQueryExecutionParametersByID", new object[] {
                        CompanyID,
                        pcQueryID,
                        callContextIn}, this.GetQueryExecutionParametersByIDOperationCompleted, userState);
        }
        
        private void OnGetQueryExecutionParametersByIDOperationCompleted(object arg) {
            if ((this.GetQueryExecutionParametersByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQueryExecutionParametersByIDCompleted(this, new GetQueryExecutionParametersByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/GetRelatedTables", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RelatedTableDataSetType GetRelatedTables(string CompanyID, string pcTable, CallContextDataSetType callContextIn, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("GetRelatedTables", new object[] {
                        CompanyID,
                        pcTable,
                        callContextIn});
            callContextOut = ((CallContextDataSetType)(results[1]));
            return ((RelatedTableDataSetType)(results[0]));
        }
        
        /// <remarks/>
        public void GetRelatedTablesAsync(string CompanyID, string pcTable, CallContextDataSetType callContextIn) {
            this.GetRelatedTablesAsync(CompanyID, pcTable, callContextIn, null);
        }
        
        /// <remarks/>
        public void GetRelatedTablesAsync(string CompanyID, string pcTable, CallContextDataSetType callContextIn, object userState) {
            if ((this.GetRelatedTablesOperationCompleted == null)) {
                this.GetRelatedTablesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRelatedTablesOperationCompleted);
            }
            this.InvokeAsync("GetRelatedTables", new object[] {
                        CompanyID,
                        pcTable,
                        callContextIn}, this.GetRelatedTablesOperationCompleted, userState);
        }
        
        private void OnGetRelatedTablesOperationCompleted(object arg) {
            if ((this.GetRelatedTablesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRelatedTablesCompleted(this, new GetRelatedTablesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/GetRows", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QueryDesignDataSetType GetRows(string CompanyID, string whereClauseDynamicQuery, string whereClauseQueryTable, string whereClauseQueryField, string whereClauseQueryWhereItem, string whereClauseQueryCalcFld, string whereClauseQueryRelation, string whereClauseQueryRelationField, string whereClauseQuerySortBy, int pageSize, int absolutePage, CallContextDataSetType callContextIn, out bool morePages, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("GetRows", new object[] {
                        CompanyID,
                        whereClauseDynamicQuery,
                        whereClauseQueryTable,
                        whereClauseQueryField,
                        whereClauseQueryWhereItem,
                        whereClauseQueryCalcFld,
                        whereClauseQueryRelation,
                        whereClauseQueryRelationField,
                        whereClauseQuerySortBy,
                        pageSize,
                        absolutePage,
                        callContextIn});
            morePages = ((bool)(results[1]));
            callContextOut = ((CallContextDataSetType)(results[2]));
            return ((QueryDesignDataSetType)(results[0]));
        }
        
        /// <remarks/>
        public void GetRowsAsync(string CompanyID, string whereClauseDynamicQuery, string whereClauseQueryTable, string whereClauseQueryField, string whereClauseQueryWhereItem, string whereClauseQueryCalcFld, string whereClauseQueryRelation, string whereClauseQueryRelationField, string whereClauseQuerySortBy, int pageSize, int absolutePage, CallContextDataSetType callContextIn) {
            this.GetRowsAsync(CompanyID, whereClauseDynamicQuery, whereClauseQueryTable, whereClauseQueryField, whereClauseQueryWhereItem, whereClauseQueryCalcFld, whereClauseQueryRelation, whereClauseQueryRelationField, whereClauseQuerySortBy, pageSize, absolutePage, callContextIn, null);
        }
        
        /// <remarks/>
        public void GetRowsAsync(string CompanyID, string whereClauseDynamicQuery, string whereClauseQueryTable, string whereClauseQueryField, string whereClauseQueryWhereItem, string whereClauseQueryCalcFld, string whereClauseQueryRelation, string whereClauseQueryRelationField, string whereClauseQuerySortBy, int pageSize, int absolutePage, CallContextDataSetType callContextIn, object userState) {
            if ((this.GetRowsOperationCompleted == null)) {
                this.GetRowsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRowsOperationCompleted);
            }
            this.InvokeAsync("GetRows", new object[] {
                        CompanyID,
                        whereClauseDynamicQuery,
                        whereClauseQueryTable,
                        whereClauseQueryField,
                        whereClauseQueryWhereItem,
                        whereClauseQueryCalcFld,
                        whereClauseQueryRelation,
                        whereClauseQueryRelationField,
                        whereClauseQuerySortBy,
                        pageSize,
                        absolutePage,
                        callContextIn}, this.GetRowsOperationCompleted, userState);
        }
        
        private void OnGetRowsOperationCompleted(object arg) {
            if ((this.GetRowsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRowsCompleted(this, new GetRowsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/GetTableExecutionOrder", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QueryDesignDataSetType GetTableExecutionOrder(string CompanyID, QueryDesignDataSetType ds, CallContextDataSetType callContextIn, out string tableList, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("GetTableExecutionOrder", new object[] {
                        CompanyID,
                        ds,
                        callContextIn});
            tableList = ((string)(results[1]));
            callContextOut = ((CallContextDataSetType)(results[2]));
            return ((QueryDesignDataSetType)(results[0]));
        }
        
        /// <remarks/>
        public void GetTableExecutionOrderAsync(string CompanyID, QueryDesignDataSetType ds, CallContextDataSetType callContextIn) {
            this.GetTableExecutionOrderAsync(CompanyID, ds, callContextIn, null);
        }
        
        /// <remarks/>
        public void GetTableExecutionOrderAsync(string CompanyID, QueryDesignDataSetType ds, CallContextDataSetType callContextIn, object userState) {
            if ((this.GetTableExecutionOrderOperationCompleted == null)) {
                this.GetTableExecutionOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTableExecutionOrderOperationCompleted);
            }
            this.InvokeAsync("GetTableExecutionOrder", new object[] {
                        CompanyID,
                        ds,
                        callContextIn}, this.GetTableExecutionOrderOperationCompleted, userState);
        }
        
        private void OnGetTableExecutionOrderOperationCompleted(object arg) {
            if ((this.GetTableExecutionOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTableExecutionOrderCompleted(this, new GetTableExecutionOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/GetUnapprovedByID", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QueryDesignDataSetType GetUnapprovedByID(string CompanyID, string pcQueryID, CallContextDataSetType callContextIn, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("GetUnapprovedByID", new object[] {
                        CompanyID,
                        pcQueryID,
                        callContextIn});
            callContextOut = ((CallContextDataSetType)(results[1]));
            return ((QueryDesignDataSetType)(results[0]));
        }
        
        /// <remarks/>
        public void GetUnapprovedByIDAsync(string CompanyID, string pcQueryID, CallContextDataSetType callContextIn) {
            this.GetUnapprovedByIDAsync(CompanyID, pcQueryID, callContextIn, null);
        }
        
        /// <remarks/>
        public void GetUnapprovedByIDAsync(string CompanyID, string pcQueryID, CallContextDataSetType callContextIn, object userState) {
            if ((this.GetUnapprovedByIDOperationCompleted == null)) {
                this.GetUnapprovedByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUnapprovedByIDOperationCompleted);
            }
            this.InvokeAsync("GetUnapprovedByID", new object[] {
                        CompanyID,
                        pcQueryID,
                        callContextIn}, this.GetUnapprovedByIDOperationCompleted, userState);
        }
        
        private void OnGetUnapprovedByIDOperationCompleted(object arg) {
            if ((this.GetUnapprovedByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUnapprovedByIDCompleted(this, new GetUnapprovedByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/ImportDynamicQuery", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QueryDesignDataSetType ImportDynamicQuery(string CompanyID, QueryDesignDataSetType ds, CallContextDataSetType callContextIn, out bool bOK, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("ImportDynamicQuery", new object[] {
                        CompanyID,
                        ds,
                        callContextIn});
            bOK = ((bool)(results[1]));
            callContextOut = ((CallContextDataSetType)(results[2]));
            return ((QueryDesignDataSetType)(results[0]));
        }
        
        /// <remarks/>
        public void ImportDynamicQueryAsync(string CompanyID, QueryDesignDataSetType ds, CallContextDataSetType callContextIn) {
            this.ImportDynamicQueryAsync(CompanyID, ds, callContextIn, null);
        }
        
        /// <remarks/>
        public void ImportDynamicQueryAsync(string CompanyID, QueryDesignDataSetType ds, CallContextDataSetType callContextIn, object userState) {
            if ((this.ImportDynamicQueryOperationCompleted == null)) {
                this.ImportDynamicQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportDynamicQueryOperationCompleted);
            }
            this.InvokeAsync("ImportDynamicQuery", new object[] {
                        CompanyID,
                        ds,
                        callContextIn}, this.ImportDynamicQueryOperationCompleted, userState);
        }
        
        private void OnImportDynamicQueryOperationCompleted(object arg) {
            if ((this.ImportDynamicQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportDynamicQueryCompleted(this, new ImportDynamicQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/osquery_onExpVar", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool osquery_onExpVar(string CompanyID, string pcAlias, string pcTable, string pcField, string pcFormula, CallContextDataSetType callContextIn, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("osquery_onExpVar", new object[] {
                        CompanyID,
                        pcAlias,
                        pcTable,
                        pcField,
                        pcFormula,
                        callContextIn});
            callContextOut = ((CallContextDataSetType)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void osquery_onExpVarAsync(string CompanyID, string pcAlias, string pcTable, string pcField, string pcFormula, CallContextDataSetType callContextIn) {
            this.osquery_onExpVarAsync(CompanyID, pcAlias, pcTable, pcField, pcFormula, callContextIn, null);
        }
        
        /// <remarks/>
        public void osquery_onExpVarAsync(string CompanyID, string pcAlias, string pcTable, string pcField, string pcFormula, CallContextDataSetType callContextIn, object userState) {
            if ((this.osquery_onExpVarOperationCompleted == null)) {
                this.osquery_onExpVarOperationCompleted = new System.Threading.SendOrPostCallback(this.Onosquery_onExpVarOperationCompleted);
            }
            this.InvokeAsync("osquery_onExpVar", new object[] {
                        CompanyID,
                        pcAlias,
                        pcTable,
                        pcField,
                        pcFormula,
                        callContextIn}, this.osquery_onExpVarOperationCompleted, userState);
        }
        
        private void Onosquery_onExpVarOperationCompleted(object arg) {
            if ((this.osquery_onExpVarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.osquery_onExpVarCompleted(this, new osquery_onExpVarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/ParseTables", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ParsedTableDataSetType ParseTables(string CompanyID, string pcQueryPhrase, CallContextDataSetType callContextIn, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("ParseTables", new object[] {
                        CompanyID,
                        pcQueryPhrase,
                        callContextIn});
            callContextOut = ((CallContextDataSetType)(results[1]));
            return ((ParsedTableDataSetType)(results[0]));
        }
        
        /// <remarks/>
        public void ParseTablesAsync(string CompanyID, string pcQueryPhrase, CallContextDataSetType callContextIn) {
            this.ParseTablesAsync(CompanyID, pcQueryPhrase, callContextIn, null);
        }
        
        /// <remarks/>
        public void ParseTablesAsync(string CompanyID, string pcQueryPhrase, CallContextDataSetType callContextIn, object userState) {
            if ((this.ParseTablesOperationCompleted == null)) {
                this.ParseTablesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnParseTablesOperationCompleted);
            }
            this.InvokeAsync("ParseTables", new object[] {
                        CompanyID,
                        pcQueryPhrase,
                        callContextIn}, this.ParseTablesOperationCompleted, userState);
        }
        
        private void OnParseTablesOperationCompleted(object arg) {
            if ((this.ParseTablesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ParseTablesCompleted(this, new ParseTablesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/RemoveQueryFields", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QueryDesignDataSetType RemoveQueryFields(string CompanyID, QueryDesignDataSetType ds, string pcQueryID, CallContextDataSetType callContextIn, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("RemoveQueryFields", new object[] {
                        CompanyID,
                        ds,
                        pcQueryID,
                        callContextIn});
            callContextOut = ((CallContextDataSetType)(results[1]));
            return ((QueryDesignDataSetType)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveQueryFieldsAsync(string CompanyID, QueryDesignDataSetType ds, string pcQueryID, CallContextDataSetType callContextIn) {
            this.RemoveQueryFieldsAsync(CompanyID, ds, pcQueryID, callContextIn, null);
        }
        
        /// <remarks/>
        public void RemoveQueryFieldsAsync(string CompanyID, QueryDesignDataSetType ds, string pcQueryID, CallContextDataSetType callContextIn, object userState) {
            if ((this.RemoveQueryFieldsOperationCompleted == null)) {
                this.RemoveQueryFieldsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveQueryFieldsOperationCompleted);
            }
            this.InvokeAsync("RemoveQueryFields", new object[] {
                        CompanyID,
                        ds,
                        pcQueryID,
                        callContextIn}, this.RemoveQueryFieldsOperationCompleted, userState);
        }
        
        private void OnRemoveQueryFieldsOperationCompleted(object arg) {
            if ((this.RemoveQueryFieldsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveQueryFieldsCompleted(this, new RemoveQueryFieldsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epicor.com/webservices/SaveQuery", RequestNamespace="http://epicor.com/webservices/", ResponseNamespace="http://epicor.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveQuery(string CompanyID, string pcQueryID, CallContextDataSetType callContextIn, out bool pbSucceed, out CallContextDataSetType callContextOut) {
            object[] results = this.Invoke("SaveQuery", new object[] {
                        CompanyID,
                        pcQueryID,
                        callContextIn});
            pbSucceed = ((bool)(results[1]));
            callContextOut = ((CallContextDataSetType)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveQueryAsync(string CompanyID, string pcQueryID, CallContextDataSetType callContextIn) {
            this.SaveQueryAsync(CompanyID, pcQueryID, callContextIn, null);
        }
        
        /// <remarks/>
        public void SaveQueryAsync(string CompanyID, string pcQueryID, CallContextDataSetType callContextIn, object userState) {
            if ((this.SaveQueryOperationCompleted == null)) {
                this.SaveQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveQueryOperationCompleted);
            }
            this.InvokeAsync("SaveQuery", new object[] {
                        CompanyID,
                        pcQueryID,
                        callContextIn}, this.SaveQueryOperationCompleted, userState);
        }
        
        private void OnSaveQueryOperationCompleted(object arg) {
            if ((this.SaveQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveQueryCompleted(this, new SaveQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://epicor.com/schemas")]
    public partial class QueryDesignDataSetType {
        
        private object[] queryDesignDataSetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("DynamicQuery", typeof(QueryDesignDataSetTypeDynamicQuery), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Key", typeof(QueryDesignDataSetTypeKey), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        [System.Xml.Serialization.XmlArrayItemAttribute("KeyField", typeof(QueryDesignDataSetTypeKeyField), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        [System.Xml.Serialization.XmlArrayItemAttribute("QueryCalcFld", typeof(QueryDesignDataSetTypeQueryCalcFld), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        [System.Xml.Serialization.XmlArrayItemAttribute("QueryCtrl", typeof(QueryDesignDataSetTypeQueryCtrl), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        [System.Xml.Serialization.XmlArrayItemAttribute("QueryCtrlValues", typeof(QueryDesignDataSetTypeQueryCtrlValues), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        [System.Xml.Serialization.XmlArrayItemAttribute("QueryCustomAction", typeof(QueryDesignDataSetTypeQueryCustomAction), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        [System.Xml.Serialization.XmlArrayItemAttribute("QueryField", typeof(QueryDesignDataSetTypeQueryField), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        [System.Xml.Serialization.XmlArrayItemAttribute("QueryParameter", typeof(QueryDesignDataSetTypeQueryParameter), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        [System.Xml.Serialization.XmlArrayItemAttribute("QueryRelation", typeof(QueryDesignDataSetTypeQueryRelation), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        [System.Xml.Serialization.XmlArrayItemAttribute("QueryRelationField", typeof(QueryDesignDataSetTypeQueryRelationField), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        [System.Xml.Serialization.XmlArrayItemAttribute("QuerySortBy", typeof(QueryDesignDataSetTypeQuerySortBy), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        [System.Xml.Serialization.XmlArrayItemAttribute("QueryTable", typeof(QueryDesignDataSetTypeQueryTable), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        [System.Xml.Serialization.XmlArrayItemAttribute("QueryUpdateField", typeof(QueryDesignDataSetTypeQueryUpdateField), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        [System.Xml.Serialization.XmlArrayItemAttribute("QueryValueSetItems", typeof(QueryDesignDataSetTypeQueryValueSetItems), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        [System.Xml.Serialization.XmlArrayItemAttribute("QueryWhereItem", typeof(QueryDesignDataSetTypeQueryWhereItem), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        [System.Xml.Serialization.XmlArrayItemAttribute("SelectedField", typeof(QueryDesignDataSetTypeSelectedField), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        [System.Xml.Serialization.XmlArrayItemAttribute("WebServiceErrors", typeof(QueryDesignDataSetTypeWebServiceErrors), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public object[] QueryDesignDataSet {
            get {
                return this.queryDesignDataSetField;
            }
            set {
                this.queryDesignDataSetField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class QueryDesignDataSetTypeDynamicQuery {
        
        private bool approvedField;
        
        private bool approvedFieldSpecified;
        
        private string dcdUserIDField;
        
        private string descriptionField;
        
        private string exportIDField;
        
        private string queryPhraseField;
        
        private string selFieldsField;
        
        private string companyField;
        
        private int fileTypIDField;
        
        private bool fileTypIDFieldSpecified;
        
        private bool foregroundField;
        
        private bool foregroundFieldSpecified;
        
        private bool outputLabelsField;
        
        private bool outputLabelsFieldSpecified;
        
        private string textDelimField;
        
        private string fileNameField;
        
        private string generatedQueryPhraseField;
        
        private string fileTypeField;
        
        private bool isSharedField;
        
        private bool isSharedFieldSpecified;
        
        private bool deliveredField;
        
        private bool deliveredFieldSpecified;
        
        private bool isFreeFormField;
        
        private bool isFreeFormFieldSpecified;
        
        private bool globalQueryField;
        
        private bool globalQueryFieldSpecified;
        
        private string bAQVersionField;
        
        private bool isTransientField;
        
        private bool isTransientFieldSpecified;
        
        private bool updatableField;
        
        private bool updatableFieldSpecified;
        
        private bool allowAddNewField;
        
        private bool allowAddNewFieldSpecified;
        
        private bool supportMDRField;
        
        private bool supportMDRFieldSpecified;
        
        private string addNewLabelField;
        
        private string cGCCodeField;
        
        private string updatableBOField;
        
        private string updateMethodField;
        
        private bool extODBCQueryField;
        
        private bool extODBCQueryFieldSpecified;
        
        private string extODBCServerTypeField;
        
        private string extODBCCnnStringField;
        
        private bool xCompanyField;
        
        private bool xCompanyFieldSpecified;
        
        private string rowIdentField;
        
        private string rowModField;
        
        private byte[] dBRowIdentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool Approved {
            get {
                return this.approvedField;
            }
            set {
                this.approvedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ApprovedSpecified {
            get {
                return this.approvedFieldSpecified;
            }
            set {
                this.approvedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DcdUserID {
            get {
                return this.dcdUserIDField;
            }
            set {
                this.dcdUserIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ExportID {
            get {
                return this.exportIDField;
            }
            set {
                this.exportIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string QueryPhrase {
            get {
                return this.queryPhraseField;
            }
            set {
                this.queryPhraseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SelFields {
            get {
                return this.selFieldsField;
            }
            set {
                this.selFieldsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int FileTypID {
            get {
                return this.fileTypIDField;
            }
            set {
                this.fileTypIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FileTypIDSpecified {
            get {
                return this.fileTypIDFieldSpecified;
            }
            set {
                this.fileTypIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool foreground {
            get {
                return this.foregroundField;
            }
            set {
                this.foregroundField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool foregroundSpecified {
            get {
                return this.foregroundFieldSpecified;
            }
            set {
                this.foregroundFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool OutputLabels {
            get {
                return this.outputLabelsField;
            }
            set {
                this.outputLabelsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OutputLabelsSpecified {
            get {
                return this.outputLabelsFieldSpecified;
            }
            set {
                this.outputLabelsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string TextDelim {
            get {
                return this.textDelimField;
            }
            set {
                this.textDelimField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string generatedQueryPhrase {
            get {
                return this.generatedQueryPhraseField;
            }
            set {
                this.generatedQueryPhraseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FileType {
            get {
                return this.fileTypeField;
            }
            set {
                this.fileTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IsShared {
            get {
                return this.isSharedField;
            }
            set {
                this.isSharedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsSharedSpecified {
            get {
                return this.isSharedFieldSpecified;
            }
            set {
                this.isSharedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool Delivered {
            get {
                return this.deliveredField;
            }
            set {
                this.deliveredField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DeliveredSpecified {
            get {
                return this.deliveredFieldSpecified;
            }
            set {
                this.deliveredFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IsFreeForm {
            get {
                return this.isFreeFormField;
            }
            set {
                this.isFreeFormField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsFreeFormSpecified {
            get {
                return this.isFreeFormFieldSpecified;
            }
            set {
                this.isFreeFormFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool GlobalQuery {
            get {
                return this.globalQueryField;
            }
            set {
                this.globalQueryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GlobalQuerySpecified {
            get {
                return this.globalQueryFieldSpecified;
            }
            set {
                this.globalQueryFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string BAQVersion {
            get {
                return this.bAQVersionField;
            }
            set {
                this.bAQVersionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IsTransient {
            get {
                return this.isTransientField;
            }
            set {
                this.isTransientField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsTransientSpecified {
            get {
                return this.isTransientFieldSpecified;
            }
            set {
                this.isTransientFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool Updatable {
            get {
                return this.updatableField;
            }
            set {
                this.updatableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UpdatableSpecified {
            get {
                return this.updatableFieldSpecified;
            }
            set {
                this.updatableFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool AllowAddNew {
            get {
                return this.allowAddNewField;
            }
            set {
                this.allowAddNewField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AllowAddNewSpecified {
            get {
                return this.allowAddNewFieldSpecified;
            }
            set {
                this.allowAddNewFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool SupportMDR {
            get {
                return this.supportMDRField;
            }
            set {
                this.supportMDRField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SupportMDRSpecified {
            get {
                return this.supportMDRFieldSpecified;
            }
            set {
                this.supportMDRFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string AddNewLabel {
            get {
                return this.addNewLabelField;
            }
            set {
                this.addNewLabelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string CGCCode {
            get {
                return this.cGCCodeField;
            }
            set {
                this.cGCCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string UpdatableBO {
            get {
                return this.updatableBOField;
            }
            set {
                this.updatableBOField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string UpdateMethod {
            get {
                return this.updateMethodField;
            }
            set {
                this.updateMethodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool ExtODBCQuery {
            get {
                return this.extODBCQueryField;
            }
            set {
                this.extODBCQueryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExtODBCQuerySpecified {
            get {
                return this.extODBCQueryFieldSpecified;
            }
            set {
                this.extODBCQueryFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ExtODBCServerType {
            get {
                return this.extODBCServerTypeField;
            }
            set {
                this.extODBCServerTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ExtODBCCnnString {
            get {
                return this.extODBCCnnStringField;
            }
            set {
                this.extODBCCnnStringField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool XCompany {
            get {
                return this.xCompanyField;
            }
            set {
                this.xCompanyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool XCompanySpecified {
            get {
                return this.xCompanyFieldSpecified;
            }
            set {
                this.xCompanyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowIdent {
            get {
                return this.rowIdentField;
            }
            set {
                this.rowIdentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowMod {
            get {
                return this.rowModField;
            }
            set {
                this.rowModField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] DBRowIdent {
            get {
                return this.dBRowIdentField;
            }
            set {
                this.dBRowIdentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://epicor.com/schemas")]
    public partial class ParsedTableDataSetType {
        
        private object[] parsedTableDataSetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ParsedTable", typeof(ParsedTableDataSetTypeParsedTable), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        [System.Xml.Serialization.XmlArrayItemAttribute("WebServiceErrors", typeof(ParsedTableDataSetTypeWebServiceErrors), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public object[] ParsedTableDataSet {
            get {
                return this.parsedTableDataSetField;
            }
            set {
                this.parsedTableDataSetField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class ParsedTableDataSetTypeParsedTable {
        
        private string dataTableIDField;
        
        private string dataTableNameField;
        
        private string descriptionField;
        
        private string dBTableNameField;
        
        private string rowIdentField;
        
        private string rowModField;
        
        private byte[] dBRowIdentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DataTableID {
            get {
                return this.dataTableIDField;
            }
            set {
                this.dataTableIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DataTableName {
            get {
                return this.dataTableNameField;
            }
            set {
                this.dataTableNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DBTableName {
            get {
                return this.dBTableNameField;
            }
            set {
                this.dBTableNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowIdent {
            get {
                return this.rowIdentField;
            }
            set {
                this.rowIdentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowMod {
            get {
                return this.rowModField;
            }
            set {
                this.rowModField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] DBRowIdent {
            get {
                return this.dBRowIdentField;
            }
            set {
                this.dBRowIdentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class ParsedTableDataSetTypeWebServiceErrors {
        
        private string tableNameField;
        
        private string errorLevelField;
        
        private string errorTypeField;
        
        private string errorTextField;
        
        private string sysRowIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string TableName {
            get {
                return this.tableNameField;
            }
            set {
                this.tableNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ErrorLevel {
            get {
                return this.errorLevelField;
            }
            set {
                this.errorLevelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ErrorType {
            get {
                return this.errorTypeField;
            }
            set {
                this.errorTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ErrorText {
            get {
                return this.errorTextField;
            }
            set {
                this.errorTextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SysRowID {
            get {
                return this.sysRowIDField;
            }
            set {
                this.sysRowIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://epicor.com/schemas")]
    public partial class RelatedTableDataSetType {
        
        private object[] relatedTableDataSetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("RelatedTable", typeof(RelatedTableDataSetTypeRelatedTable), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        [System.Xml.Serialization.XmlArrayItemAttribute("WebServiceErrors", typeof(RelatedTableDataSetTypeWebServiceErrors), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public object[] RelatedTableDataSet {
            get {
                return this.relatedTableDataSetField;
            }
            set {
                this.relatedTableDataSetField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class RelatedTableDataSetTypeRelatedTable {
        
        private string dataTableIDField;
        
        private string descriptionField;
        
        private string relatedDataTableIDField;
        
        private string relatedKeyIDField;
        
        private string relatedByField;
        
        private string rowIdentField;
        
        private string rowModField;
        
        private byte[] dBRowIdentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DataTableID {
            get {
                return this.dataTableIDField;
            }
            set {
                this.dataTableIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RelatedDataTableID {
            get {
                return this.relatedDataTableIDField;
            }
            set {
                this.relatedDataTableIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RelatedKeyID {
            get {
                return this.relatedKeyIDField;
            }
            set {
                this.relatedKeyIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RelatedBy {
            get {
                return this.relatedByField;
            }
            set {
                this.relatedByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowIdent {
            get {
                return this.rowIdentField;
            }
            set {
                this.rowIdentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowMod {
            get {
                return this.rowModField;
            }
            set {
                this.rowModField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] DBRowIdent {
            get {
                return this.dBRowIdentField;
            }
            set {
                this.dBRowIdentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class RelatedTableDataSetTypeWebServiceErrors {
        
        private string tableNameField;
        
        private string errorLevelField;
        
        private string errorTypeField;
        
        private string errorTextField;
        
        private string sysRowIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string TableName {
            get {
                return this.tableNameField;
            }
            set {
                this.tableNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ErrorLevel {
            get {
                return this.errorLevelField;
            }
            set {
                this.errorLevelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ErrorType {
            get {
                return this.errorTypeField;
            }
            set {
                this.errorTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ErrorText {
            get {
                return this.errorTextField;
            }
            set {
                this.errorTextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SysRowID {
            get {
                return this.sysRowIDField;
            }
            set {
                this.sysRowIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://epicor.com/schemas")]
    public partial class DynamicQueryListDataSetType {
        
        private object[] dynamicQueryListDataSetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("DynamicQueryList", typeof(DynamicQueryListDataSetTypeDynamicQueryList), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        [System.Xml.Serialization.XmlArrayItemAttribute("WebServiceErrors", typeof(DynamicQueryListDataSetTypeWebServiceErrors), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public object[] DynamicQueryListDataSet {
            get {
                return this.dynamicQueryListDataSetField;
            }
            set {
                this.dynamicQueryListDataSetField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class DynamicQueryListDataSetTypeDynamicQueryList {
        
        private bool approvedField;
        
        private bool approvedFieldSpecified;
        
        private string dcdUserIDField;
        
        private string descriptionField;
        
        private string exportIDField;
        
        private string queryPhraseField;
        
        private string selFieldsField;
        
        private string companyField;
        
        private int fileTypeIDField;
        
        private bool fileTypeIDFieldSpecified;
        
        private bool foregroundField;
        
        private bool foregroundFieldSpecified;
        
        private bool outputLabelsField;
        
        private bool outputLabelsFieldSpecified;
        
        private string textDelimField;
        
        private string fileNameField;
        
        private string fileTypeField;
        
        private bool isSharedField;
        
        private bool isSharedFieldSpecified;
        
        private bool deliveredField;
        
        private bool deliveredFieldSpecified;
        
        private bool isFreeFormField;
        
        private bool isFreeFormFieldSpecified;
        
        private bool globalQueryField;
        
        private bool globalQueryFieldSpecified;
        
        private string bAQVersionField;
        
        private bool isTransientField;
        
        private bool isTransientFieldSpecified;
        
        private string cGCCodeField;
        
        private string addNewLabelField;
        
        private bool allowAddNewField;
        
        private bool allowAddNewFieldSpecified;
        
        private bool updatableField;
        
        private bool updatableFieldSpecified;
        
        private string updatableBOField;
        
        private string updateMethodField;
        
        private bool supportMDRField;
        
        private bool supportMDRFieldSpecified;
        
        private string rowIdentField;
        
        private string rowModField;
        
        private byte[] dBRowIdentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool Approved {
            get {
                return this.approvedField;
            }
            set {
                this.approvedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ApprovedSpecified {
            get {
                return this.approvedFieldSpecified;
            }
            set {
                this.approvedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DcdUserID {
            get {
                return this.dcdUserIDField;
            }
            set {
                this.dcdUserIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ExportID {
            get {
                return this.exportIDField;
            }
            set {
                this.exportIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string QueryPhrase {
            get {
                return this.queryPhraseField;
            }
            set {
                this.queryPhraseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SelFields {
            get {
                return this.selFieldsField;
            }
            set {
                this.selFieldsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int FileTypeID {
            get {
                return this.fileTypeIDField;
            }
            set {
                this.fileTypeIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FileTypeIDSpecified {
            get {
                return this.fileTypeIDFieldSpecified;
            }
            set {
                this.fileTypeIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool foreground {
            get {
                return this.foregroundField;
            }
            set {
                this.foregroundField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool foregroundSpecified {
            get {
                return this.foregroundFieldSpecified;
            }
            set {
                this.foregroundFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool OutputLabels {
            get {
                return this.outputLabelsField;
            }
            set {
                this.outputLabelsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OutputLabelsSpecified {
            get {
                return this.outputLabelsFieldSpecified;
            }
            set {
                this.outputLabelsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string TextDelim {
            get {
                return this.textDelimField;
            }
            set {
                this.textDelimField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FileType {
            get {
                return this.fileTypeField;
            }
            set {
                this.fileTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IsShared {
            get {
                return this.isSharedField;
            }
            set {
                this.isSharedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsSharedSpecified {
            get {
                return this.isSharedFieldSpecified;
            }
            set {
                this.isSharedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool Delivered {
            get {
                return this.deliveredField;
            }
            set {
                this.deliveredField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DeliveredSpecified {
            get {
                return this.deliveredFieldSpecified;
            }
            set {
                this.deliveredFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IsFreeForm {
            get {
                return this.isFreeFormField;
            }
            set {
                this.isFreeFormField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsFreeFormSpecified {
            get {
                return this.isFreeFormFieldSpecified;
            }
            set {
                this.isFreeFormFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool GlobalQuery {
            get {
                return this.globalQueryField;
            }
            set {
                this.globalQueryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GlobalQuerySpecified {
            get {
                return this.globalQueryFieldSpecified;
            }
            set {
                this.globalQueryFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string BAQVersion {
            get {
                return this.bAQVersionField;
            }
            set {
                this.bAQVersionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IsTransient {
            get {
                return this.isTransientField;
            }
            set {
                this.isTransientField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsTransientSpecified {
            get {
                return this.isTransientFieldSpecified;
            }
            set {
                this.isTransientFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string CGCCode {
            get {
                return this.cGCCodeField;
            }
            set {
                this.cGCCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string AddNewLabel {
            get {
                return this.addNewLabelField;
            }
            set {
                this.addNewLabelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool AllowAddNew {
            get {
                return this.allowAddNewField;
            }
            set {
                this.allowAddNewField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AllowAddNewSpecified {
            get {
                return this.allowAddNewFieldSpecified;
            }
            set {
                this.allowAddNewFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool Updatable {
            get {
                return this.updatableField;
            }
            set {
                this.updatableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UpdatableSpecified {
            get {
                return this.updatableFieldSpecified;
            }
            set {
                this.updatableFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string UpdatableBO {
            get {
                return this.updatableBOField;
            }
            set {
                this.updatableBOField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string UpdateMethod {
            get {
                return this.updateMethodField;
            }
            set {
                this.updateMethodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool SupportMDR {
            get {
                return this.supportMDRField;
            }
            set {
                this.supportMDRField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SupportMDRSpecified {
            get {
                return this.supportMDRFieldSpecified;
            }
            set {
                this.supportMDRFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowIdent {
            get {
                return this.rowIdentField;
            }
            set {
                this.rowIdentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowMod {
            get {
                return this.rowModField;
            }
            set {
                this.rowModField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] DBRowIdent {
            get {
                return this.dBRowIdentField;
            }
            set {
                this.dBRowIdentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class DynamicQueryListDataSetTypeWebServiceErrors {
        
        private string tableNameField;
        
        private string errorLevelField;
        
        private string errorTypeField;
        
        private string errorTextField;
        
        private string sysRowIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string TableName {
            get {
                return this.tableNameField;
            }
            set {
                this.tableNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ErrorLevel {
            get {
                return this.errorLevelField;
            }
            set {
                this.errorLevelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ErrorType {
            get {
                return this.errorTypeField;
            }
            set {
                this.errorTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ErrorText {
            get {
                return this.errorTextField;
            }
            set {
                this.errorTextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SysRowID {
            get {
                return this.sysRowIDField;
            }
            set {
                this.sysRowIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://epicor.com/schemas")]
    public partial class FiscalPeriodListDataSetType {
        
        private object[] fiscalPeriodListDataSetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("FiscalPeriodList", typeof(FiscalPeriodListDataSetTypeFiscalPeriodList), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        [System.Xml.Serialization.XmlArrayItemAttribute("WebServiceErrors", typeof(FiscalPeriodListDataSetTypeWebServiceErrors), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public object[] FiscalPeriodListDataSet {
            get {
                return this.fiscalPeriodListDataSetField;
            }
            set {
                this.fiscalPeriodListDataSetField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class FiscalPeriodListDataSetTypeFiscalPeriodList {
        
        private string companyField;
        
        private string fiscalCalendarIDField;
        
        private int fiscalYearField;
        
        private bool fiscalYearFieldSpecified;
        
        private string fiscalYearSuffixField;
        
        private int fiscalPeriodField;
        
        private bool fiscalPeriodFieldSpecified;
        
        private System.DateTime startDateField;
        
        private bool startDateFieldSpecified;
        
        private System.DateTime endDateField;
        
        private bool endDateFieldSpecified;
        
        private bool closedPeriodField;
        
        private bool closedPeriodFieldSpecified;
        
        private bool fAClosedPeriodField;
        
        private bool fAClosedPeriodFieldSpecified;
        
        private string rowIdentField;
        
        private string rowModField;
        
        private byte[] dBRowIdentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FiscalCalendarID {
            get {
                return this.fiscalCalendarIDField;
            }
            set {
                this.fiscalCalendarIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int FiscalYear {
            get {
                return this.fiscalYearField;
            }
            set {
                this.fiscalYearField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FiscalYearSpecified {
            get {
                return this.fiscalYearFieldSpecified;
            }
            set {
                this.fiscalYearFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FiscalYearSuffix {
            get {
                return this.fiscalYearSuffixField;
            }
            set {
                this.fiscalYearSuffixField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int FiscalPeriod {
            get {
                return this.fiscalPeriodField;
            }
            set {
                this.fiscalPeriodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FiscalPeriodSpecified {
            get {
                return this.fiscalPeriodFieldSpecified;
            }
            set {
                this.fiscalPeriodFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartDateSpecified {
            get {
                return this.startDateFieldSpecified;
            }
            set {
                this.startDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndDateSpecified {
            get {
                return this.endDateFieldSpecified;
            }
            set {
                this.endDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool ClosedPeriod {
            get {
                return this.closedPeriodField;
            }
            set {
                this.closedPeriodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ClosedPeriodSpecified {
            get {
                return this.closedPeriodFieldSpecified;
            }
            set {
                this.closedPeriodFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool FAClosedPeriod {
            get {
                return this.fAClosedPeriodField;
            }
            set {
                this.fAClosedPeriodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FAClosedPeriodSpecified {
            get {
                return this.fAClosedPeriodFieldSpecified;
            }
            set {
                this.fAClosedPeriodFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowIdent {
            get {
                return this.rowIdentField;
            }
            set {
                this.rowIdentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowMod {
            get {
                return this.rowModField;
            }
            set {
                this.rowModField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] DBRowIdent {
            get {
                return this.dBRowIdentField;
            }
            set {
                this.dBRowIdentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class FiscalPeriodListDataSetTypeWebServiceErrors {
        
        private string tableNameField;
        
        private string errorLevelField;
        
        private string errorTypeField;
        
        private string errorTextField;
        
        private string sysRowIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string TableName {
            get {
                return this.tableNameField;
            }
            set {
                this.tableNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ErrorLevel {
            get {
                return this.errorLevelField;
            }
            set {
                this.errorLevelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ErrorType {
            get {
                return this.errorTypeField;
            }
            set {
                this.errorTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ErrorText {
            get {
                return this.errorTextField;
            }
            set {
                this.errorTextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SysRowID {
            get {
                return this.sysRowIDField;
            }
            set {
                this.sysRowIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://epicor.com/schemas")]
    public partial class FieldListDataSetType {
        
        private object[] fieldListDataSetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("FieldList", typeof(FieldListDataSetTypeFieldList), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        [System.Xml.Serialization.XmlArrayItemAttribute("WebServiceErrors", typeof(FieldListDataSetTypeWebServiceErrors), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public object[] FieldListDataSet {
            get {
                return this.fieldListDataSetField;
            }
            set {
                this.fieldListDataSetField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class FieldListDataSetTypeFieldList {
        
        private string dataTableIDField;
        
        private int seqField;
        
        private bool seqFieldSpecified;
        
        private string fieldNameField;
        
        private string dBTableNameField;
        
        private string dBFieldNameField;
        
        private string dataTypeField;
        
        private string descriptionField;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        private string formulaField;
        
        private int fieldLengthField;
        
        private bool fieldLengthFieldSpecified;
        
        private string fieldFormatField;
        
        private string fieldLabelField;
        
        private string likeDataFieldTableIDField;
        
        private int likeDataFieldSeqField;
        
        private bool likeDataFieldSeqFieldSpecified;
        
        private string likeDataFieldNameField;
        
        private string rowIdentField;
        
        private string rowModField;
        
        private byte[] dBRowIdentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DataTableID {
            get {
                return this.dataTableIDField;
            }
            set {
                this.dataTableIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int Seq {
            get {
                return this.seqField;
            }
            set {
                this.seqField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SeqSpecified {
            get {
                return this.seqFieldSpecified;
            }
            set {
                this.seqFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FieldName {
            get {
                return this.fieldNameField;
            }
            set {
                this.fieldNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DBTableName {
            get {
                return this.dBTableNameField;
            }
            set {
                this.dBTableNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DBFieldName {
            get {
                return this.dBFieldNameField;
            }
            set {
                this.dBFieldNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DataType {
            get {
                return this.dataTypeField;
            }
            set {
                this.dataTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool External {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExternalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Formula {
            get {
                return this.formulaField;
            }
            set {
                this.formulaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int FieldLength {
            get {
                return this.fieldLengthField;
            }
            set {
                this.fieldLengthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FieldLengthSpecified {
            get {
                return this.fieldLengthFieldSpecified;
            }
            set {
                this.fieldLengthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FieldFormat {
            get {
                return this.fieldFormatField;
            }
            set {
                this.fieldFormatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FieldLabel {
            get {
                return this.fieldLabelField;
            }
            set {
                this.fieldLabelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string LikeDataFieldTableID {
            get {
                return this.likeDataFieldTableIDField;
            }
            set {
                this.likeDataFieldTableIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int LikeDataFieldSeq {
            get {
                return this.likeDataFieldSeqField;
            }
            set {
                this.likeDataFieldSeqField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LikeDataFieldSeqSpecified {
            get {
                return this.likeDataFieldSeqFieldSpecified;
            }
            set {
                this.likeDataFieldSeqFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string LikeDataFieldName {
            get {
                return this.likeDataFieldNameField;
            }
            set {
                this.likeDataFieldNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowIdent {
            get {
                return this.rowIdentField;
            }
            set {
                this.rowIdentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowMod {
            get {
                return this.rowModField;
            }
            set {
                this.rowModField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] DBRowIdent {
            get {
                return this.dBRowIdentField;
            }
            set {
                this.dBRowIdentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class FieldListDataSetTypeWebServiceErrors {
        
        private string tableNameField;
        
        private string errorLevelField;
        
        private string errorTypeField;
        
        private string errorTextField;
        
        private string sysRowIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string TableName {
            get {
                return this.tableNameField;
            }
            set {
                this.tableNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ErrorLevel {
            get {
                return this.errorLevelField;
            }
            set {
                this.errorLevelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ErrorType {
            get {
                return this.errorTypeField;
            }
            set {
                this.errorTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ErrorText {
            get {
                return this.errorTextField;
            }
            set {
                this.errorTextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SysRowID {
            get {
                return this.sysRowIDField;
            }
            set {
                this.sysRowIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://epicor.com/schemas")]
    public partial class BAQRequestDataSetType {
        
        private object[] bAQRequestDataSetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("BAQRequest", typeof(BAQRequestDataSetTypeBAQRequest), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        [System.Xml.Serialization.XmlArrayItemAttribute("WebServiceErrors", typeof(BAQRequestDataSetTypeWebServiceErrors), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public object[] BAQRequestDataSet {
            get {
                return this.bAQRequestDataSetField;
            }
            set {
                this.bAQRequestDataSetField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class BAQRequestDataSetTypeBAQRequest {
        
        private string exportIDField;
        
        private string bAQVersionField;
        
        private bool hasErrorField;
        
        private bool hasErrorFieldSpecified;
        
        private string errMessageField;
        
        private bool dBParseField;
        
        private bool dBParseFieldSpecified;
        
        private string rowIdentField;
        
        private string rowModField;
        
        private byte[] dBRowIdentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ExportID {
            get {
                return this.exportIDField;
            }
            set {
                this.exportIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string BAQVersion {
            get {
                return this.bAQVersionField;
            }
            set {
                this.bAQVersionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool HasError {
            get {
                return this.hasErrorField;
            }
            set {
                this.hasErrorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HasErrorSpecified {
            get {
                return this.hasErrorFieldSpecified;
            }
            set {
                this.hasErrorFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ErrMessage {
            get {
                return this.errMessageField;
            }
            set {
                this.errMessageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool DBParse {
            get {
                return this.dBParseField;
            }
            set {
                this.dBParseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DBParseSpecified {
            get {
                return this.dBParseFieldSpecified;
            }
            set {
                this.dBParseFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowIdent {
            get {
                return this.rowIdentField;
            }
            set {
                this.rowIdentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowMod {
            get {
                return this.rowModField;
            }
            set {
                this.rowModField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] DBRowIdent {
            get {
                return this.dBRowIdentField;
            }
            set {
                this.dBRowIdentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class BAQRequestDataSetTypeWebServiceErrors {
        
        private string tableNameField;
        
        private string errorLevelField;
        
        private string errorTypeField;
        
        private string errorTextField;
        
        private string sysRowIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string TableName {
            get {
                return this.tableNameField;
            }
            set {
                this.tableNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ErrorLevel {
            get {
                return this.errorLevelField;
            }
            set {
                this.errorLevelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ErrorType {
            get {
                return this.errorTypeField;
            }
            set {
                this.errorTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ErrorText {
            get {
                return this.errorTextField;
            }
            set {
                this.errorTextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SysRowID {
            get {
                return this.sysRowIDField;
            }
            set {
                this.sysRowIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://epicor.com/schemas")]
    public partial class AvailableTableListDataSetType {
        
        private object[] availableTableListDataSetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("AvailableTableList", typeof(AvailableTableListDataSetTypeAvailableTableList), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        [System.Xml.Serialization.XmlArrayItemAttribute("WebServiceErrors", typeof(AvailableTableListDataSetTypeWebServiceErrors), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public object[] AvailableTableListDataSet {
            get {
                return this.availableTableListDataSetField;
            }
            set {
                this.availableTableListDataSetField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class AvailableTableListDataSetTypeAvailableTableList {
        
        private string dataTableIDField;
        
        private string dataTableNameField;
        
        private string descriptionField;
        
        private string dBTableNameField;
        
        private string rowIdentField;
        
        private string rowModField;
        
        private byte[] dBRowIdentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DataTableID {
            get {
                return this.dataTableIDField;
            }
            set {
                this.dataTableIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DataTableName {
            get {
                return this.dataTableNameField;
            }
            set {
                this.dataTableNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DBTableName {
            get {
                return this.dBTableNameField;
            }
            set {
                this.dBTableNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowIdent {
            get {
                return this.rowIdentField;
            }
            set {
                this.rowIdentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowMod {
            get {
                return this.rowModField;
            }
            set {
                this.rowModField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] DBRowIdent {
            get {
                return this.dBRowIdentField;
            }
            set {
                this.dBRowIdentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class AvailableTableListDataSetTypeWebServiceErrors {
        
        private string tableNameField;
        
        private string errorLevelField;
        
        private string errorTypeField;
        
        private string errorTextField;
        
        private string sysRowIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string TableName {
            get {
                return this.tableNameField;
            }
            set {
                this.tableNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ErrorLevel {
            get {
                return this.errorLevelField;
            }
            set {
                this.errorLevelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ErrorType {
            get {
                return this.errorTypeField;
            }
            set {
                this.errorTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ErrorText {
            get {
                return this.errorTextField;
            }
            set {
                this.errorTextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SysRowID {
            get {
                return this.sysRowIDField;
            }
            set {
                this.sysRowIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://epicor.com/schemas")]
    public partial class ASPExportFieldDataSetType {
        
        private object[] aSPExportFieldDataSetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ASPExportField", typeof(ASPExportFieldDataSetTypeASPExportField), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        [System.Xml.Serialization.XmlArrayItemAttribute("WebServiceErrors", typeof(ASPExportFieldDataSetTypeWebServiceErrors), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public object[] ASPExportFieldDataSet {
            get {
                return this.aSPExportFieldDataSetField;
            }
            set {
                this.aSPExportFieldDataSetField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class ASPExportFieldDataSetTypeASPExportField {
        
        private string companyField;
        
        private string exportIDField;
        
        private int seqField;
        
        private bool seqFieldSpecified;
        
        private string fieldNameField;
        
        private string descriptionField;
        
        private string fieldFormatField;
        
        private string fieldLabelField;
        
        private int fieldOrderField;
        
        private bool fieldOrderFieldSpecified;
        
        private string fieldSearchField;
        
        private string searchOptionsField;
        
        private bool showFieldField;
        
        private bool showFieldFieldSpecified;
        
        private bool searchFieldField;
        
        private bool searchFieldFieldSpecified;
        
        private bool isNumericField;
        
        private bool isNumericFieldSpecified;
        
        private string rowIdentField;
        
        private string rowModField;
        
        private byte[] dBRowIdentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ExportID {
            get {
                return this.exportIDField;
            }
            set {
                this.exportIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int Seq {
            get {
                return this.seqField;
            }
            set {
                this.seqField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SeqSpecified {
            get {
                return this.seqFieldSpecified;
            }
            set {
                this.seqFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FieldName {
            get {
                return this.fieldNameField;
            }
            set {
                this.fieldNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FieldFormat {
            get {
                return this.fieldFormatField;
            }
            set {
                this.fieldFormatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FieldLabel {
            get {
                return this.fieldLabelField;
            }
            set {
                this.fieldLabelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int FieldOrder {
            get {
                return this.fieldOrderField;
            }
            set {
                this.fieldOrderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FieldOrderSpecified {
            get {
                return this.fieldOrderFieldSpecified;
            }
            set {
                this.fieldOrderFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FieldSearch {
            get {
                return this.fieldSearchField;
            }
            set {
                this.fieldSearchField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SearchOptions {
            get {
                return this.searchOptionsField;
            }
            set {
                this.searchOptionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool ShowField {
            get {
                return this.showFieldField;
            }
            set {
                this.showFieldField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShowFieldSpecified {
            get {
                return this.showFieldFieldSpecified;
            }
            set {
                this.showFieldFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool SearchField {
            get {
                return this.searchFieldField;
            }
            set {
                this.searchFieldField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SearchFieldSpecified {
            get {
                return this.searchFieldFieldSpecified;
            }
            set {
                this.searchFieldFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IsNumeric {
            get {
                return this.isNumericField;
            }
            set {
                this.isNumericField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsNumericSpecified {
            get {
                return this.isNumericFieldSpecified;
            }
            set {
                this.isNumericFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowIdent {
            get {
                return this.rowIdentField;
            }
            set {
                this.rowIdentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowMod {
            get {
                return this.rowModField;
            }
            set {
                this.rowModField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] DBRowIdent {
            get {
                return this.dBRowIdentField;
            }
            set {
                this.dBRowIdentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class ASPExportFieldDataSetTypeWebServiceErrors {
        
        private string tableNameField;
        
        private string errorLevelField;
        
        private string errorTypeField;
        
        private string errorTextField;
        
        private string sysRowIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string TableName {
            get {
                return this.tableNameField;
            }
            set {
                this.tableNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ErrorLevel {
            get {
                return this.errorLevelField;
            }
            set {
                this.errorLevelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ErrorType {
            get {
                return this.errorTypeField;
            }
            set {
                this.errorTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ErrorText {
            get {
                return this.errorTextField;
            }
            set {
                this.errorTextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SysRowID {
            get {
                return this.sysRowIDField;
            }
            set {
                this.sysRowIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://epicor.com/schemas")]
    public partial class QueryExecutionDataSetType {
        
        private object[] queryExecutionDataSetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ExecutionFilter", typeof(QueryExecutionDataSetTypeExecutionFilter), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ExecutionParameter", typeof(QueryExecutionDataSetTypeExecutionParameter), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ExecutionValueSetItems", typeof(QueryExecutionDataSetTypeExecutionValueSetItems), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        [System.Xml.Serialization.XmlArrayItemAttribute("WebServiceErrors", typeof(QueryExecutionDataSetTypeWebServiceErrors), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public object[] QueryExecutionDataSet {
            get {
                return this.queryExecutionDataSetField;
            }
            set {
                this.queryExecutionDataSetField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class QueryExecutionDataSetTypeExecutionFilter {
        
        private string dataTableIDField;
        
        private string fieldNameField;
        
        private bool negField;
        
        private bool negFieldSpecified;
        
        private string compOpField;
        
        private string rValueField;
        
        private string rowIdentField;
        
        private string rowModField;
        
        private byte[] dBRowIdentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DataTableID {
            get {
                return this.dataTableIDField;
            }
            set {
                this.dataTableIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FieldName {
            get {
                return this.fieldNameField;
            }
            set {
                this.fieldNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool Neg {
            get {
                return this.negField;
            }
            set {
                this.negField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NegSpecified {
            get {
                return this.negFieldSpecified;
            }
            set {
                this.negFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string CompOp {
            get {
                return this.compOpField;
            }
            set {
                this.compOpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RValue {
            get {
                return this.rValueField;
            }
            set {
                this.rValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowIdent {
            get {
                return this.rowIdentField;
            }
            set {
                this.rowIdentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowMod {
            get {
                return this.rowModField;
            }
            set {
                this.rowModField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] DBRowIdent {
            get {
                return this.dBRowIdentField;
            }
            set {
                this.dBRowIdentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class QueryExecutionDataSetTypeExecutionParameter {
        
        private string parameterNameField;
        
        private string parameterValueField;
        
        private string valueTypeField;
        
        private bool isEmptyField;
        
        private bool isEmptyFieldSpecified;
        
        private string rowIdentField;
        
        private string rowModField;
        
        private byte[] dBRowIdentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ParameterName {
            get {
                return this.parameterNameField;
            }
            set {
                this.parameterNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ParameterValue {
            get {
                return this.parameterValueField;
            }
            set {
                this.parameterValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ValueType {
            get {
                return this.valueTypeField;
            }
            set {
                this.valueTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IsEmpty {
            get {
                return this.isEmptyField;
            }
            set {
                this.isEmptyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsEmptySpecified {
            get {
                return this.isEmptyFieldSpecified;
            }
            set {
                this.isEmptyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowIdent {
            get {
                return this.rowIdentField;
            }
            set {
                this.rowIdentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowMod {
            get {
                return this.rowModField;
            }
            set {
                this.rowModField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] DBRowIdent {
            get {
                return this.dBRowIdentField;
            }
            set {
                this.dBRowIdentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class QueryExecutionDataSetTypeExecutionValueSetItems {
        
        private string valueSetIDField;
        
        private string itemValueField;
        
        private string rowIdentField;
        
        private string rowModField;
        
        private byte[] dBRowIdentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ValueSetID {
            get {
                return this.valueSetIDField;
            }
            set {
                this.valueSetIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ItemValue {
            get {
                return this.itemValueField;
            }
            set {
                this.itemValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowIdent {
            get {
                return this.rowIdentField;
            }
            set {
                this.rowIdentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowMod {
            get {
                return this.rowModField;
            }
            set {
                this.rowModField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] DBRowIdent {
            get {
                return this.dBRowIdentField;
            }
            set {
                this.dBRowIdentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class QueryExecutionDataSetTypeWebServiceErrors {
        
        private string tableNameField;
        
        private string errorLevelField;
        
        private string errorTypeField;
        
        private string errorTextField;
        
        private string sysRowIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string TableName {
            get {
                return this.tableNameField;
            }
            set {
                this.tableNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ErrorLevel {
            get {
                return this.errorLevelField;
            }
            set {
                this.errorLevelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ErrorType {
            get {
                return this.errorTypeField;
            }
            set {
                this.errorTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ErrorText {
            get {
                return this.errorTextField;
            }
            set {
                this.errorTextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SysRowID {
            get {
                return this.sysRowIDField;
            }
            set {
                this.sysRowIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://epicor.com/schemas")]
    public partial class CallContextDataSetType {
        
        private object[] callContextDataSetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("BpmData", typeof(CallContextDataSetTypeBpmData), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        [System.Xml.Serialization.XmlArrayItemAttribute("CallStack", typeof(CallContextDataSetTypeCallStack), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        [System.Xml.Serialization.XmlArrayItemAttribute("CallState", typeof(CallContextDataSetTypeCallState), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Client", typeof(CallContextDataSetTypeClient), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ClientHandler", typeof(CallContextDataSetTypeClientHandler), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        [System.Xml.Serialization.XmlArrayItemAttribute("InfoMessage", typeof(CallContextDataSetTypeInfoMessage), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public object[] CallContextDataSet {
            get {
                return this.callContextDataSetField;
            }
            set {
                this.callContextDataSetField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class CallContextDataSetTypeBpmData {
        
        private string passwordField;
        
        private int buttonValueField;
        
        private bool buttonValueFieldSpecified;
        
        private string character01Field;
        
        private string character02Field;
        
        private string character03Field;
        
        private string character04Field;
        
        private string character05Field;
        
        private string character06Field;
        
        private string character07Field;
        
        private string character08Field;
        
        private string character09Field;
        
        private string character10Field;
        
        private string character11Field;
        
        private string character12Field;
        
        private string character13Field;
        
        private string character14Field;
        
        private string character15Field;
        
        private string character16Field;
        
        private string character17Field;
        
        private string character18Field;
        
        private string character19Field;
        
        private string character20Field;
        
        private decimal number01Field;
        
        private bool number01FieldSpecified;
        
        private decimal number02Field;
        
        private bool number02FieldSpecified;
        
        private decimal number03Field;
        
        private bool number03FieldSpecified;
        
        private decimal number04Field;
        
        private bool number04FieldSpecified;
        
        private decimal number05Field;
        
        private bool number05FieldSpecified;
        
        private decimal number06Field;
        
        private bool number06FieldSpecified;
        
        private decimal number07Field;
        
        private bool number07FieldSpecified;
        
        private decimal number08Field;
        
        private bool number08FieldSpecified;
        
        private decimal number09Field;
        
        private bool number09FieldSpecified;
        
        private decimal number10Field;
        
        private bool number10FieldSpecified;
        
        private decimal number11Field;
        
        private bool number11FieldSpecified;
        
        private decimal number12Field;
        
        private bool number12FieldSpecified;
        
        private decimal number13Field;
        
        private bool number13FieldSpecified;
        
        private decimal number14Field;
        
        private bool number14FieldSpecified;
        
        private decimal number15Field;
        
        private bool number15FieldSpecified;
        
        private decimal number16Field;
        
        private bool number16FieldSpecified;
        
        private decimal number17Field;
        
        private bool number17FieldSpecified;
        
        private decimal number18Field;
        
        private bool number18FieldSpecified;
        
        private decimal number19Field;
        
        private bool number19FieldSpecified;
        
        private decimal number20Field;
        
        private bool number20FieldSpecified;
        
        private System.DateTime date01Field;
        
        private bool date01FieldSpecified;
        
        private System.DateTime date02Field;
        
        private bool date02FieldSpecified;
        
        private System.DateTime date03Field;
        
        private bool date03FieldSpecified;
        
        private System.DateTime date04Field;
        
        private bool date04FieldSpecified;
        
        private System.DateTime date05Field;
        
        private bool date05FieldSpecified;
        
        private System.DateTime date06Field;
        
        private bool date06FieldSpecified;
        
        private System.DateTime date07Field;
        
        private bool date07FieldSpecified;
        
        private System.DateTime date08Field;
        
        private bool date08FieldSpecified;
        
        private System.DateTime date09Field;
        
        private bool date09FieldSpecified;
        
        private System.DateTime date10Field;
        
        private bool date10FieldSpecified;
        
        private bool checkbox01Field;
        
        private bool checkbox01FieldSpecified;
        
        private bool checkbox02Field;
        
        private bool checkbox02FieldSpecified;
        
        private bool checkbox03Field;
        
        private bool checkbox03FieldSpecified;
        
        private bool checkbox04Field;
        
        private bool checkbox04FieldSpecified;
        
        private bool checkbox05Field;
        
        private bool checkbox05FieldSpecified;
        
        private bool checkbox06Field;
        
        private bool checkbox06FieldSpecified;
        
        private bool checkbox07Field;
        
        private bool checkbox07FieldSpecified;
        
        private bool checkbox08Field;
        
        private bool checkbox08FieldSpecified;
        
        private bool checkbox09Field;
        
        private bool checkbox09FieldSpecified;
        
        private bool checkbox10Field;
        
        private bool checkbox10FieldSpecified;
        
        private string shortChar01Field;
        
        private string shortChar02Field;
        
        private string shortChar03Field;
        
        private string shortChar04Field;
        
        private string shortChar05Field;
        
        private string shortChar06Field;
        
        private string shortChar07Field;
        
        private string shortChar08Field;
        
        private string shortChar09Field;
        
        private string shortChar10Field;
        
        private string rowIdentField;
        
        private string rowModField;
        
        private byte[] dBRowIdentField;
        
        public CallContextDataSetTypeBpmData() {
            this.rowIdentField = "";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int ButtonValue {
            get {
                return this.buttonValueField;
            }
            set {
                this.buttonValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ButtonValueSpecified {
            get {
                return this.buttonValueFieldSpecified;
            }
            set {
                this.buttonValueFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Character01 {
            get {
                return this.character01Field;
            }
            set {
                this.character01Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Character02 {
            get {
                return this.character02Field;
            }
            set {
                this.character02Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Character03 {
            get {
                return this.character03Field;
            }
            set {
                this.character03Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Character04 {
            get {
                return this.character04Field;
            }
            set {
                this.character04Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Character05 {
            get {
                return this.character05Field;
            }
            set {
                this.character05Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Character06 {
            get {
                return this.character06Field;
            }
            set {
                this.character06Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Character07 {
            get {
                return this.character07Field;
            }
            set {
                this.character07Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Character08 {
            get {
                return this.character08Field;
            }
            set {
                this.character08Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Character09 {
            get {
                return this.character09Field;
            }
            set {
                this.character09Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Character10 {
            get {
                return this.character10Field;
            }
            set {
                this.character10Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Character11 {
            get {
                return this.character11Field;
            }
            set {
                this.character11Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Character12 {
            get {
                return this.character12Field;
            }
            set {
                this.character12Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Character13 {
            get {
                return this.character13Field;
            }
            set {
                this.character13Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Character14 {
            get {
                return this.character14Field;
            }
            set {
                this.character14Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Character15 {
            get {
                return this.character15Field;
            }
            set {
                this.character15Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Character16 {
            get {
                return this.character16Field;
            }
            set {
                this.character16Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Character17 {
            get {
                return this.character17Field;
            }
            set {
                this.character17Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Character18 {
            get {
                return this.character18Field;
            }
            set {
                this.character18Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Character19 {
            get {
                return this.character19Field;
            }
            set {
                this.character19Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Character20 {
            get {
                return this.character20Field;
            }
            set {
                this.character20Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal Number01 {
            get {
                return this.number01Field;
            }
            set {
                this.number01Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Number01Specified {
            get {
                return this.number01FieldSpecified;
            }
            set {
                this.number01FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal Number02 {
            get {
                return this.number02Field;
            }
            set {
                this.number02Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Number02Specified {
            get {
                return this.number02FieldSpecified;
            }
            set {
                this.number02FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal Number03 {
            get {
                return this.number03Field;
            }
            set {
                this.number03Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Number03Specified {
            get {
                return this.number03FieldSpecified;
            }
            set {
                this.number03FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal Number04 {
            get {
                return this.number04Field;
            }
            set {
                this.number04Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Number04Specified {
            get {
                return this.number04FieldSpecified;
            }
            set {
                this.number04FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal Number05 {
            get {
                return this.number05Field;
            }
            set {
                this.number05Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Number05Specified {
            get {
                return this.number05FieldSpecified;
            }
            set {
                this.number05FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal Number06 {
            get {
                return this.number06Field;
            }
            set {
                this.number06Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Number06Specified {
            get {
                return this.number06FieldSpecified;
            }
            set {
                this.number06FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal Number07 {
            get {
                return this.number07Field;
            }
            set {
                this.number07Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Number07Specified {
            get {
                return this.number07FieldSpecified;
            }
            set {
                this.number07FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal Number08 {
            get {
                return this.number08Field;
            }
            set {
                this.number08Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Number08Specified {
            get {
                return this.number08FieldSpecified;
            }
            set {
                this.number08FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal Number09 {
            get {
                return this.number09Field;
            }
            set {
                this.number09Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Number09Specified {
            get {
                return this.number09FieldSpecified;
            }
            set {
                this.number09FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal Number10 {
            get {
                return this.number10Field;
            }
            set {
                this.number10Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Number10Specified {
            get {
                return this.number10FieldSpecified;
            }
            set {
                this.number10FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal Number11 {
            get {
                return this.number11Field;
            }
            set {
                this.number11Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Number11Specified {
            get {
                return this.number11FieldSpecified;
            }
            set {
                this.number11FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal Number12 {
            get {
                return this.number12Field;
            }
            set {
                this.number12Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Number12Specified {
            get {
                return this.number12FieldSpecified;
            }
            set {
                this.number12FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal Number13 {
            get {
                return this.number13Field;
            }
            set {
                this.number13Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Number13Specified {
            get {
                return this.number13FieldSpecified;
            }
            set {
                this.number13FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal Number14 {
            get {
                return this.number14Field;
            }
            set {
                this.number14Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Number14Specified {
            get {
                return this.number14FieldSpecified;
            }
            set {
                this.number14FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal Number15 {
            get {
                return this.number15Field;
            }
            set {
                this.number15Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Number15Specified {
            get {
                return this.number15FieldSpecified;
            }
            set {
                this.number15FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal Number16 {
            get {
                return this.number16Field;
            }
            set {
                this.number16Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Number16Specified {
            get {
                return this.number16FieldSpecified;
            }
            set {
                this.number16FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal Number17 {
            get {
                return this.number17Field;
            }
            set {
                this.number17Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Number17Specified {
            get {
                return this.number17FieldSpecified;
            }
            set {
                this.number17FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal Number18 {
            get {
                return this.number18Field;
            }
            set {
                this.number18Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Number18Specified {
            get {
                return this.number18FieldSpecified;
            }
            set {
                this.number18FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal Number19 {
            get {
                return this.number19Field;
            }
            set {
                this.number19Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Number19Specified {
            get {
                return this.number19FieldSpecified;
            }
            set {
                this.number19FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal Number20 {
            get {
                return this.number20Field;
            }
            set {
                this.number20Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Number20Specified {
            get {
                return this.number20FieldSpecified;
            }
            set {
                this.number20FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime Date01 {
            get {
                return this.date01Field;
            }
            set {
                this.date01Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Date01Specified {
            get {
                return this.date01FieldSpecified;
            }
            set {
                this.date01FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime Date02 {
            get {
                return this.date02Field;
            }
            set {
                this.date02Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Date02Specified {
            get {
                return this.date02FieldSpecified;
            }
            set {
                this.date02FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime Date03 {
            get {
                return this.date03Field;
            }
            set {
                this.date03Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Date03Specified {
            get {
                return this.date03FieldSpecified;
            }
            set {
                this.date03FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime Date04 {
            get {
                return this.date04Field;
            }
            set {
                this.date04Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Date04Specified {
            get {
                return this.date04FieldSpecified;
            }
            set {
                this.date04FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime Date05 {
            get {
                return this.date05Field;
            }
            set {
                this.date05Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Date05Specified {
            get {
                return this.date05FieldSpecified;
            }
            set {
                this.date05FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime Date06 {
            get {
                return this.date06Field;
            }
            set {
                this.date06Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Date06Specified {
            get {
                return this.date06FieldSpecified;
            }
            set {
                this.date06FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime Date07 {
            get {
                return this.date07Field;
            }
            set {
                this.date07Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Date07Specified {
            get {
                return this.date07FieldSpecified;
            }
            set {
                this.date07FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime Date08 {
            get {
                return this.date08Field;
            }
            set {
                this.date08Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Date08Specified {
            get {
                return this.date08FieldSpecified;
            }
            set {
                this.date08FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime Date09 {
            get {
                return this.date09Field;
            }
            set {
                this.date09Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Date09Specified {
            get {
                return this.date09FieldSpecified;
            }
            set {
                this.date09FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime Date10 {
            get {
                return this.date10Field;
            }
            set {
                this.date10Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Date10Specified {
            get {
                return this.date10FieldSpecified;
            }
            set {
                this.date10FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool Checkbox01 {
            get {
                return this.checkbox01Field;
            }
            set {
                this.checkbox01Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Checkbox01Specified {
            get {
                return this.checkbox01FieldSpecified;
            }
            set {
                this.checkbox01FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool Checkbox02 {
            get {
                return this.checkbox02Field;
            }
            set {
                this.checkbox02Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Checkbox02Specified {
            get {
                return this.checkbox02FieldSpecified;
            }
            set {
                this.checkbox02FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool Checkbox03 {
            get {
                return this.checkbox03Field;
            }
            set {
                this.checkbox03Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Checkbox03Specified {
            get {
                return this.checkbox03FieldSpecified;
            }
            set {
                this.checkbox03FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool Checkbox04 {
            get {
                return this.checkbox04Field;
            }
            set {
                this.checkbox04Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Checkbox04Specified {
            get {
                return this.checkbox04FieldSpecified;
            }
            set {
                this.checkbox04FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool Checkbox05 {
            get {
                return this.checkbox05Field;
            }
            set {
                this.checkbox05Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Checkbox05Specified {
            get {
                return this.checkbox05FieldSpecified;
            }
            set {
                this.checkbox05FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool Checkbox06 {
            get {
                return this.checkbox06Field;
            }
            set {
                this.checkbox06Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Checkbox06Specified {
            get {
                return this.checkbox06FieldSpecified;
            }
            set {
                this.checkbox06FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool Checkbox07 {
            get {
                return this.checkbox07Field;
            }
            set {
                this.checkbox07Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Checkbox07Specified {
            get {
                return this.checkbox07FieldSpecified;
            }
            set {
                this.checkbox07FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool Checkbox08 {
            get {
                return this.checkbox08Field;
            }
            set {
                this.checkbox08Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Checkbox08Specified {
            get {
                return this.checkbox08FieldSpecified;
            }
            set {
                this.checkbox08FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool Checkbox09 {
            get {
                return this.checkbox09Field;
            }
            set {
                this.checkbox09Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Checkbox09Specified {
            get {
                return this.checkbox09FieldSpecified;
            }
            set {
                this.checkbox09FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool Checkbox10 {
            get {
                return this.checkbox10Field;
            }
            set {
                this.checkbox10Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Checkbox10Specified {
            get {
                return this.checkbox10FieldSpecified;
            }
            set {
                this.checkbox10FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ShortChar01 {
            get {
                return this.shortChar01Field;
            }
            set {
                this.shortChar01Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ShortChar02 {
            get {
                return this.shortChar02Field;
            }
            set {
                this.shortChar02Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ShortChar03 {
            get {
                return this.shortChar03Field;
            }
            set {
                this.shortChar03Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ShortChar04 {
            get {
                return this.shortChar04Field;
            }
            set {
                this.shortChar04Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ShortChar05 {
            get {
                return this.shortChar05Field;
            }
            set {
                this.shortChar05Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ShortChar06 {
            get {
                return this.shortChar06Field;
            }
            set {
                this.shortChar06Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ShortChar07 {
            get {
                return this.shortChar07Field;
            }
            set {
                this.shortChar07Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ShortChar08 {
            get {
                return this.shortChar08Field;
            }
            set {
                this.shortChar08Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ShortChar09 {
            get {
                return this.shortChar09Field;
            }
            set {
                this.shortChar09Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ShortChar10 {
            get {
                return this.shortChar10Field;
            }
            set {
                this.shortChar10Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowIdent {
            get {
                return this.rowIdentField;
            }
            set {
                this.rowIdentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowMod {
            get {
                return this.rowModField;
            }
            set {
                this.rowModField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] DBRowIdent {
            get {
                return this.dBRowIdentField;
            }
            set {
                this.dBRowIdentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class CallContextDataSetTypeCallStack {
        
        private string milestoneField;
        
        private string stateField;
        
        public CallContextDataSetTypeCallStack() {
            this.milestoneField = "";
            this.stateField = "";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Milestone {
            get {
                return this.milestoneField;
            }
            set {
                this.milestoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("")]
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class CallContextDataSetTypeCallState {
        
        private string argumentNameField;
        
        private int chunkSeqField;
        
        private string valueChunkField;
        
        public CallContextDataSetTypeCallState() {
            this.argumentNameField = "";
            this.valueChunkField = "";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ArgumentName {
            get {
                return this.argumentNameField;
            }
            set {
                this.argumentNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int ChunkSeq {
            get {
                return this.chunkSeqField;
            }
            set {
                this.chunkSeqField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute("")]
        public string ValueChunk {
            get {
                return this.valueChunkField;
            }
            set {
                this.valueChunkField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class CallContextDataSetTypeClient {
        
        private string clientTypeField;
        
        private string processIdField;
        
        private string assemblyNameField;
        
        private string customizationIdField;
        
        private string currentUserIdField;
        
        private string currentCompanyField;
        
        private string currentPlantField;
        
        private string cGCCodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ClientType {
            get {
                return this.clientTypeField;
            }
            set {
                this.clientTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ProcessId {
            get {
                return this.processIdField;
            }
            set {
                this.processIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string AssemblyName {
            get {
                return this.assemblyNameField;
            }
            set {
                this.assemblyNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string CustomizationId {
            get {
                return this.customizationIdField;
            }
            set {
                this.customizationIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string CurrentUserId {
            get {
                return this.currentUserIdField;
            }
            set {
                this.currentUserIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string CurrentCompany {
            get {
                return this.currentCompanyField;
            }
            set {
                this.currentCompanyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string CurrentPlant {
            get {
                return this.currentPlantField;
            }
            set {
                this.currentPlantField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string CGCCode {
            get {
                return this.cGCCodeField;
            }
            set {
                this.cGCCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class CallContextDataSetTypeClientHandler {
        
        private string handlerIdField;
        
        private string dataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string HandlerId {
            get {
                return this.handlerIdField;
            }
            set {
                this.handlerIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class CallContextDataSetTypeInfoMessage {
        
        private string boField;
        
        private string methodField;
        
        private string userIdentField;
        
        private string companyField;
        
        private string plantField;
        
        private int versionField;
        
        private bool versionFieldSpecified;
        
        private int displayModeField;
        
        private int severityField;
        
        private bool severityFieldSpecified;
        
        private string messageTextField;
        
        public CallContextDataSetTypeInfoMessage() {
            this.displayModeField = 0;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string BO {
            get {
                return this.boField;
            }
            set {
                this.boField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Method {
            get {
                return this.methodField;
            }
            set {
                this.methodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string UserIdent {
            get {
                return this.userIdentField;
            }
            set {
                this.userIdentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Plant {
            get {
                return this.plantField;
            }
            set {
                this.plantField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VersionSpecified {
            get {
                return this.versionFieldSpecified;
            }
            set {
                this.versionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int DisplayMode {
            get {
                return this.displayModeField;
            }
            set {
                this.displayModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int Severity {
            get {
                return this.severityField;
            }
            set {
                this.severityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SeveritySpecified {
            get {
                return this.severityFieldSpecified;
            }
            set {
                this.severityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string MessageText {
            get {
                return this.messageTextField;
            }
            set {
                this.messageTextField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class QueryDesignDataSetTypeKey {
        
        private string dataTableIDField;
        
        private string keyIDField;
        
        private string descriptionField;
        
        private bool isPrimaryKeyField;
        
        private bool isPrimaryKeyFieldSpecified;
        
        private string companyField;
        
        private string dcdUserIDField;
        
        private string exportIDField;
        
        private bool nullableField;
        
        private bool nullableFieldSpecified;
        
        private string rowIdentField;
        
        private string rowModField;
        
        private byte[] dBRowIdentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DataTableID {
            get {
                return this.dataTableIDField;
            }
            set {
                this.dataTableIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string KeyID {
            get {
                return this.keyIDField;
            }
            set {
                this.keyIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IsPrimaryKey {
            get {
                return this.isPrimaryKeyField;
            }
            set {
                this.isPrimaryKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsPrimaryKeySpecified {
            get {
                return this.isPrimaryKeyFieldSpecified;
            }
            set {
                this.isPrimaryKeyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DcdUserID {
            get {
                return this.dcdUserIDField;
            }
            set {
                this.dcdUserIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ExportID {
            get {
                return this.exportIDField;
            }
            set {
                this.exportIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool Nullable {
            get {
                return this.nullableField;
            }
            set {
                this.nullableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NullableSpecified {
            get {
                return this.nullableFieldSpecified;
            }
            set {
                this.nullableFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowIdent {
            get {
                return this.rowIdentField;
            }
            set {
                this.rowIdentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowMod {
            get {
                return this.rowModField;
            }
            set {
                this.rowModField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] DBRowIdent {
            get {
                return this.dBRowIdentField;
            }
            set {
                this.dBRowIdentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class QueryDesignDataSetTypeKeyField {
        
        private string dataTableIDField;
        
        private string keyIDField;
        
        private int seqField;
        
        private string fieldNameField;
        
        private string descriptionField;
        
        private string companyField;
        
        private string dcdUserIDField;
        
        private string exportIDField;
        
        private string rowIdentField;
        
        private string rowModField;
        
        private byte[] dBRowIdentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DataTableID {
            get {
                return this.dataTableIDField;
            }
            set {
                this.dataTableIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string KeyID {
            get {
                return this.keyIDField;
            }
            set {
                this.keyIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int Seq {
            get {
                return this.seqField;
            }
            set {
                this.seqField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FieldName {
            get {
                return this.fieldNameField;
            }
            set {
                this.fieldNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DcdUserID {
            get {
                return this.dcdUserIDField;
            }
            set {
                this.dcdUserIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ExportID {
            get {
                return this.exportIDField;
            }
            set {
                this.exportIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowIdent {
            get {
                return this.rowIdentField;
            }
            set {
                this.rowIdentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowMod {
            get {
                return this.rowModField;
            }
            set {
                this.rowModField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] DBRowIdent {
            get {
                return this.dBRowIdentField;
            }
            set {
                this.dBRowIdentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class QueryDesignDataSetTypeQueryCalcFld {
        
        private string companyField;
        
        private bool approvedField;
        
        private bool approvedFieldSpecified;
        
        private string dcdUserIDField;
        
        private string exportIDField;
        
        private int seqField;
        
        private string fieldNameField;
        
        private string dataTypeField;
        
        private string descriptionField;
        
        private string formulaField;
        
        private int fieldLengthField;
        
        private bool fieldLengthFieldSpecified;
        
        private string fieldFormatField;
        
        private string fieldLabelField;
        
        private bool decimalCurDependentField;
        
        private bool decimalCurDependentFieldSpecified;
        
        private string decimalValueTypeField;
        
        private string decimalCurrencyTypeField;
        
        private string decimalCurCodeFieldField;
        
        private bool updatableField;
        
        private bool updatableFieldSpecified;
        
        private bool raiseEventField;
        
        private bool raiseEventFieldSpecified;
        
        private string shorterFieldNameField;
        
        private string quickSearchIDField;
        
        private string updInitExpressionField;
        
        private int fieldOrderField;
        
        private bool fieldOrderFieldSpecified;
        
        private string rowIdentField;
        
        private string rowModField;
        
        private byte[] dBRowIdentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool Approved {
            get {
                return this.approvedField;
            }
            set {
                this.approvedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ApprovedSpecified {
            get {
                return this.approvedFieldSpecified;
            }
            set {
                this.approvedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DcdUserID {
            get {
                return this.dcdUserIDField;
            }
            set {
                this.dcdUserIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ExportID {
            get {
                return this.exportIDField;
            }
            set {
                this.exportIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int Seq {
            get {
                return this.seqField;
            }
            set {
                this.seqField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FieldName {
            get {
                return this.fieldNameField;
            }
            set {
                this.fieldNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DataType {
            get {
                return this.dataTypeField;
            }
            set {
                this.dataTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Formula {
            get {
                return this.formulaField;
            }
            set {
                this.formulaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int FieldLength {
            get {
                return this.fieldLengthField;
            }
            set {
                this.fieldLengthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FieldLengthSpecified {
            get {
                return this.fieldLengthFieldSpecified;
            }
            set {
                this.fieldLengthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FieldFormat {
            get {
                return this.fieldFormatField;
            }
            set {
                this.fieldFormatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FieldLabel {
            get {
                return this.fieldLabelField;
            }
            set {
                this.fieldLabelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool DecimalCurDependent {
            get {
                return this.decimalCurDependentField;
            }
            set {
                this.decimalCurDependentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DecimalCurDependentSpecified {
            get {
                return this.decimalCurDependentFieldSpecified;
            }
            set {
                this.decimalCurDependentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DecimalValueType {
            get {
                return this.decimalValueTypeField;
            }
            set {
                this.decimalValueTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DecimalCurrencyType {
            get {
                return this.decimalCurrencyTypeField;
            }
            set {
                this.decimalCurrencyTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DecimalCurCodeField {
            get {
                return this.decimalCurCodeFieldField;
            }
            set {
                this.decimalCurCodeFieldField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool Updatable {
            get {
                return this.updatableField;
            }
            set {
                this.updatableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UpdatableSpecified {
            get {
                return this.updatableFieldSpecified;
            }
            set {
                this.updatableFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool RaiseEvent {
            get {
                return this.raiseEventField;
            }
            set {
                this.raiseEventField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RaiseEventSpecified {
            get {
                return this.raiseEventFieldSpecified;
            }
            set {
                this.raiseEventFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ShorterFieldName {
            get {
                return this.shorterFieldNameField;
            }
            set {
                this.shorterFieldNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string QuickSearchID {
            get {
                return this.quickSearchIDField;
            }
            set {
                this.quickSearchIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string UpdInitExpression {
            get {
                return this.updInitExpressionField;
            }
            set {
                this.updInitExpressionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int FieldOrder {
            get {
                return this.fieldOrderField;
            }
            set {
                this.fieldOrderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FieldOrderSpecified {
            get {
                return this.fieldOrderFieldSpecified;
            }
            set {
                this.fieldOrderFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowIdent {
            get {
                return this.rowIdentField;
            }
            set {
                this.rowIdentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowMod {
            get {
                return this.rowModField;
            }
            set {
                this.rowModField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] DBRowIdent {
            get {
                return this.dBRowIdentField;
            }
            set {
                this.dBRowIdentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class QueryDesignDataSetTypeQueryCtrl {
        
        private string companyField;
        
        private bool approvedField;
        
        private string glbCompanyField;
        
        private string dcdUserIdField;
        
        private string exportIDField;
        
        private string controlIDField;
        
        private string dataSourceField;
        
        private string dataTypeField;
        
        private string fieldFormatField;
        
        private bool isMandatoryField;
        
        private bool isMandatoryFieldSpecified;
        
        private string defaultValueField;
        
        private string controlTypeField;
        
        private string sysRowIDField;
        
        private int sysRevIDField;
        
        private bool sysRevIDFieldSpecified;
        
        private int bitFlagField;
        
        private bool bitFlagFieldSpecified;
        
        private int sourceTypeField;
        
        private bool sourceTypeFieldSpecified;
        
        private string rowIdentField;
        
        private string rowModField;
        
        private byte[] dBRowIdentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool Approved {
            get {
                return this.approvedField;
            }
            set {
                this.approvedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string GlbCompany {
            get {
                return this.glbCompanyField;
            }
            set {
                this.glbCompanyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DcdUserId {
            get {
                return this.dcdUserIdField;
            }
            set {
                this.dcdUserIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ExportID {
            get {
                return this.exportIDField;
            }
            set {
                this.exportIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ControlID {
            get {
                return this.controlIDField;
            }
            set {
                this.controlIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DataSource {
            get {
                return this.dataSourceField;
            }
            set {
                this.dataSourceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DataType {
            get {
                return this.dataTypeField;
            }
            set {
                this.dataTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FieldFormat {
            get {
                return this.fieldFormatField;
            }
            set {
                this.fieldFormatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IsMandatory {
            get {
                return this.isMandatoryField;
            }
            set {
                this.isMandatoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsMandatorySpecified {
            get {
                return this.isMandatoryFieldSpecified;
            }
            set {
                this.isMandatoryFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DefaultValue {
            get {
                return this.defaultValueField;
            }
            set {
                this.defaultValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ControlType {
            get {
                return this.controlTypeField;
            }
            set {
                this.controlTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SysRowID {
            get {
                return this.sysRowIDField;
            }
            set {
                this.sysRowIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int SysRevID {
            get {
                return this.sysRevIDField;
            }
            set {
                this.sysRevIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SysRevIDSpecified {
            get {
                return this.sysRevIDFieldSpecified;
            }
            set {
                this.sysRevIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int BitFlag {
            get {
                return this.bitFlagField;
            }
            set {
                this.bitFlagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BitFlagSpecified {
            get {
                return this.bitFlagFieldSpecified;
            }
            set {
                this.bitFlagFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int SourceType {
            get {
                return this.sourceTypeField;
            }
            set {
                this.sourceTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SourceTypeSpecified {
            get {
                return this.sourceTypeFieldSpecified;
            }
            set {
                this.sourceTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowIdent {
            get {
                return this.rowIdentField;
            }
            set {
                this.rowIdentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowMod {
            get {
                return this.rowModField;
            }
            set {
                this.rowModField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] DBRowIdent {
            get {
                return this.dBRowIdentField;
            }
            set {
                this.dBRowIdentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class QueryDesignDataSetTypeQueryCtrlValues {
        
        private string companyField;
        
        private bool approvedField;
        
        private string dcdUserIdField;
        
        private string exportIDField;
        
        private string glbCompanyField;
        
        private string controlIDField;
        
        private string idField;
        
        private string valField;
        
        private int seqField;
        
        private bool seqFieldSpecified;
        
        private string sysRowIDField;
        
        private int sysRevIDField;
        
        private bool sysRevIDFieldSpecified;
        
        private int bitFlagField;
        
        private bool bitFlagFieldSpecified;
        
        private string rowIdentField;
        
        private string rowModField;
        
        private byte[] dBRowIdentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool Approved {
            get {
                return this.approvedField;
            }
            set {
                this.approvedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DcdUserId {
            get {
                return this.dcdUserIdField;
            }
            set {
                this.dcdUserIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ExportID {
            get {
                return this.exportIDField;
            }
            set {
                this.exportIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string GlbCompany {
            get {
                return this.glbCompanyField;
            }
            set {
                this.glbCompanyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ControlID {
            get {
                return this.controlIDField;
            }
            set {
                this.controlIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Val {
            get {
                return this.valField;
            }
            set {
                this.valField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int Seq {
            get {
                return this.seqField;
            }
            set {
                this.seqField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SeqSpecified {
            get {
                return this.seqFieldSpecified;
            }
            set {
                this.seqFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SysRowID {
            get {
                return this.sysRowIDField;
            }
            set {
                this.sysRowIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int SysRevID {
            get {
                return this.sysRevIDField;
            }
            set {
                this.sysRevIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SysRevIDSpecified {
            get {
                return this.sysRevIDFieldSpecified;
            }
            set {
                this.sysRevIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int BitFlag {
            get {
                return this.bitFlagField;
            }
            set {
                this.bitFlagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BitFlagSpecified {
            get {
                return this.bitFlagFieldSpecified;
            }
            set {
                this.bitFlagFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowIdent {
            get {
                return this.rowIdentField;
            }
            set {
                this.rowIdentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowMod {
            get {
                return this.rowModField;
            }
            set {
                this.rowModField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] DBRowIdent {
            get {
                return this.dBRowIdentField;
            }
            set {
                this.dBRowIdentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class QueryDesignDataSetTypeQueryCustomAction {
        
        private string companyField;
        
        private bool approvedField;
        
        private string glbCompanyField;
        
        private string dcdUserIdField;
        
        private string exportIDField;
        
        private string actionIDField;
        
        private string sysRowIDField;
        
        private int sysRevIDField;
        
        private bool sysRevIDFieldSpecified;
        
        private int bitFlagField;
        
        private bool bitFlagFieldSpecified;
        
        private string actionLabelField;
        
        private string rowIdentField;
        
        private string rowModField;
        
        private byte[] dBRowIdentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool Approved {
            get {
                return this.approvedField;
            }
            set {
                this.approvedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string GlbCompany {
            get {
                return this.glbCompanyField;
            }
            set {
                this.glbCompanyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DcdUserId {
            get {
                return this.dcdUserIdField;
            }
            set {
                this.dcdUserIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ExportID {
            get {
                return this.exportIDField;
            }
            set {
                this.exportIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ActionID {
            get {
                return this.actionIDField;
            }
            set {
                this.actionIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SysRowID {
            get {
                return this.sysRowIDField;
            }
            set {
                this.sysRowIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int SysRevID {
            get {
                return this.sysRevIDField;
            }
            set {
                this.sysRevIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SysRevIDSpecified {
            get {
                return this.sysRevIDFieldSpecified;
            }
            set {
                this.sysRevIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int BitFlag {
            get {
                return this.bitFlagField;
            }
            set {
                this.bitFlagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BitFlagSpecified {
            get {
                return this.bitFlagFieldSpecified;
            }
            set {
                this.bitFlagFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ActionLabel {
            get {
                return this.actionLabelField;
            }
            set {
                this.actionLabelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowIdent {
            get {
                return this.rowIdentField;
            }
            set {
                this.rowIdentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowMod {
            get {
                return this.rowModField;
            }
            set {
                this.rowModField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] DBRowIdent {
            get {
                return this.dBRowIdentField;
            }
            set {
                this.dBRowIdentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class QueryDesignDataSetTypeQueryField {
        
        private string companyField;
        
        private bool approvedField;
        
        private bool approvedFieldSpecified;
        
        private string dcdUserIDField;
        
        private string exportIDField;
        
        private string glbCompanyField;
        
        private string dataTableIDField;
        
        private int seqField;
        
        private string fieldNameField;
        
        private string shorterFieldNameField;
        
        private string dBTableNameField;
        
        private string dBFieldNameField;
        
        private string dataTypeField;
        
        private string descriptionField;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        private string formulaField;
        
        private int fieldLengthField;
        
        private bool fieldLengthFieldSpecified;
        
        private string fieldFormatField;
        
        private string fieldLabelField;
        
        private string likeDataFieldTableIDField;
        
        private int likeDataFieldSeqField;
        
        private bool likeDataFieldSeqFieldSpecified;
        
        private bool useLikeField;
        
        private bool useLikeFieldSpecified;
        
        private string likeDataFieldNameField;
        
        private bool updatableField;
        
        private bool updatableFieldSpecified;
        
        private bool raiseEventField;
        
        private bool raiseEventFieldSpecified;
        
        private string quickSearchIDField;
        
        private bool dropDownField;
        
        private bool dropDownFieldSpecified;
        
        private string updInitExpressionField;
        
        private int fieldOrderField;
        
        private bool fieldOrderFieldSpecified;
        
        private string qualifiedColumnNameField;
        
        private string rowIdentField;
        
        private string rowModField;
        
        private byte[] dBRowIdentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool Approved {
            get {
                return this.approvedField;
            }
            set {
                this.approvedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ApprovedSpecified {
            get {
                return this.approvedFieldSpecified;
            }
            set {
                this.approvedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DcdUserID {
            get {
                return this.dcdUserIDField;
            }
            set {
                this.dcdUserIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ExportID {
            get {
                return this.exportIDField;
            }
            set {
                this.exportIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string GlbCompany {
            get {
                return this.glbCompanyField;
            }
            set {
                this.glbCompanyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DataTableID {
            get {
                return this.dataTableIDField;
            }
            set {
                this.dataTableIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int Seq {
            get {
                return this.seqField;
            }
            set {
                this.seqField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FieldName {
            get {
                return this.fieldNameField;
            }
            set {
                this.fieldNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ShorterFieldName {
            get {
                return this.shorterFieldNameField;
            }
            set {
                this.shorterFieldNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DBTableName {
            get {
                return this.dBTableNameField;
            }
            set {
                this.dBTableNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DBFieldName {
            get {
                return this.dBFieldNameField;
            }
            set {
                this.dBFieldNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DataType {
            get {
                return this.dataTypeField;
            }
            set {
                this.dataTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool External {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExternalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Formula {
            get {
                return this.formulaField;
            }
            set {
                this.formulaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int FieldLength {
            get {
                return this.fieldLengthField;
            }
            set {
                this.fieldLengthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FieldLengthSpecified {
            get {
                return this.fieldLengthFieldSpecified;
            }
            set {
                this.fieldLengthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FieldFormat {
            get {
                return this.fieldFormatField;
            }
            set {
                this.fieldFormatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FieldLabel {
            get {
                return this.fieldLabelField;
            }
            set {
                this.fieldLabelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string LikeDataFieldTableID {
            get {
                return this.likeDataFieldTableIDField;
            }
            set {
                this.likeDataFieldTableIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int LikeDataFieldSeq {
            get {
                return this.likeDataFieldSeqField;
            }
            set {
                this.likeDataFieldSeqField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LikeDataFieldSeqSpecified {
            get {
                return this.likeDataFieldSeqFieldSpecified;
            }
            set {
                this.likeDataFieldSeqFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool UseLike {
            get {
                return this.useLikeField;
            }
            set {
                this.useLikeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UseLikeSpecified {
            get {
                return this.useLikeFieldSpecified;
            }
            set {
                this.useLikeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string LikeDataFieldName {
            get {
                return this.likeDataFieldNameField;
            }
            set {
                this.likeDataFieldNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool Updatable {
            get {
                return this.updatableField;
            }
            set {
                this.updatableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UpdatableSpecified {
            get {
                return this.updatableFieldSpecified;
            }
            set {
                this.updatableFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool RaiseEvent {
            get {
                return this.raiseEventField;
            }
            set {
                this.raiseEventField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RaiseEventSpecified {
            get {
                return this.raiseEventFieldSpecified;
            }
            set {
                this.raiseEventFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string QuickSearchID {
            get {
                return this.quickSearchIDField;
            }
            set {
                this.quickSearchIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool DropDown {
            get {
                return this.dropDownField;
            }
            set {
                this.dropDownField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DropDownSpecified {
            get {
                return this.dropDownFieldSpecified;
            }
            set {
                this.dropDownFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string UpdInitExpression {
            get {
                return this.updInitExpressionField;
            }
            set {
                this.updInitExpressionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int FieldOrder {
            get {
                return this.fieldOrderField;
            }
            set {
                this.fieldOrderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FieldOrderSpecified {
            get {
                return this.fieldOrderFieldSpecified;
            }
            set {
                this.fieldOrderFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string QualifiedColumnName {
            get {
                return this.qualifiedColumnNameField;
            }
            set {
                this.qualifiedColumnNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowIdent {
            get {
                return this.rowIdentField;
            }
            set {
                this.rowIdentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowMod {
            get {
                return this.rowModField;
            }
            set {
                this.rowModField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] DBRowIdent {
            get {
                return this.dBRowIdentField;
            }
            set {
                this.dBRowIdentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class QueryDesignDataSetTypeQueryParameter {
        
        private string companyField;
        
        private bool approvedField;
        
        private string glbCompanyField;
        
        private string dcdUserIdField;
        
        private string exportIDField;
        
        private string parameterNameField;
        
        private string parameterTypeField;
        
        private bool skipIfEmptyField;
        
        private bool skipIfEmptyFieldSpecified;
        
        private string sysRowIDField;
        
        private int sysRevIDField;
        
        private bool sysRevIDFieldSpecified;
        
        private int bitFlagField;
        
        private bool bitFlagFieldSpecified;
        
        private string rowIdentField;
        
        private string rowModField;
        
        private byte[] dBRowIdentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool Approved {
            get {
                return this.approvedField;
            }
            set {
                this.approvedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string GlbCompany {
            get {
                return this.glbCompanyField;
            }
            set {
                this.glbCompanyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DcdUserId {
            get {
                return this.dcdUserIdField;
            }
            set {
                this.dcdUserIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ExportID {
            get {
                return this.exportIDField;
            }
            set {
                this.exportIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ParameterName {
            get {
                return this.parameterNameField;
            }
            set {
                this.parameterNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ParameterType {
            get {
                return this.parameterTypeField;
            }
            set {
                this.parameterTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool SkipIfEmpty {
            get {
                return this.skipIfEmptyField;
            }
            set {
                this.skipIfEmptyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SkipIfEmptySpecified {
            get {
                return this.skipIfEmptyFieldSpecified;
            }
            set {
                this.skipIfEmptyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SysRowID {
            get {
                return this.sysRowIDField;
            }
            set {
                this.sysRowIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int SysRevID {
            get {
                return this.sysRevIDField;
            }
            set {
                this.sysRevIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SysRevIDSpecified {
            get {
                return this.sysRevIDFieldSpecified;
            }
            set {
                this.sysRevIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int BitFlag {
            get {
                return this.bitFlagField;
            }
            set {
                this.bitFlagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BitFlagSpecified {
            get {
                return this.bitFlagFieldSpecified;
            }
            set {
                this.bitFlagFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowIdent {
            get {
                return this.rowIdentField;
            }
            set {
                this.rowIdentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowMod {
            get {
                return this.rowModField;
            }
            set {
                this.rowModField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] DBRowIdent {
            get {
                return this.dBRowIdentField;
            }
            set {
                this.dBRowIdentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class QueryDesignDataSetTypeQueryRelation {
        
        private string companyField;
        
        private bool approvedField;
        
        private bool approvedFieldSpecified;
        
        private string dcdUserIDField;
        
        private string exportIDField;
        
        private string glbCompanyField;
        
        private string relationIDField;
        
        private string parentDataTableIDField;
        
        private string childDataTableIDField;
        
        private string whichItemField;
        
        private string keyIDField;
        
        private string descriptionField;
        
        private string joinTypeField;
        
        private string sysRowIDField;
        
        private bool outerJoinField;
        
        private bool outerJoinFieldSpecified;
        
        private string rowIdentField;
        
        private string rowModField;
        
        private byte[] dBRowIdentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool Approved {
            get {
                return this.approvedField;
            }
            set {
                this.approvedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ApprovedSpecified {
            get {
                return this.approvedFieldSpecified;
            }
            set {
                this.approvedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DcdUserID {
            get {
                return this.dcdUserIDField;
            }
            set {
                this.dcdUserIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ExportID {
            get {
                return this.exportIDField;
            }
            set {
                this.exportIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string GlbCompany {
            get {
                return this.glbCompanyField;
            }
            set {
                this.glbCompanyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RelationID {
            get {
                return this.relationIDField;
            }
            set {
                this.relationIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ParentDataTableID {
            get {
                return this.parentDataTableIDField;
            }
            set {
                this.parentDataTableIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ChildDataTableID {
            get {
                return this.childDataTableIDField;
            }
            set {
                this.childDataTableIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string WhichItem {
            get {
                return this.whichItemField;
            }
            set {
                this.whichItemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string KeyID {
            get {
                return this.keyIDField;
            }
            set {
                this.keyIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string JoinType {
            get {
                return this.joinTypeField;
            }
            set {
                this.joinTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SysRowID {
            get {
                return this.sysRowIDField;
            }
            set {
                this.sysRowIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool OuterJoin {
            get {
                return this.outerJoinField;
            }
            set {
                this.outerJoinField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OuterJoinSpecified {
            get {
                return this.outerJoinFieldSpecified;
            }
            set {
                this.outerJoinFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowIdent {
            get {
                return this.rowIdentField;
            }
            set {
                this.rowIdentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowMod {
            get {
                return this.rowModField;
            }
            set {
                this.rowModField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] DBRowIdent {
            get {
                return this.dBRowIdentField;
            }
            set {
                this.dBRowIdentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class QueryDesignDataSetTypeQueryRelationField {
        
        private string companyField;
        
        private bool approvedField;
        
        private bool approvedFieldSpecified;
        
        private string dcdUserIDField;
        
        private string exportIDField;
        
        private string glbCompanyField;
        
        private string relationIDField;
        
        private int seqField;
        
        private string parentFieldNameField;
        
        private string childFieldNameField;
        
        private string sysRowIDField;
        
        private string compOpField;
        
        private bool isConstField;
        
        private bool isConstFieldSpecified;
        
        private string rowIdentField;
        
        private string rowModField;
        
        private byte[] dBRowIdentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool Approved {
            get {
                return this.approvedField;
            }
            set {
                this.approvedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ApprovedSpecified {
            get {
                return this.approvedFieldSpecified;
            }
            set {
                this.approvedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DcdUserID {
            get {
                return this.dcdUserIDField;
            }
            set {
                this.dcdUserIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ExportID {
            get {
                return this.exportIDField;
            }
            set {
                this.exportIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string GlbCompany {
            get {
                return this.glbCompanyField;
            }
            set {
                this.glbCompanyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RelationID {
            get {
                return this.relationIDField;
            }
            set {
                this.relationIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int Seq {
            get {
                return this.seqField;
            }
            set {
                this.seqField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ParentFieldName {
            get {
                return this.parentFieldNameField;
            }
            set {
                this.parentFieldNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ChildFieldName {
            get {
                return this.childFieldNameField;
            }
            set {
                this.childFieldNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SysRowID {
            get {
                return this.sysRowIDField;
            }
            set {
                this.sysRowIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string CompOp {
            get {
                return this.compOpField;
            }
            set {
                this.compOpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IsConst {
            get {
                return this.isConstField;
            }
            set {
                this.isConstField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsConstSpecified {
            get {
                return this.isConstFieldSpecified;
            }
            set {
                this.isConstFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowIdent {
            get {
                return this.rowIdentField;
            }
            set {
                this.rowIdentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowMod {
            get {
                return this.rowModField;
            }
            set {
                this.rowModField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] DBRowIdent {
            get {
                return this.dBRowIdentField;
            }
            set {
                this.dBRowIdentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class QueryDesignDataSetTypeQuerySortBy {
        
        private string companyField;
        
        private bool approvedField;
        
        private bool approvedFieldSpecified;
        
        private string dcdUserIDField;
        
        private string exportIDField;
        
        private string glbCompanyField;
        
        private int seqField;
        
        private string dataTableIDField;
        
        private string fieldNameField;
        
        private bool isAscendingField;
        
        private bool isAscendingFieldSpecified;
        
        private string sysRowIDField;
        
        private string displayNameField;
        
        private int fieldOrderField;
        
        private bool fieldOrderFieldSpecified;
        
        private string rowIdentField;
        
        private string rowModField;
        
        private byte[] dBRowIdentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool Approved {
            get {
                return this.approvedField;
            }
            set {
                this.approvedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ApprovedSpecified {
            get {
                return this.approvedFieldSpecified;
            }
            set {
                this.approvedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DcdUserID {
            get {
                return this.dcdUserIDField;
            }
            set {
                this.dcdUserIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ExportID {
            get {
                return this.exportIDField;
            }
            set {
                this.exportIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string GlbCompany {
            get {
                return this.glbCompanyField;
            }
            set {
                this.glbCompanyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int Seq {
            get {
                return this.seqField;
            }
            set {
                this.seqField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DataTableID {
            get {
                return this.dataTableIDField;
            }
            set {
                this.dataTableIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FieldName {
            get {
                return this.fieldNameField;
            }
            set {
                this.fieldNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IsAscending {
            get {
                return this.isAscendingField;
            }
            set {
                this.isAscendingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsAscendingSpecified {
            get {
                return this.isAscendingFieldSpecified;
            }
            set {
                this.isAscendingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SysRowID {
            get {
                return this.sysRowIDField;
            }
            set {
                this.sysRowIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DisplayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int FieldOrder {
            get {
                return this.fieldOrderField;
            }
            set {
                this.fieldOrderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FieldOrderSpecified {
            get {
                return this.fieldOrderFieldSpecified;
            }
            set {
                this.fieldOrderFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowIdent {
            get {
                return this.rowIdentField;
            }
            set {
                this.rowIdentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowMod {
            get {
                return this.rowModField;
            }
            set {
                this.rowModField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] DBRowIdent {
            get {
                return this.dBRowIdentField;
            }
            set {
                this.dBRowIdentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class QueryDesignDataSetTypeQueryTable {
        
        private string companyField;
        
        private bool approvedField;
        
        private bool approvedFieldSpecified;
        
        private string dcdUserIDField;
        
        private string exportIDField;
        
        private string glbCompanyField;
        
        private int seqField;
        
        private bool seqFieldSpecified;
        
        private string dataTableIDField;
        
        private string dataTableNameField;
        
        private string descriptionField;
        
        private string dBTableNameField;
        
        private string whereClauseField;
        
        private string qualifierField;
        
        private bool isSummaryTableField;
        
        private bool isSummaryTableFieldSpecified;
        
        private string sysRowIDField;
        
        private string rowIdentField;
        
        private string rowModField;
        
        private byte[] dBRowIdentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool Approved {
            get {
                return this.approvedField;
            }
            set {
                this.approvedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ApprovedSpecified {
            get {
                return this.approvedFieldSpecified;
            }
            set {
                this.approvedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DcdUserID {
            get {
                return this.dcdUserIDField;
            }
            set {
                this.dcdUserIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ExportID {
            get {
                return this.exportIDField;
            }
            set {
                this.exportIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string GlbCompany {
            get {
                return this.glbCompanyField;
            }
            set {
                this.glbCompanyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int Seq {
            get {
                return this.seqField;
            }
            set {
                this.seqField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SeqSpecified {
            get {
                return this.seqFieldSpecified;
            }
            set {
                this.seqFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DataTableID {
            get {
                return this.dataTableIDField;
            }
            set {
                this.dataTableIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DataTableName {
            get {
                return this.dataTableNameField;
            }
            set {
                this.dataTableNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DBTableName {
            get {
                return this.dBTableNameField;
            }
            set {
                this.dBTableNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string WhereClause {
            get {
                return this.whereClauseField;
            }
            set {
                this.whereClauseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Qualifier {
            get {
                return this.qualifierField;
            }
            set {
                this.qualifierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IsSummaryTable {
            get {
                return this.isSummaryTableField;
            }
            set {
                this.isSummaryTableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsSummaryTableSpecified {
            get {
                return this.isSummaryTableFieldSpecified;
            }
            set {
                this.isSummaryTableFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SysRowID {
            get {
                return this.sysRowIDField;
            }
            set {
                this.sysRowIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowIdent {
            get {
                return this.rowIdentField;
            }
            set {
                this.rowIdentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowMod {
            get {
                return this.rowModField;
            }
            set {
                this.rowModField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] DBRowIdent {
            get {
                return this.dBRowIdentField;
            }
            set {
                this.dBRowIdentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class QueryDesignDataSetTypeQueryUpdateField {
        
        private string dBTableNameField;
        
        private string dBFieldNameField;
        
        private string expressionField;
        
        private string sysRowIDField;
        
        private int sysRevIDField;
        
        private bool sysRevIDFieldSpecified;
        
        private int bitFlagField;
        
        private bool bitFlagFieldSpecified;
        
        private string companyField;
        
        private bool approvedField;
        
        private string dcdUserIdField;
        
        private string exportIDField;
        
        private string glbCompanyField;
        
        private string rowIdentField;
        
        private string rowModField;
        
        private byte[] dBRowIdentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DBTableName {
            get {
                return this.dBTableNameField;
            }
            set {
                this.dBTableNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DBFieldName {
            get {
                return this.dBFieldNameField;
            }
            set {
                this.dBFieldNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Expression {
            get {
                return this.expressionField;
            }
            set {
                this.expressionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SysRowID {
            get {
                return this.sysRowIDField;
            }
            set {
                this.sysRowIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int SysRevID {
            get {
                return this.sysRevIDField;
            }
            set {
                this.sysRevIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SysRevIDSpecified {
            get {
                return this.sysRevIDFieldSpecified;
            }
            set {
                this.sysRevIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int BitFlag {
            get {
                return this.bitFlagField;
            }
            set {
                this.bitFlagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BitFlagSpecified {
            get {
                return this.bitFlagFieldSpecified;
            }
            set {
                this.bitFlagFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool Approved {
            get {
                return this.approvedField;
            }
            set {
                this.approvedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DcdUserId {
            get {
                return this.dcdUserIdField;
            }
            set {
                this.dcdUserIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ExportID {
            get {
                return this.exportIDField;
            }
            set {
                this.exportIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string GlbCompany {
            get {
                return this.glbCompanyField;
            }
            set {
                this.glbCompanyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowIdent {
            get {
                return this.rowIdentField;
            }
            set {
                this.rowIdentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowMod {
            get {
                return this.rowModField;
            }
            set {
                this.rowModField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] DBRowIdent {
            get {
                return this.dBRowIdentField;
            }
            set {
                this.dBRowIdentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class QueryDesignDataSetTypeQueryValueSetItems {
        
        private string companyField;
        
        private bool approvedField;
        
        private string glbCompanyField;
        
        private string dcdUserIdField;
        
        private string exportIDField;
        
        private string valueSetIDField;
        
        private string itemValueField;
        
        private string sysRowIDField;
        
        private int sysRevIDField;
        
        private bool sysRevIDFieldSpecified;
        
        private int bitFlagField;
        
        private bool bitFlagFieldSpecified;
        
        private string rowIdentField;
        
        private string rowModField;
        
        private byte[] dBRowIdentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool Approved {
            get {
                return this.approvedField;
            }
            set {
                this.approvedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string GlbCompany {
            get {
                return this.glbCompanyField;
            }
            set {
                this.glbCompanyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DcdUserId {
            get {
                return this.dcdUserIdField;
            }
            set {
                this.dcdUserIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ExportID {
            get {
                return this.exportIDField;
            }
            set {
                this.exportIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ValueSetID {
            get {
                return this.valueSetIDField;
            }
            set {
                this.valueSetIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ItemValue {
            get {
                return this.itemValueField;
            }
            set {
                this.itemValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SysRowID {
            get {
                return this.sysRowIDField;
            }
            set {
                this.sysRowIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int SysRevID {
            get {
                return this.sysRevIDField;
            }
            set {
                this.sysRevIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SysRevIDSpecified {
            get {
                return this.sysRevIDFieldSpecified;
            }
            set {
                this.sysRevIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int BitFlag {
            get {
                return this.bitFlagField;
            }
            set {
                this.bitFlagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BitFlagSpecified {
            get {
                return this.bitFlagFieldSpecified;
            }
            set {
                this.bitFlagFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowIdent {
            get {
                return this.rowIdentField;
            }
            set {
                this.rowIdentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowMod {
            get {
                return this.rowModField;
            }
            set {
                this.rowModField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] DBRowIdent {
            get {
                return this.dBRowIdentField;
            }
            set {
                this.dBRowIdentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class QueryDesignDataSetTypeQueryWhereItem {
        
        private string companyField;
        
        private bool approvedField;
        
        private bool approvedFieldSpecified;
        
        private string dcdUserIDField;
        
        private string exportIDField;
        
        private string dataTableIDField;
        
        private int seqField;
        
        private string fieldNameField;
        
        private string compOpField;
        
        private bool isConstField;
        
        private bool isConstFieldSpecified;
        
        private string toDataTableIDField;
        
        private string toFieldNameField;
        
        private string andOrField;
        
        private bool negField;
        
        private bool negFieldSpecified;
        
        private string rValueField;
        
        private int numLeftPField;
        
        private bool numLeftPFieldSpecified;
        
        private int numRightPField;
        
        private bool numRightPFieldSpecified;
        
        private int parentSeqField;
        
        private bool parentSeqFieldSpecified;
        
        private string leftPField;
        
        private string rightPField;
        
        private System.DateTime rValueDateField;
        
        private bool rValueDateFieldSpecified;
        
        private string rValueNumberField;
        
        private bool fromTodayField;
        
        private bool fromTodayFieldSpecified;
        
        private int fromTodayValueField;
        
        private bool fromTodayValueFieldSpecified;
        
        private string rowIdentField;
        
        private string rowModField;
        
        private byte[] dBRowIdentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool Approved {
            get {
                return this.approvedField;
            }
            set {
                this.approvedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ApprovedSpecified {
            get {
                return this.approvedFieldSpecified;
            }
            set {
                this.approvedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DcdUserID {
            get {
                return this.dcdUserIDField;
            }
            set {
                this.dcdUserIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ExportID {
            get {
                return this.exportIDField;
            }
            set {
                this.exportIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DataTableID {
            get {
                return this.dataTableIDField;
            }
            set {
                this.dataTableIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int Seq {
            get {
                return this.seqField;
            }
            set {
                this.seqField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FieldName {
            get {
                return this.fieldNameField;
            }
            set {
                this.fieldNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string CompOp {
            get {
                return this.compOpField;
            }
            set {
                this.compOpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IsConst {
            get {
                return this.isConstField;
            }
            set {
                this.isConstField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsConstSpecified {
            get {
                return this.isConstFieldSpecified;
            }
            set {
                this.isConstFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ToDataTableID {
            get {
                return this.toDataTableIDField;
            }
            set {
                this.toDataTableIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ToFieldName {
            get {
                return this.toFieldNameField;
            }
            set {
                this.toFieldNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string AndOr {
            get {
                return this.andOrField;
            }
            set {
                this.andOrField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool Neg {
            get {
                return this.negField;
            }
            set {
                this.negField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NegSpecified {
            get {
                return this.negFieldSpecified;
            }
            set {
                this.negFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RValue {
            get {
                return this.rValueField;
            }
            set {
                this.rValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int NumLeftP {
            get {
                return this.numLeftPField;
            }
            set {
                this.numLeftPField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumLeftPSpecified {
            get {
                return this.numLeftPFieldSpecified;
            }
            set {
                this.numLeftPFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int NumRightP {
            get {
                return this.numRightPField;
            }
            set {
                this.numRightPField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumRightPSpecified {
            get {
                return this.numRightPFieldSpecified;
            }
            set {
                this.numRightPFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int ParentSeq {
            get {
                return this.parentSeqField;
            }
            set {
                this.parentSeqField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParentSeqSpecified {
            get {
                return this.parentSeqFieldSpecified;
            }
            set {
                this.parentSeqFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string LeftP {
            get {
                return this.leftPField;
            }
            set {
                this.leftPField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RightP {
            get {
                return this.rightPField;
            }
            set {
                this.rightPField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime RValueDate {
            get {
                return this.rValueDateField;
            }
            set {
                this.rValueDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RValueDateSpecified {
            get {
                return this.rValueDateFieldSpecified;
            }
            set {
                this.rValueDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RValueNumber {
            get {
                return this.rValueNumberField;
            }
            set {
                this.rValueNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool FromToday {
            get {
                return this.fromTodayField;
            }
            set {
                this.fromTodayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FromTodaySpecified {
            get {
                return this.fromTodayFieldSpecified;
            }
            set {
                this.fromTodayFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int FromTodayValue {
            get {
                return this.fromTodayValueField;
            }
            set {
                this.fromTodayValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FromTodayValueSpecified {
            get {
                return this.fromTodayValueFieldSpecified;
            }
            set {
                this.fromTodayValueFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowIdent {
            get {
                return this.rowIdentField;
            }
            set {
                this.rowIdentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowMod {
            get {
                return this.rowModField;
            }
            set {
                this.rowModField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] DBRowIdent {
            get {
                return this.dBRowIdentField;
            }
            set {
                this.dBRowIdentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class QueryDesignDataSetTypeSelectedField {
        
        private string companyField;
        
        private string dcdUserIDField;
        
        private string exportIDField;
        
        private string dataTableIDField;
        
        private int seqField;
        
        private string fieldNameField;
        
        private string shorterFieldNameField;
        
        private string dBTableNameField;
        
        private string dBFieldNameField;
        
        private string dataTypeField;
        
        private string descriptionField;
        
        private bool externalField;
        
        private bool externalFieldSpecified;
        
        private string formulaField;
        
        private int fieldLengthField;
        
        private bool fieldLengthFieldSpecified;
        
        private string fieldFormatField;
        
        private string fieldLabelField;
        
        private string likeDataFieldTableIDField;
        
        private int likeDataFieldSeqField;
        
        private bool likeDataFieldSeqFieldSpecified;
        
        private string likeDataFieldNameField;
        
        private string sysRowIDField;
        
        private bool updatableField;
        
        private bool updatableFieldSpecified;
        
        private bool raiseEventField;
        
        private bool raiseEventFieldSpecified;
        
        private string quickSearchIDField;
        
        private bool dropDownField;
        
        private bool dropDownFieldSpecified;
        
        private string updInitExpressionField;
        
        private string displayNameField;
        
        private int fieldOrderField;
        
        private bool fieldOrderFieldSpecified;
        
        private bool decimalCurDependentField;
        
        private bool decimalCurDependentFieldSpecified;
        
        private string decimalValueTypeField;
        
        private string decimalCurrencyTypeField;
        
        private string decimalCurCodeFieldField;
        
        private string rowIdentField;
        
        private string rowModField;
        
        private byte[] dBRowIdentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DcdUserID {
            get {
                return this.dcdUserIDField;
            }
            set {
                this.dcdUserIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ExportID {
            get {
                return this.exportIDField;
            }
            set {
                this.exportIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DataTableID {
            get {
                return this.dataTableIDField;
            }
            set {
                this.dataTableIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int Seq {
            get {
                return this.seqField;
            }
            set {
                this.seqField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FieldName {
            get {
                return this.fieldNameField;
            }
            set {
                this.fieldNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ShorterFieldName {
            get {
                return this.shorterFieldNameField;
            }
            set {
                this.shorterFieldNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DBTableName {
            get {
                return this.dBTableNameField;
            }
            set {
                this.dBTableNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DBFieldName {
            get {
                return this.dBFieldNameField;
            }
            set {
                this.dBFieldNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DataType {
            get {
                return this.dataTypeField;
            }
            set {
                this.dataTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool External {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExternalSpecified {
            get {
                return this.externalFieldSpecified;
            }
            set {
                this.externalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Formula {
            get {
                return this.formulaField;
            }
            set {
                this.formulaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int FieldLength {
            get {
                return this.fieldLengthField;
            }
            set {
                this.fieldLengthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FieldLengthSpecified {
            get {
                return this.fieldLengthFieldSpecified;
            }
            set {
                this.fieldLengthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FieldFormat {
            get {
                return this.fieldFormatField;
            }
            set {
                this.fieldFormatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FieldLabel {
            get {
                return this.fieldLabelField;
            }
            set {
                this.fieldLabelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string LikeDataFieldTableID {
            get {
                return this.likeDataFieldTableIDField;
            }
            set {
                this.likeDataFieldTableIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int LikeDataFieldSeq {
            get {
                return this.likeDataFieldSeqField;
            }
            set {
                this.likeDataFieldSeqField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LikeDataFieldSeqSpecified {
            get {
                return this.likeDataFieldSeqFieldSpecified;
            }
            set {
                this.likeDataFieldSeqFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string LikeDataFieldName {
            get {
                return this.likeDataFieldNameField;
            }
            set {
                this.likeDataFieldNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SysRowID {
            get {
                return this.sysRowIDField;
            }
            set {
                this.sysRowIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool Updatable {
            get {
                return this.updatableField;
            }
            set {
                this.updatableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UpdatableSpecified {
            get {
                return this.updatableFieldSpecified;
            }
            set {
                this.updatableFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool RaiseEvent {
            get {
                return this.raiseEventField;
            }
            set {
                this.raiseEventField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RaiseEventSpecified {
            get {
                return this.raiseEventFieldSpecified;
            }
            set {
                this.raiseEventFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string QuickSearchID {
            get {
                return this.quickSearchIDField;
            }
            set {
                this.quickSearchIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool DropDown {
            get {
                return this.dropDownField;
            }
            set {
                this.dropDownField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DropDownSpecified {
            get {
                return this.dropDownFieldSpecified;
            }
            set {
                this.dropDownFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string UpdInitExpression {
            get {
                return this.updInitExpressionField;
            }
            set {
                this.updInitExpressionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DisplayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int FieldOrder {
            get {
                return this.fieldOrderField;
            }
            set {
                this.fieldOrderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FieldOrderSpecified {
            get {
                return this.fieldOrderFieldSpecified;
            }
            set {
                this.fieldOrderFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool DecimalCurDependent {
            get {
                return this.decimalCurDependentField;
            }
            set {
                this.decimalCurDependentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DecimalCurDependentSpecified {
            get {
                return this.decimalCurDependentFieldSpecified;
            }
            set {
                this.decimalCurDependentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DecimalValueType {
            get {
                return this.decimalValueTypeField;
            }
            set {
                this.decimalValueTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DecimalCurrencyType {
            get {
                return this.decimalCurrencyTypeField;
            }
            set {
                this.decimalCurrencyTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DecimalCurCodeField {
            get {
                return this.decimalCurCodeFieldField;
            }
            set {
                this.decimalCurCodeFieldField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowIdent {
            get {
                return this.rowIdentField;
            }
            set {
                this.rowIdentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RowMod {
            get {
                return this.rowModField;
            }
            set {
                this.rowModField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] DBRowIdent {
            get {
                return this.dBRowIdentField;
            }
            set {
                this.dBRowIdentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class QueryDesignDataSetTypeWebServiceErrors {
        
        private string tableNameField;
        
        private string errorLevelField;
        
        private string errorTypeField;
        
        private string errorTextField;
        
        private string sysRowIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string TableName {
            get {
                return this.tableNameField;
            }
            set {
                this.tableNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ErrorLevel {
            get {
                return this.errorLevelField;
            }
            set {
                this.errorLevelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ErrorType {
            get {
                return this.errorTypeField;
            }
            set {
                this.errorTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ErrorText {
            get {
                return this.errorTextField;
            }
            set {
                this.errorTextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SysRowID {
            get {
                return this.sysRowIDField;
            }
            set {
                this.sysRowIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void AddCalculatedFieldCompletedEventHandler(object sender, AddCalculatedFieldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCalculatedFieldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCalculatedFieldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QueryDesignDataSetType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QueryDesignDataSetType)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void AddQueryFieldCompletedEventHandler(object sender, AddQueryFieldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddQueryFieldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddQueryFieldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QueryDesignDataSetType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QueryDesignDataSetType)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void AddQueryFieldsCompletedEventHandler(object sender, AddQueryFieldsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddQueryFieldsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddQueryFieldsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QueryDesignDataSetType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QueryDesignDataSetType)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void AddQueryRelationCompletedEventHandler(object sender, AddQueryRelationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddQueryRelationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddQueryRelationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QueryDesignDataSetType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QueryDesignDataSetType)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void AddQueryRelationFieldCompletedEventHandler(object sender, AddQueryRelationFieldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddQueryRelationFieldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddQueryRelationFieldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QueryDesignDataSetType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QueryDesignDataSetType)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void AddQueryTableCompletedEventHandler(object sender, AddQueryTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddQueryTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddQueryTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QueryDesignDataSetType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QueryDesignDataSetType)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void AddRelatedTableCompletedEventHandler(object sender, AddRelatedTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddRelatedTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddRelatedTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QueryDesignDataSetType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QueryDesignDataSetType)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void AddSortByCompletedEventHandler(object sender, AddSortByCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddSortByCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddSortByCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QueryDesignDataSetType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QueryDesignDataSetType)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void AddWhereItemCompletedEventHandler(object sender, AddWhereItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddWhereItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddWhereItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QueryDesignDataSetType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QueryDesignDataSetType)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void AnalyzeCompletedEventHandler(object sender, AnalyzeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AnalyzeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AnalyzeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QueryDesignDataSetType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QueryDesignDataSetType)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool bSuccess {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string pcMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void AnalyzeExCompletedEventHandler(object sender, AnalyzeExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AnalyzeExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AnalyzeExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QueryDesignDataSetType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QueryDesignDataSetType)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool bSuccess {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string pcMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void BeginPagingCompletedEventHandler(object sender, BeginPagingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BeginPagingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BeginPagingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string pagedQueryToken {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public int totalRowCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void BeginPagingForQueryIDCompletedEventHandler(object sender, BeginPagingForQueryIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BeginPagingForQueryIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BeginPagingForQueryIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string pagedQueryToken {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public int totalRowCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void BeginPagingForQueryIDParametrizedCompletedEventHandler(object sender, BeginPagingForQueryIDParametrizedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BeginPagingForQueryIDParametrizedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BeginPagingForQueryIDParametrizedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string pagedQueryToken {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public int totalRowCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void BeginPagingParametrizedCompletedEventHandler(object sender, BeginPagingParametrizedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BeginPagingParametrizedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BeginPagingParametrizedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string pagedQueryToken {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public int totalRowCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void ChangeAuthorCompletedEventHandler(object sender, ChangeAuthorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeAuthorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeAuthorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QueryDesignDataSetType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QueryDesignDataSetType)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void CheckFieldsCompletedEventHandler(object sender, CheckFieldsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckFieldsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckFieldsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QueryDesignDataSetType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QueryDesignDataSetType)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errFieldList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void CopyQueryCompletedEventHandler(object sender, CopyQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CopyQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CopyQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool pbSucceed {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void DeleteByIDCompletedEventHandler(object sender, DeleteByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void DeleteUnapprovedByIDCompletedEventHandler(object sender, DeleteUnapprovedByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteUnapprovedByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteUnapprovedByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void EndPagingCompletedEventHandler(object sender, EndPagingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EndPagingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EndPagingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void ExecuteCompletedEventHandler(object sender, ExecuteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void ExecuteByIDCompletedEventHandler(object sender, ExecuteByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void ExecuteByIDParametrizedCompletedEventHandler(object sender, ExecuteByIDParametrizedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteByIDParametrizedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteByIDParametrizedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool hasMoreRecords {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void ExecuteDashBoardQueryCompletedEventHandler(object sender, ExecuteDashBoardQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteDashBoardQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteDashBoardQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void ExecuteDashBoardQueryPagedCompletedEventHandler(object sender, ExecuteDashBoardQueryPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteDashBoardQueryPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteDashBoardQueryPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool pbMorePage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void ExecuteParametrizedCompletedEventHandler(object sender, ExecuteParametrizedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteParametrizedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteParametrizedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool hasMoreRecords {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void ExportCompletedEventHandler(object sender, ExportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QueryDesignDataSetType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QueryDesignDataSetType)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool pbSuccess {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void ExportByIDCompletedEventHandler(object sender, ExportByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string pcFile {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public bool pbSuccess {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string pbMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GenerateASPCompletedEventHandler(object sender, GenerateASPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateASPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateASPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ASPExportFieldDataSetType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ASPExportFieldDataSetType)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetASPFieldsCompletedEventHandler(object sender, GetASPFieldsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetASPFieldsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetASPFieldsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ASPExportFieldDataSetType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ASPExportFieldDataSetType)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetAvailableTableListCompletedEventHandler(object sender, GetAvailableTableListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAvailableTableListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAvailableTableListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AvailableTableListDataSetType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AvailableTableListDataSetType)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool morePages {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetByIDCompletedEventHandler(object sender, GetByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QueryDesignDataSetType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QueryDesignDataSetType)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetDashBoardQueriesCompletedEventHandler(object sender, GetDashBoardQueriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDashBoardQueriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDashBoardQueriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QueryDesignDataSetType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QueryDesignDataSetType)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public BAQRequestDataSetType dsOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BAQRequestDataSetType)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetDashBoardQueryCompletedEventHandler(object sender, GetDashBoardQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDashBoardQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDashBoardQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QueryDesignDataSetType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QueryDesignDataSetType)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetDBQueryByIDCompletedEventHandler(object sender, GetDBQueryByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDBQueryByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDBQueryByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string pcProcedure {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetDropDownListValuesCompletedEventHandler(object sender, GetDropDownListValuesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDropDownListValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDropDownListValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetDropDownListValuesParametrizedCompletedEventHandler(object sender, GetDropDownListValuesParametrizedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDropDownListValuesParametrizedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDropDownListValuesParametrizedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetFieldInfoCompletedEventHandler(object sender, GetFieldInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFieldInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFieldInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string fldType {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string fldSQLType {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public int fldLen {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public int fldPrecision {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public int fldScale {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public string fldFormat {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[6]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[7]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetFieldListCompletedEventHandler(object sender, GetFieldListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFieldListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFieldListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FieldListDataSetType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FieldListDataSetType)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetFiscalPeriodsCompletedEventHandler(object sender, GetFiscalPeriodsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFiscalPeriodsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFiscalPeriodsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FiscalPeriodListDataSetType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FiscalPeriodListDataSetType)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetListCompletedEventHandler(object sender, GetListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DynamicQueryListDataSetType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DynamicQueryListDataSetType)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool morePages {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetListFromLikeCompletedEventHandler(object sender, GetListFromLikeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListFromLikeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListFromLikeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DynamicQueryListDataSetType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DynamicQueryListDataSetType)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetNewQueryCompletedEventHandler(object sender, GetNewQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNewQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNewQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QueryDesignDataSetType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QueryDesignDataSetType)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetNewQueryRelationCompletedEventHandler(object sender, GetNewQueryRelationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNewQueryRelationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNewQueryRelationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QueryDesignDataSetType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QueryDesignDataSetType)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetNewQueryRelationFieldCompletedEventHandler(object sender, GetNewQueryRelationFieldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNewQueryRelationFieldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNewQueryRelationFieldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QueryDesignDataSetType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QueryDesignDataSetType)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetNewWhereItemCompletedEventHandler(object sender, GetNewWhereItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNewWhereItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNewWhereItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QueryDesignDataSetType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QueryDesignDataSetType)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetPageCompletedEventHandler(object sender, GetPageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool hasMorePages {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetProgressDBQueryByIDCompletedEventHandler(object sender, GetProgressDBQueryByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProgressDBQueryByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProgressDBQueryByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string pcProcedure {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetQueryByIDCompletedEventHandler(object sender, GetQueryByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQueryByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQueryByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QueryDesignDataSetType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QueryDesignDataSetType)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetQueryExecutionParametersCompletedEventHandler(object sender, GetQueryExecutionParametersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQueryExecutionParametersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQueryExecutionParametersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QueryExecutionDataSetType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QueryExecutionDataSetType)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetQueryExecutionParametersByIDCompletedEventHandler(object sender, GetQueryExecutionParametersByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQueryExecutionParametersByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQueryExecutionParametersByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QueryExecutionDataSetType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QueryExecutionDataSetType)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetRelatedTablesCompletedEventHandler(object sender, GetRelatedTablesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRelatedTablesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRelatedTablesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RelatedTableDataSetType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RelatedTableDataSetType)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetRowsCompletedEventHandler(object sender, GetRowsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRowsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRowsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QueryDesignDataSetType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QueryDesignDataSetType)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool morePages {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetTableExecutionOrderCompletedEventHandler(object sender, GetTableExecutionOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTableExecutionOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTableExecutionOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QueryDesignDataSetType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QueryDesignDataSetType)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string tableList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetUnapprovedByIDCompletedEventHandler(object sender, GetUnapprovedByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUnapprovedByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUnapprovedByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QueryDesignDataSetType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QueryDesignDataSetType)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void ImportDynamicQueryCompletedEventHandler(object sender, ImportDynamicQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImportDynamicQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImportDynamicQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QueryDesignDataSetType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QueryDesignDataSetType)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool bOK {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void osquery_onExpVarCompletedEventHandler(object sender, osquery_onExpVarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class osquery_onExpVarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal osquery_onExpVarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void ParseTablesCompletedEventHandler(object sender, ParseTablesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ParseTablesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ParseTablesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ParsedTableDataSetType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ParsedTableDataSetType)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void RemoveQueryFieldsCompletedEventHandler(object sender, RemoveQueryFieldsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveQueryFieldsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveQueryFieldsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QueryDesignDataSetType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QueryDesignDataSetType)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void SaveQueryCompletedEventHandler(object sender, SaveQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool pbSucceed {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public CallContextDataSetType callContextOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallContextDataSetType)(this.results[2]));
            }
        }
    }
}

#pragma warning restore 1591